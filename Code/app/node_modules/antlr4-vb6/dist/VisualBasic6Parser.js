// Generated from ./src/VisualBasic6.g4 by ANTLR 4.5.3
// jshint ignore: start
var antlr4 = require('antlr4/index');
var grammarFileName = "VisualBasic6.g4";

var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0003\u00d6\u0a2f\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004",
    "\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007",
    "\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f",
    "\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010",
    "\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014",
    "\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017",
    "\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b",
    "\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e",
    "\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#\t#\u0004",
    "$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004*\t*\u0004",
    "+\t+\u0004,\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u00041\t1\u0004",
    "2\t2\u00043\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u00048\t8\u0004",
    "9\t9\u0004:\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004?\t?\u0004",
    "@\t@\u0004A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004F\tF\u0004",
    "G\tG\u0004H\tH\u0004I\tI\u0004J\tJ\u0004K\tK\u0004L\tL\u0004M\tM\u0004",
    "N\tN\u0004O\tO\u0004P\tP\u0004Q\tQ\u0004R\tR\u0004S\tS\u0004T\tT\u0004",
    "U\tU\u0004V\tV\u0004W\tW\u0004X\tX\u0004Y\tY\u0004Z\tZ\u0004[\t[\u0004",
    "\\\t\\\u0004]\t]\u0004^\t^\u0004_\t_\u0004`\t`\u0004a\ta\u0004b\tb\u0004",
    "c\tc\u0004d\td\u0004e\te\u0004f\tf\u0004g\tg\u0004h\th\u0004i\ti\u0004",
    "j\tj\u0004k\tk\u0004l\tl\u0004m\tm\u0004n\tn\u0004o\to\u0004p\tp\u0004",
    "q\tq\u0004r\tr\u0004s\ts\u0004t\tt\u0004u\tu\u0004v\tv\u0004w\tw\u0004",
    "x\tx\u0004y\ty\u0004z\tz\u0004{\t{\u0004|\t|\u0004}\t}\u0004~\t~\u0004",
    "\u007f\t\u007f\u0004\u0080\t\u0080\u0004\u0081\t\u0081\u0004\u0082\t",
    "\u0082\u0004\u0083\t\u0083\u0004\u0084\t\u0084\u0004\u0085\t\u0085\u0004",
    "\u0086\t\u0086\u0004\u0087\t\u0087\u0004\u0088\t\u0088\u0004\u0089\t",
    "\u0089\u0004\u008a\t\u008a\u0004\u008b\t\u008b\u0004\u008c\t\u008c\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0005\u0003\u011d\n\u0003",
    "\u0003\u0003\u0007\u0003\u0120\n\u0003\f\u0003\u000e\u0003\u0123\u000b",
    "\u0003\u0003\u0003\u0003\u0003\u0006\u0003\u0127\n\u0003\r\u0003\u000e",
    "\u0003\u0128\u0005\u0003\u012b\n\u0003\u0003\u0003\u0005\u0003\u012e",
    "\n\u0003\u0003\u0003\u0007\u0003\u0131\n\u0003\f\u0003\u000e\u0003\u0134",
    "\u000b\u0003\u0003\u0003\u0005\u0003\u0137\n\u0003\u0003\u0003\u0007",
    "\u0003\u013a\n\u0003\f\u0003\u000e\u0003\u013d\u000b\u0003\u0003\u0003",
    "\u0005\u0003\u0140\n\u0003\u0003\u0003\u0007\u0003\u0143\n\u0003\f\u0003",
    "\u000e\u0003\u0146\u000b\u0003\u0003\u0003\u0005\u0003\u0149\n\u0003",
    "\u0003\u0003\u0007\u0003\u014c\n\u0003\f\u0003\u000e\u0003\u014f\u000b",
    "\u0003\u0003\u0003\u0005\u0003\u0152\n\u0003\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005",
    "\u0006\u0005\u015c\n\u0005\r\u0005\u000e\u0005\u015d\u0003\u0005\u0006",
    "\u0005\u0161\n\u0005\r\u0005\u000e\u0005\u0162\u0003\u0005\u0003\u0005",
    "\u0006\u0005\u0167\n\u0005\r\u0005\u000e\u0005\u0168\u0003\u0006\u0003",
    "\u0006\u0005\u0006\u016d\n\u0006\u0003\u0006\u0003\u0006\u0005\u0006",
    "\u0171\n\u0006\u0003\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003",
    "\u0007\u0006\u0007\u0178\n\u0007\r\u0007\u000e\u0007\u0179\u0006\u0007",
    "\u017c\n\u0007\r\u0007\u000e\u0007\u017d\u0003\b\u0003\b\u0006\b\u0182",
    "\n\b\r\b\u000e\b\u0183\u0006\b\u0186\n\b\r\b\u000e\b\u0187\u0003\t\u0003",
    "\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0005\t\u0192\n\t",
    "\u0003\n\u0003\n\u0006\n\u0196\n\n\r\n\u000e\n\u0197\u0003\n\u0007\n",
    "\u019b\n\n\f\n\u000e\n\u019e\u000b\n\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0003\u000b\u0003\u000b\u0005\u000b\u01ab\n\u000b\u0003\f\u0003\f\u0003",
    "\r\u0003\r\u0003\r\u0003\r\u0005\r\u01b3\n\r\u0003\r\u0003\r\u0005\r",
    "\u01b7\n\r\u0003\r\u0003\r\u0005\r\u01bb\n\r\u0003\r\u0003\r\u0005\r",
    "\u01bf\n\r\u0003\r\u0007\r\u01c2\n\r\f\r\u000e\r\u01c5\u000b\r\u0003",
    "\u000e\u0003\u000e\u0006\u000e\u01c9\n\u000e\r\u000e\u000e\u000e\u01ca",
    "\u0003\u000e\u0005\u000e\u01ce\n\u000e\u0003\u000e\u0007\u000e\u01d1",
    "\n\u000e\f\u000e\u000e\u000e\u01d4\u000b\u000e\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0005\u000f",
    "\u0219\n\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0005",
    "\u0010\u021f\n\u0010\u0003\u0010\u0003\u0010\u0005\u0010\u0223\n\u0010",
    "\u0003\u0010\u0005\u0010\u0226\n\u0010\u0003\u0011\u0003\u0011\u0003",
    "\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003",
    "\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0005",
    "\u0014\u0236\n\u0014\u0003\u0014\u0003\u0014\u0005\u0014\u023a\n\u0014",
    "\u0003\u0014\u0007\u0014\u023d\n\u0014\f\u0014\u000e\u0014\u0240\u000b",
    "\u0014\u0005\u0014\u0242\n\u0014\u0003\u0015\u0003\u0015\u0003\u0015",
    "\u0005\u0015\u0247\n\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003",
    "\u0015\u0005\u0015\u024d\n\u0015\u0003\u0015\u0003\u0015\u0005\u0015",
    "\u0251\n\u0015\u0003\u0015\u0007\u0015\u0254\n\u0015\f\u0015\u000e\u0015",
    "\u0257\u000b\u0015\u0003\u0016\u0003\u0016\u0005\u0016\u025b\n\u0016",
    "\u0003\u0016\u0003\u0016\u0005\u0016\u025f\n\u0016\u0003\u0016\u0005",
    "\u0016\u0262\n\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u0266\n\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0005\u0017\u026c\n",
    "\u0017\u0003\u0017\u0003\u0017\u0005\u0017\u0270\n\u0017\u0003\u0017",
    "\u0003\u0017\u0003\u0018\u0003\u0018\u0003\u0018\u0005\u0018\u0277\n",
    "\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0005\u0018\u027d",
    "\n\u0018\u0003\u0018\u0005\u0018\u0280\n\u0018\u0003\u0018\u0003\u0018",
    "\u0003\u0018\u0005\u0018\u0285\n\u0018\u0003\u0018\u0003\u0018\u0003",
    "\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0005",
    "\u0018\u028f\n\u0018\u0003\u0018\u0005\u0018\u0292\n\u0018\u0003\u0018",
    "\u0005\u0018\u0295\n\u0018\u0003\u0018\u0003\u0018\u0005\u0018\u0299",
    "\n\u0018\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0005\u0019",
    "\u029f\n\u0019\u0003\u0019\u0003\u0019\u0005\u0019\u02a3\n\u0019\u0003",
    "\u0019\u0007\u0019\u02a6\n\u0019\f\u0019\u000e\u0019\u02a9\u000b\u0019",
    "\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0005\u001a\u02af\n",
    "\u001a\u0003\u001a\u0003\u001a\u0005\u001a\u02b3\n\u001a\u0003\u001a",
    "\u0003\u001a\u0005\u001a\u02b7\n\u001a\u0003\u001a\u0003\u001a\u0005",
    "\u001a\u02bb\n\u001a\u0003\u001a\u0005\u001a\u02be\n\u001a\u0003\u001b",
    "\u0003\u001b\u0006\u001b\u02c2\n\u001b\r\u001b\u000e\u001b\u02c3\u0003",
    "\u001b\u0003\u001b\u0006\u001b\u02c8\n\u001b\r\u001b\u000e\u001b\u02c9",
    "\u0005\u001b\u02cc\n\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003",
    "\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0006\u001b\u02d5\n\u001b",
    "\r\u001b\u000e\u001b\u02d6\u0003\u001b\u0003\u001b\u0006\u001b\u02db",
    "\n\u001b\r\u001b\u000e\u001b\u02dc\u0005\u001b\u02df\n\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0006\u001b\u02e5\n\u001b\r\u001b",
    "\u000e\u001b\u02e6\u0003\u001b\u0003\u001b\u0006\u001b\u02eb\n\u001b",
    "\r\u001b\u000e\u001b\u02ec\u0003\u001b\u0003\u001b\u0003\u001b\u0003",
    "\u001b\u0003\u001b\u0003\u001b\u0005\u001b\u02f5\n\u001b\u0003\u001c",
    "\u0003\u001c\u0003\u001d\u0003\u001d\u0003\u001d\u0005\u001d\u02fc\n",
    "\u001d\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001d\u0006\u001d\u0302",
    "\n\u001d\r\u001d\u000e\u001d\u0303\u0003\u001d\u0007\u001d\u0307\n\u001d",
    "\f\u001d\u000e\u001d\u030a\u000b\u001d\u0003\u001d\u0003\u001d\u0003",
    "\u001e\u0003\u001e\u0005\u001e\u0310\n\u001e\u0003\u001e\u0003\u001e",
    "\u0005\u001e\u0314\n\u001e\u0003\u001e\u0005\u001e\u0317\n\u001e\u0003",
    "\u001e\u0006\u001e\u031a\n\u001e\r\u001e\u000e\u001e\u031b\u0003\u001f",
    "\u0003\u001f\u0003\u001f\u0003\u001f\u0005\u001f\u0322\n\u001f\u0003",
    "\u001f\u0003\u001f\u0005\u001f\u0326\n\u001f\u0003\u001f\u0007\u001f",
    "\u0329\n\u001f\f\u001f\u000e\u001f\u032c\u000b\u001f\u0003 \u0003 \u0003",
    " \u0003 \u0003!\u0003!\u0003!\u0005!\u0335\n!\u0003!\u0003!\u0003!\u0003",
    "!\u0005!\u033b\n!\u0003!\u0003!\u0003\"\u0003\"\u0003#\u0003#\u0003",
    "#\u0003#\u0005#\u0345\n#\u0003#\u0003#\u0005#\u0349\n#\u0003#\u0003",
    "#\u0003$\u0003$\u0003$\u0003$\u0003$\u0003$\u0005$\u0353\n$\u0003$\u0003",
    "$\u0003$\u0003$\u0003$\u0006$\u035a\n$\r$\u000e$\u035b\u0003$\u0003",
    "$\u0006$\u0360\n$\r$\u000e$\u0361\u0005$\u0364\n$\u0003$\u0003$\u0003",
    "$\u0005$\u0369\n$\u0003%\u0003%\u0003%\u0003%\u0005%\u036f\n%\u0003",
    "%\u0003%\u0005%\u0373\n%\u0003%\u0005%\u0376\n%\u0003%\u0003%\u0005",
    "%\u037a\n%\u0003%\u0003%\u0003%\u0003%\u0003%\u0003%\u0003%\u0003%\u0003",
    "%\u0005%\u0385\n%\u0003%\u0006%\u0388\n%\r%\u000e%\u0389\u0003%\u0003",
    "%\u0006%\u038e\n%\r%\u000e%\u038f\u0005%\u0392\n%\u0003%\u0003%\u0003",
    "%\u0005%\u0397\n%\u0003&\u0003&\u0003&\u0005&\u039c\n&\u0003&\u0003",
    "&\u0005&\u03a0\n&\u0003&\u0003&\u0003&\u0003&\u0005&\u03a6\n&\u0003",
    "&\u0005&\u03a9\n&\u0003&\u0003&\u0005&\u03ad\n&\u0003&\u0006&\u03b0",
    "\n&\r&\u000e&\u03b1\u0003&\u0003&\u0006&\u03b6\n&\r&\u000e&\u03b7\u0005",
    "&\u03ba\n&\u0003&\u0003&\u0003\'\u0003\'\u0003\'\u0003\'\u0005\'\u03c2",
    "\n\'\u0003\'\u0003\'\u0005\'\u03c6\n\'\u0003\'\u0005\'\u03c9\n\'\u0003",
    "\'\u0005\'\u03cc\n\'\u0003\'\u0003\'\u0005\'\u03d0\n\'\u0003\'\u0003",
    "\'\u0003(\u0003(\u0003(\u0003(\u0003)\u0003)\u0003)\u0003)\u0003*\u0003",
    "*\u0003*\u0003*\u0003*\u0003*\u0003*\u0003*\u0003*\u0003*\u0003*\u0005",
    "*\u03e7\n*\u0003*\u0003*\u0007*\u03eb\n*\f*\u000e*\u03ee\u000b*\u0003",
    "*\u0005*\u03f1\n*\u0003*\u0003*\u0005*\u03f5\n*\u0003+\u0003+\u0003",
    "+\u0003+\u0003+\u0003+\u0006+\u03fd\n+\r+\u000e+\u03fe\u0003+\u0003",
    "+\u0006+\u0403\n+\r+\u000e+\u0404\u0005+\u0407\n+\u0003,\u0003,\u0003",
    "-\u0003-\u0003-\u0003-\u0003-\u0003-\u0006-\u0411\n-\r-\u000e-\u0412",
    "\u0003-\u0003-\u0006-\u0417\n-\r-\u000e-\u0418\u0005-\u041b\n-\u0003",
    ".\u0003.\u0006.\u041f\n.\r.\u000e.\u0420\u0003.\u0003.\u0006.\u0425",
    "\n.\r.\u000e.\u0426\u0005.\u0429\n.\u0003/\u0003/\u0003/\u0003/\u0003",
    "0\u00030\u00030\u00030\u00050\u0433\n0\u00030\u00030\u00050\u0437\n",
    "0\u00030\u00060\u043a\n0\r0\u000e0\u043b\u00031\u00031\u00031\u0003",
    "1\u00032\u00032\u00052\u0444\n2\u00032\u00032\u00052\u0448\n2\u0003",
    "2\u00032\u00052\u044c\n2\u00032\u00032\u00033\u00033\u00033\u00033\u0005",
    "3\u0454\n3\u00033\u00033\u00053\u0458\n3\u00033\u00033\u00034\u0003",
    "4\u00034\u00034\u00035\u00035\u00035\u00035\u00055\u0464\n5\u00035\u0003",
    "5\u00055\u0468\n5\u00035\u00035\u00035\u00035\u00035\u00055\u046f\n",
    "5\u00055\u0471\n5\u00036\u00036\u00036\u00036\u00056\u0477\n6\u0003",
    "6\u00036\u00056\u047b\n6\u00036\u00036\u00037\u00037\u00077\u0481\n",
    "7\f7\u000e7\u0484\u000b7\u00037\u00057\u0487\n7\u00037\u00037\u0003",
    "8\u00038\u00038\u00038\u00038\u00038\u00068\u0491\n8\r8\u000e8\u0492",
    "\u00038\u00038\u00068\u0497\n8\r8\u000e8\u0498\u00058\u049b\n8\u0003",
    "9\u00039\u00039\u00039\u00039\u00039\u00069\u04a3\n9\r9\u000e9\u04a4",
    "\u00039\u00039\u00069\u04a9\n9\r9\u000e9\u04aa\u00059\u04ad\n9\u0003",
    ":\u0003:\u0006:\u04b1\n:\r:\u000e:\u04b2\u0003:\u0003:\u0006:\u04b7",
    "\n:\r:\u000e:\u04b8\u0005:\u04bb\n:\u0003;\u0003;\u0005;\u04bf\n;\u0003",
    ";\u0003;\u0005;\u04c3\n;\u0003;\u0003;\u0005;\u04c7\n;\u0003;\u0003",
    ";\u0003<\u0003<\u0003<\u0003<\u0003=\u0003=\u0003=\u0003=\u0003=\u0003",
    "=\u0003=\u0003=\u0003>\u0003>\u0003>\u0003>\u0003>\u0003>\u0003>\u0003",
    ">\u0005>\u04df\n>\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003",
    "?\u0005?\u04e9\n?\u0003?\u0003?\u0005?\u04ed\n?\u0003?\u0007?\u04f0",
    "\n?\f?\u000e?\u04f3\u000b?\u0003@\u0003@\u0003@\u0003@\u0003@\u0003",
    "@\u0003@\u0003@\u0005@\u04fd\n@\u0003@\u0003@\u0005@\u0501\n@\u0003",
    "@\u0007@\u0504\n@\f@\u000e@\u0507\u000b@\u0003A\u0003A\u0003A\u0003",
    "A\u0003A\u0003A\u0003A\u0003A\u0003A\u0003A\u0003A\u0005A\u0514\nA\u0003",
    "A\u0003A\u0005A\u0518\nA\u0003A\u0003A\u0003A\u0003A\u0003A\u0003A\u0003",
    "A\u0005A\u0521\nA\u0003A\u0003A\u0005A\u0525\nA\u0003A\u0005A\u0528",
    "\nA\u0003B\u0003B\u0005B\u052c\nB\u0003B\u0003B\u0005B\u0530\nB\u0003",
    "B\u0005B\u0533\nB\u0007B\u0535\nB\fB\u000eB\u0538\u000bB\u0003B\u0005",
    "B\u053b\nB\u0003B\u0005B\u053e\nB\u0003B\u0003B\u0005B\u0542\nB\u0003",
    "B\u0005B\u0545\nB\u0006B\u0547\nB\rB\u000eB\u0548\u0005B\u054b\nB\u0003",
    "C\u0003C\u0003C\u0005C\u0550\nC\u0003C\u0003C\u0005C\u0554\nC\u0003",
    "C\u0003C\u0005C\u0558\nC\u0003C\u0003C\u0005C\u055c\nC\u0005C\u055e",
    "\nC\u0003D\u0003D\u0003D\u0003D\u0005D\u0564\nD\u0003D\u0003D\u0005",
    "D\u0568\nD\u0003D\u0005D\u056b\nD\u0003E\u0003E\u0003E\u0005E\u0570",
    "\nE\u0003E\u0003E\u0005E\u0574\nE\u0003E\u0003E\u0003E\u0003E\u0005",
    "E\u057a\nE\u0003E\u0005E\u057d\nE\u0003E\u0005E\u0580\nE\u0003E\u0003",
    "E\u0005E\u0584\nE\u0003E\u0006E\u0587\nE\rE\u000eE\u0588\u0003E\u0003",
    "E\u0006E\u058d\nE\rE\u000eE\u058e\u0005E\u0591\nE\u0003E\u0003E\u0003",
    "F\u0003F\u0003F\u0005F\u0598\nF\u0003F\u0003F\u0005F\u059c\nF\u0003",
    "F\u0003F\u0003F\u0003F\u0005F\u05a2\nF\u0003F\u0005F\u05a5\nF\u0003",
    "F\u0006F\u05a8\nF\rF\u000eF\u05a9\u0003F\u0003F\u0006F\u05ae\nF\rF\u000e",
    "F\u05af\u0005F\u05b2\nF\u0003F\u0003F\u0003G\u0003G\u0003G\u0005G\u05b9",
    "\nG\u0003G\u0003G\u0005G\u05bd\nG\u0003G\u0003G\u0003G\u0003G\u0005",
    "G\u05c3\nG\u0003G\u0005G\u05c6\nG\u0003G\u0006G\u05c9\nG\rG\u000eG\u05ca",
    "\u0003G\u0003G\u0006G\u05cf\nG\rG\u000eG\u05d0\u0005G\u05d3\nG\u0003",
    "G\u0003G\u0003H\u0003H\u0003H\u0003H\u0005H\u05db\nH\u0003H\u0003H\u0005",
    "H\u05df\nH\u0003H\u0005H\u05e2\nH\u0003H\u0005H\u05e5\nH\u0003H\u0003",
    "H\u0005H\u05e9\nH\u0003H\u0003H\u0003I\u0003I\u0003I\u0003I\u0005I\u05f1",
    "\nI\u0003I\u0003I\u0005I\u05f5\nI\u0003I\u0003I\u0005I\u05f9\nI\u0005",
    "I\u05fb\nI\u0003I\u0005I\u05fe\nI\u0003J\u0003J\u0003J\u0005J\u0603",
    "\nJ\u0003K\u0003K\u0003K\u0003K\u0005K\u0609\nK\u0003K\u0003K\u0005",
    "K\u060d\nK\u0003K\u0003K\u0005K\u0611\nK\u0003K\u0007K\u0614\nK\fK\u000e",
    "K\u0617\u000bK\u0003L\u0003L\u0005L\u061b\nL\u0003L\u0003L\u0005L\u061f",
    "\nL\u0003L\u0003L\u0005L\u0623\nL\u0003L\u0003L\u0003L\u0005L\u0628",
    "\nL\u0003M\u0003M\u0003N\u0003N\u0003N\u0003N\u0005N\u0630\nN\u0005",
    "N\u0632\nN\u0003O\u0003O\u0003P\u0003P\u0003P\u0003P\u0003Q\u0003Q\u0003",
    "Q\u0003Q\u0005Q\u063e\nQ\u0003Q\u0003Q\u0005Q\u0642\nQ\u0003Q\u0003",
    "Q\u0003R\u0003R\u0003R\u0003R\u0005R\u064a\nR\u0003R\u0003R\u0005R\u064e",
    "\nR\u0003R\u0003R\u0003S\u0003S\u0003S\u0003S\u0005S\u0656\nS\u0003",
    "S\u0003S\u0005S\u065a\nS\u0003S\u0003S\u0005S\u065e\nS\u0003S\u0003",
    "S\u0005S\u0662\nS\u0003S\u0003S\u0005S\u0666\nS\u0003S\u0003S\u0005",
    "S\u066a\nS\u0003S\u0003S\u0003T\u0003T\u0003T\u0003T\u0005T\u0672\n",
    "T\u0003T\u0003T\u0005T\u0676\nT\u0003T\u0003T\u0003U\u0003U\u0003U\u0003",
    "U\u0003U\u0003U\u0006U\u0680\nU\rU\u000eU\u0681\u0003U\u0007U\u0685",
    "\nU\fU\u000eU\u0688\u000bU\u0003U\u0005U\u068b\nU\u0003U\u0003U\u0003",
    "V\u0003V\u0003V\u0003V\u0005V\u0693\nV\u0003V\u0005V\u0696\nV\u0003",
    "V\u0007V\u0699\nV\fV\u000eV\u069c\u000bV\u0003V\u0006V\u069f\nV\rV\u000e",
    "V\u06a0\u0005V\u06a3\nV\u0003V\u0003V\u0006V\u06a7\nV\rV\u000eV\u06a8",
    "\u0005V\u06ab\nV\u0003W\u0003W\u0003W\u0005W\u06b0\nW\u0003W\u0003W",
    "\u0005W\u06b4\nW\u0003W\u0003W\u0003W\u0003W\u0005W\u06ba\nW\u0003W",
    "\u0003W\u0005W\u06be\nW\u0003W\u0007W\u06c1\nW\fW\u000eW\u06c4\u000b",
    "W\u0003W\u0003W\u0003W\u0003W\u0003W\u0003W\u0005W\u06cc\nW\u0003W\u0003",
    "W\u0005W\u06d0\nW\u0003W\u0007W\u06d3\nW\fW\u000eW\u06d6\u000bW\u0005",
    "W\u06d8\nW\u0003X\u0003X\u0003X\u0003X\u0005X\u06de\nX\u0003X\u0003",
    "X\u0005X\u06e2\nX\u0003X\u0005X\u06e5\nX\u0003Y\u0003Y\u0003Y\u0003",
    "Y\u0005Y\u06eb\nY\u0003Y\u0003Y\u0005Y\u06ef\nY\u0003Y\u0003Y\u0003",
    "Z\u0003Z\u0003Z\u0003Z\u0005Z\u06f7\nZ\u0003Z\u0003Z\u0005Z\u06fb\n",
    "Z\u0003Z\u0003Z\u0003[\u0003[\u0003\\\u0003\\\u0003\\\u0005\\\u0704",
    "\n\\\u0003\\\u0003\\\u0005\\\u0708\n\\\u0003\\\u0003\\\u0003\\\u0003",
    "\\\u0005\\\u070e\n\\\u0003\\\u0005\\\u0711\n\\\u0003\\\u0006\\\u0714",
    "\n\\\r\\\u000e\\\u0715\u0003\\\u0003\\\u0006\\\u071a\n\\\r\\\u000e\\",
    "\u071b\u0005\\\u071e\n\\\u0003\\\u0003\\\u0003]\u0003]\u0005]\u0724",
    "\n]\u0003]\u0003]\u0005]\u0728\n]\u0003]\u0003]\u0003^\u0003^\u0003",
    "^\u0005^\u072f\n^\u0003^\u0003^\u0003^\u0003^\u0006^\u0735\n^\r^\u000e",
    "^\u0736\u0003^\u0007^\u073a\n^\f^\u000e^\u073d\u000b^\u0003^\u0003^",
    "\u0003_\u0003_\u0005_\u0743\n_\u0003_\u0003_\u0005_\u0747\n_\u0003_",
    "\u0005_\u074a\n_\u0003_\u0005_\u074d\n_\u0003_\u0005_\u0750\n_\u0003",
    "_\u0003_\u0005_\u0754\n_\u0003_\u0006_\u0757\n_\r_\u000e_\u0758\u0003",
    "`\u0003`\u0003`\u0003`\u0003`\u0003`\u0003`\u0005`\u0762\n`\u0003a\u0003",
    "a\u0003a\u0003a\u0003b\u0003b\u0003b\u0003b\u0005b\u076c\nb\u0003b\u0003",
    "b\u0005b\u0770\nb\u0003b\u0003b\u0003b\u0003b\u0003b\u0005b\u0777\n",
    "b\u0005b\u0779\nb\u0003c\u0003c\u0003c\u0003c\u0003c\u0005c\u0780\n",
    "c\u0003c\u0003c\u0005c\u0784\nc\u0003c\u0003c\u0005c\u0788\nc\u0003",
    "c\u0007c\u078b\nc\fc\u000ec\u078e\u000bc\u0003c\u0003c\u0003c\u0003",
    "c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0005c\u079c",
    "\nc\u0003c\u0003c\u0005c\u07a0\nc\u0003c\u0003c\u0003c\u0003c\u0005",
    "c\u07a6\nc\u0003c\u0003c\u0003c\u0005c\u07ab\nc\u0003c\u0003c\u0003",
    "c\u0003c\u0005c\u07b1\nc\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003",
    "c\u0003c\u0003c\u0003c\u0003c\u0003c\u0005c\u07bf\nc\u0003c\u0003c\u0005",
    "c\u07c3\nc\u0003c\u0003c\u0003c\u0005c\u07c8\nc\u0003c\u0003c\u0005",
    "c\u07cc\nc\u0003c\u0003c\u0003c\u0005c\u07d1\nc\u0003c\u0003c\u0005",
    "c\u07d5\nc\u0003c\u0003c\u0003c\u0005c\u07da\nc\u0003c\u0003c\u0005",
    "c\u07de\nc\u0003c\u0003c\u0003c\u0005c\u07e3\nc\u0003c\u0003c\u0005",
    "c\u07e7\nc\u0003c\u0003c\u0003c\u0005c\u07ec\nc\u0003c\u0003c\u0005",
    "c\u07f0\nc\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0005",
    "c\u07fa\nc\u0003c\u0003c\u0005c\u07fe\nc\u0003c\u0003c\u0003c\u0005",
    "c\u0803\nc\u0003c\u0003c\u0005c\u0807\nc\u0003c\u0003c\u0003c\u0005",
    "c\u080c\nc\u0003c\u0003c\u0005c\u0810\nc\u0003c\u0003c\u0003c\u0005",
    "c\u0815\nc\u0003c\u0003c\u0005c\u0819\nc\u0003c\u0003c\u0003c\u0005",
    "c\u081e\nc\u0003c\u0003c\u0005c\u0822\nc\u0003c\u0003c\u0003c\u0005",
    "c\u0827\nc\u0003c\u0003c\u0005c\u082b\nc\u0003c\u0003c\u0003c\u0003",
    "c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003c\u0005",
    "c\u083a\nc\u0003c\u0003c\u0005c\u083e\nc\u0003c\u0003c\u0003c\u0005",
    "c\u0843\nc\u0003c\u0003c\u0005c\u0847\nc\u0003c\u0003c\u0003c\u0003",
    "c\u0003c\u0003c\u0007c\u084f\nc\fc\u000ec\u0852\u000bc\u0003d\u0003",
    "d\u0003d\u0005d\u0857\nd\u0003d\u0003d\u0003d\u0005d\u085c\nd\u0003",
    "d\u0003d\u0003e\u0003e\u0005e\u0862\ne\u0003e\u0003e\u0005e\u0866\n",
    "e\u0003e\u0007e\u0869\ne\fe\u000ee\u086c\u000be\u0003f\u0003f\u0005",
    "f\u0870\nf\u0003f\u0003f\u0005f\u0874\nf\u0003f\u0003f\u0005f\u0878",
    "\nf\u0005f\u087a\nf\u0003f\u0003f\u0005f\u087e\nf\u0005f\u0880\nf\u0003",
    "f\u0005f\u0883\nf\u0003f\u0003f\u0005f\u0887\nf\u0003g\u0003g\u0003",
    "g\u0003g\u0006g\u088d\ng\rg\u000eg\u088e\u0003g\u0003g\u0003g\u0007",
    "g\u0894\ng\fg\u000eg\u0897\u000bg\u0003g\u0003g\u0003h\u0003h\u0003",
    "h\u0003h\u0005h\u089f\nh\u0003h\u0003h\u0005h\u08a3\nh\u0003h\u0003",
    "h\u0003i\u0003i\u0003i\u0003i\u0006i\u08ab\ni\ri\u000ei\u08ac\u0003",
    "i\u0003i\u0006i\u08b1\ni\ri\u000ei\u08b2\u0005i\u08b5\ni\u0003i\u0003",
    "i\u0003j\u0003j\u0003j\u0003j\u0005j\u08bd\nj\u0003j\u0003j\u0005j\u08c1",
    "\nj\u0003j\u0005j\u08c4\nj\u0003k\u0003k\u0005k\u08c8\nk\u0003l\u0003",
    "l\u0003l\u0003l\u0005l\u08ce\nl\u0003l\u0005l\u08d1\nl\u0003l\u0003",
    "l\u0005l\u08d5\nl\u0003l\u0003l\u0005l\u08d9\nl\u0003l\u0003l\u0005",
    "l\u08dd\nl\u0003m\u0003m\u0003m\u0005m\u08e2\nm\u0003m\u0003m\u0003",
    "m\u0005m\u08e7\nm\u0003m\u0005m\u08ea\nm\u0003m\u0003m\u0005m\u08ee",
    "\nm\u0003m\u0003m\u0005m\u08f2\nm\u0003m\u0003m\u0005m\u08f6\nm\u0003",
    "n\u0003n\u0005n\u08fa\nn\u0003o\u0003o\u0003o\u0005o\u08ff\no\u0003",
    "p\u0005p\u0902\np\u0003p\u0003p\u0003p\u0005p\u0907\np\u0003p\u0003",
    "p\u0005p\u090b\np\u0003p\u0005p\u090e\np\u0003q\u0003q\u0003q\u0003",
    "q\u0005q\u0914\nq\u0003r\u0003r\u0005r\u0918\nr\u0003r\u0005r\u091b",
    "\nr\u0003s\u0003s\u0005s\u091f\ns\u0003s\u0005s\u0922\ns\u0003s\u0005",
    "s\u0925\ns\u0003s\u0003s\u0005s\u0929\ns\u0003s\u0003s\u0005s\u092d",
    "\ns\u0005s\u092f\ns\u0003s\u0003s\u0005s\u0933\ns\u0003t\u0003t\u0005",
    "t\u0937\nt\u0003t\u0006t\u093a\nt\rt\u000et\u093b\u0003t\u0005t\u093f",
    "\nt\u0003u\u0003u\u0003u\u0005u\u0944\nu\u0003v\u0003v\u0003w\u0005",
    "w\u0949\nw\u0003w\u0005w\u094c\nw\u0003w\u0003w\u0005w\u0950\nw\u0007",
    "w\u0952\nw\fw\u000ew\u0955\u000bw\u0003w\u0003w\u0005w\u0959\nw\u0003",
    "w\u0003w\u0005w\u095d\nw\u0003w\u0005w\u0960\nw\u0007w\u0962\nw\fw\u000e",
    "w\u0965\u000bw\u0003x\u0003x\u0005x\u0969\nx\u0003x\u0003x\u0003y\u0003",
    "y\u0003y\u0005y\u0970\ny\u0003z\u0003z\u0005z\u0974\nz\u0003z\u0003",
    "z\u0005z\u0978\nz\u0003z\u0003z\u0005z\u097c\nz\u0003z\u0007z\u097f",
    "\nz\fz\u000ez\u0982\u000bz\u0005z\u0984\nz\u0003z\u0005z\u0987\nz\u0003",
    "z\u0003z\u0003{\u0003{\u0005{\u098d\n{\u0003{\u0003{\u0005{\u0991\n",
    "{\u0003{\u0003{\u0005{\u0995\n{\u0003{\u0003{\u0005{\u0999\n{\u0003",
    "{\u0003{\u0005{\u099d\n{\u0003{\u0005{\u09a0\n{\u0003{\u0003{\u0005",
    "{\u09a4\n{\u0003{\u0005{\u09a7\n{\u0003{\u0005{\u09aa\n{\u0003|\u0003",
    "|\u0005|\u09ae\n|\u0003|\u0003|\u0005|\u09b2\n|\u0003}\u0003}\u0005",
    "}\u09b6\n}\u0003}\u0003}\u0005}\u09ba\n}\u0003}\u0007}\u09bd\n}\f}\u000e",
    "}\u09c0\u000b}\u0003~\u0003~\u0003~\u0003~\u0003~\u0005~\u09c7\n~\u0003",
    "~\u0003~\u0003\u007f\u0003\u007f\u0006\u007f\u09cd\n\u007f\r\u007f\u000e",
    "\u007f\u09ce\u0003\u007f\u0003\u007f\u0003\u007f\u0006\u007f\u09d4\n",
    "\u007f\r\u007f\u000e\u007f\u09d5\u0003\u007f\u0005\u007f\u09d9\n\u007f",
    "\u0003\u0080\u0003\u0080\u0003\u0080\u0003\u0080\u0005\u0080\u09df\n",
    "\u0080\u0003\u0080\u0003\u0080\u0003\u0080\u0005\u0080\u09e4\n\u0080",
    "\u0003\u0081\u0003\u0081\u0003\u0082\u0003\u0082\u0003\u0082\u0007\u0082",
    "\u09eb\n\u0082\f\u0082\u000e\u0082\u09ee\u000b\u0082\u0003\u0082\u0003",
    "\u0082\u0003\u0082\u0006\u0082\u09f3\n\u0082\r\u0082\u000e\u0082\u09f4",
    "\u0005\u0082\u09f7\n\u0082\u0003\u0083\u0003\u0083\u0003\u0084\u0003",
    "\u0084\u0003\u0084\u0007\u0084\u09fe\n\u0084\f\u0084\u000e\u0084\u0a01",
    "\u000b\u0084\u0003\u0085\u0003\u0085\u0005\u0085\u0a05\n\u0085\u0003",
    "\u0085\u0003\u0085\u0005\u0085\u0a09\n\u0085\u0003\u0086\u0003\u0086",
    "\u0005\u0086\u0a0d\n\u0086\u0003\u0086\u0003\u0086\u0005\u0086\u0a11",
    "\n\u0086\u0003\u0086\u0005\u0086\u0a14\n\u0086\u0003\u0087\u0003\u0087",
    "\u0003\u0087\u0003\u0088\u0003\u0088\u0003\u0089\u0003\u0089\u0005\u0089",
    "\u0a1d\n\u0089\u0003\u0089\u0005\u0089\u0a20\n\u0089\u0003\u0089\u0003",
    "\u0089\u0005\u0089\u0a24\n\u0089\u0003\u0089\u0005\u0089\u0a27\n\u0089",
    "\u0003\u008a\u0003\u008a\u0003\u008b\u0003\u008b\u0003\u008c\u0003\u008c",
    "\u0003\u008c\u0002\u0003\u00c4\u008d\u0002\u0004\u0006\b\n\f\u000e\u0010",
    "\u0012\u0014\u0016\u0018\u001a\u001c\u001e \"$&(*,.02468:<>@BDFHJLN",
    "PRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086\u0088\u008a\u008c",
    "\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e\u00a0\u00a2\u00a4",
    "\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6\u00b8\u00ba\u00bc",
    "\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc\u00ce\u00d0\u00d2\u00d4",
    "\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4\u00e6\u00e8\u00ea\u00ec",
    "\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc\u00fe\u0100\u0102\u0104",
    "\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114\u0116\u0002\u0014\u0004",
    "\u0002\r\r\u009d\u009d\u0003\u0002\u001c\'\u0004\u0002\u00a6\u00a6\u00aa",
    "\u00aa\u0003\u0002=A\u0005\u0002\u00b8\u00b8\u00c1\u00c1\u00c6\u00c6",
    "\u0007\u0002\t\t\r\rOOww\u0081\u0081\u0004\u0002\u0084\u0085\u00ae\u00ae",
    "\u0004\u0002\\^\u0094\u0094\u0004\u0002\u00b4\u00b4\u00c9\u00c9\u0004",
    "\u0002\u0096\u0096\u009c\u009c\u0004\u0002\u000f\u0010xx\u0003\u0002",
    "\u000f\u0010\f\u0002\u000e\u000e\u0011\u0011\u0018\u0018\u001a\u001a",
    "++QQUU\u0095\u0095\u009a\u009a\u00a7\u00a7\t\u0002PPZZ\u00b8\u00b8\u00ba",
    "\u00bb\u00bd\u00bd\u00bf\u00bf\u00c3\u00c3\u0006\u0002BBlm\u00a1\u00a1",
    "\u00cc\u00d1\b\u0002\u00b0\u00b0\u00b2\u00b2\u00b6\u00b6\u00b9\u00b9",
    "\u00bc\u00bc\u00c4\u00c4\u0006\u0002DDHH{{\u007f\u007f\u000b\u0002\u0003",
    ".7<BZ__dnpqv{\u007f\u0084\u0086\u00af\u0bcb\u0002\u0118\u0003\u0002",
    "\u0002\u0002\u0004\u011c\u0003\u0002\u0002\u0002\u0006\u0153\u0003\u0002",
    "\u0002\u0002\b\u0159\u0003\u0002\u0002\u0002\n\u016a\u0003\u0002\u0002",
    "\u0002\f\u017b\u0003\u0002\u0002\u0002\u000e\u0185\u0003\u0002\u0002",
    "\u0002\u0010\u0191\u0003\u0002\u0002\u0002\u0012\u0193\u0003\u0002\u0002",
    "\u0002\u0014\u01aa\u0003\u0002\u0002\u0002\u0016\u01ac\u0003\u0002\u0002",
    "\u0002\u0018\u01ae\u0003\u0002\u0002\u0002\u001a\u01c6\u0003\u0002\u0002",
    "\u0002\u001c\u0218\u0003\u0002\u0002\u0002\u001e\u021a\u0003\u0002\u0002",
    "\u0002 \u0227\u0003\u0002\u0002\u0002\"\u0229\u0003\u0002\u0002\u0002",
    "$\u022d\u0003\u0002\u0002\u0002&\u0231\u0003\u0002\u0002\u0002(\u0246",
    "\u0003\u0002\u0002\u0002*\u0258\u0003\u0002\u0002\u0002,\u0269\u0003",
    "\u0002\u0002\u0002.\u0276\u0003\u0002\u0002\u00020\u029a\u0003\u0002",
    "\u0002\u00022\u02aa\u0003\u0002\u0002\u00024\u02f4\u0003\u0002\u0002",
    "\u00026\u02f6\u0003\u0002\u0002\u00028\u02fb\u0003\u0002\u0002\u0002",
    ":\u030d\u0003\u0002\u0002\u0002<\u031d\u0003\u0002\u0002\u0002>\u032d",
    "\u0003\u0002\u0002\u0002@\u0334\u0003\u0002\u0002\u0002B\u033e\u0003",
    "\u0002\u0002\u0002D\u0340\u0003\u0002\u0002\u0002F\u034c\u0003\u0002",
    "\u0002\u0002H\u036a\u0003\u0002\u0002\u0002J\u039b\u0003\u0002\u0002",
    "\u0002L\u03bd\u0003\u0002\u0002\u0002N\u03d3\u0003\u0002\u0002\u0002",
    "P\u03d7\u0003\u0002\u0002\u0002R\u03f4\u0003\u0002\u0002\u0002T\u03f6",
    "\u0003\u0002\u0002\u0002V\u0408\u0003\u0002\u0002\u0002X\u040a\u0003",
    "\u0002\u0002\u0002Z\u041c\u0003\u0002\u0002\u0002\\\u042a\u0003\u0002",
    "\u0002\u0002^\u042e\u0003\u0002\u0002\u0002`\u043d\u0003\u0002\u0002",
    "\u0002b\u0443\u0003\u0002\u0002\u0002d\u044f\u0003\u0002\u0002\u0002",
    "f\u045b\u0003\u0002\u0002\u0002h\u045f\u0003\u0002\u0002\u0002j\u0472",
    "\u0003\u0002\u0002\u0002l\u047e\u0003\u0002\u0002\u0002n\u048a\u0003",
    "\u0002\u0002\u0002p\u049c\u0003\u0002\u0002\u0002r\u04ae\u0003\u0002",
    "\u0002\u0002t\u04bc\u0003\u0002\u0002\u0002v\u04ca\u0003\u0002\u0002",
    "\u0002x\u04ce\u0003\u0002\u0002\u0002z\u04d6\u0003\u0002\u0002\u0002",
    "|\u04e0\u0003\u0002\u0002\u0002~\u04f4\u0003\u0002\u0002\u0002\u0080",
    "\u0508\u0003\u0002\u0002\u0002\u0082\u054a\u0003\u0002\u0002\u0002\u0084",
    "\u055d\u0003\u0002\u0002\u0002\u0086\u055f\u0003\u0002\u0002\u0002\u0088",
    "\u056f\u0003\u0002\u0002\u0002\u008a\u0597\u0003\u0002\u0002\u0002\u008c",
    "\u05b8\u0003\u0002\u0002\u0002\u008e\u05d6\u0003\u0002\u0002\u0002\u0090",
    "\u05ec\u0003\u0002\u0002\u0002\u0092\u05ff\u0003\u0002\u0002\u0002\u0094",
    "\u0604\u0003\u0002\u0002\u0002\u0096\u0618\u0003\u0002\u0002\u0002\u0098",
    "\u0629\u0003\u0002\u0002\u0002\u009a\u062b\u0003\u0002\u0002\u0002\u009c",
    "\u0633\u0003\u0002\u0002\u0002\u009e\u0635\u0003\u0002\u0002\u0002\u00a0",
    "\u0639\u0003\u0002\u0002\u0002\u00a2\u0645\u0003\u0002\u0002\u0002\u00a4",
    "\u0651\u0003\u0002\u0002\u0002\u00a6\u066d\u0003\u0002\u0002\u0002\u00a8",
    "\u0679\u0003\u0002\u0002\u0002\u00aa\u068e\u0003\u0002\u0002\u0002\u00ac",
    "\u06d7\u0003\u0002\u0002\u0002\u00ae\u06d9\u0003\u0002\u0002\u0002\u00b0",
    "\u06e6\u0003\u0002\u0002\u0002\u00b2\u06f2\u0003\u0002\u0002\u0002\u00b4",
    "\u06fe\u0003\u0002\u0002\u0002\u00b6\u0703\u0003\u0002\u0002\u0002\u00b8",
    "\u0721\u0003\u0002\u0002\u0002\u00ba\u072e\u0003\u0002\u0002\u0002\u00bc",
    "\u0740\u0003\u0002\u0002\u0002\u00be\u075a\u0003\u0002\u0002\u0002\u00c0",
    "\u0763\u0003\u0002\u0002\u0002\u00c2\u0767\u0003\u0002\u0002\u0002\u00c4",
    "\u07b0\u0003\u0002\u0002\u0002\u00c6\u0856\u0003\u0002\u0002\u0002\u00c8",
    "\u085f\u0003\u0002\u0002\u0002\u00ca\u086d\u0003\u0002\u0002\u0002\u00cc",
    "\u0888\u0003\u0002\u0002\u0002\u00ce\u089a\u0003\u0002\u0002\u0002\u00d0",
    "\u08a6\u0003\u0002\u0002\u0002\u00d2\u08b8\u0003\u0002\u0002\u0002\u00d4",
    "\u08c7\u0003\u0002\u0002\u0002\u00d6\u08c9\u0003\u0002\u0002\u0002\u00d8",
    "\u08de\u0003\u0002\u0002\u0002\u00da\u08f9\u0003\u0002\u0002\u0002\u00dc",
    "\u08fb\u0003\u0002\u0002\u0002\u00de\u0901\u0003\u0002\u0002\u0002\u00e0",
    "\u0913\u0003\u0002\u0002\u0002\u00e2\u0915\u0003\u0002\u0002\u0002\u00e4",
    "\u091e\u0003\u0002\u0002\u0002\u00e6\u0936\u0003\u0002\u0002\u0002\u00e8",
    "\u0940\u0003\u0002\u0002\u0002\u00ea\u0945\u0003\u0002\u0002\u0002\u00ec",
    "\u0953\u0003\u0002\u0002\u0002\u00ee\u0968\u0003\u0002\u0002\u0002\u00f0",
    "\u096c\u0003\u0002\u0002\u0002\u00f2\u0971\u0003\u0002\u0002\u0002\u00f4",
    "\u098c\u0003\u0002\u0002\u0002\u00f6\u09ab\u0003\u0002\u0002\u0002\u00f8",
    "\u09b3\u0003\u0002\u0002\u0002\u00fa\u09c6\u0003\u0002\u0002\u0002\u00fc",
    "\u09d8\u0003\u0002\u0002\u0002\u00fe\u09da\u0003\u0002\u0002\u0002\u0100",
    "\u09e5\u0003\u0002\u0002\u0002\u0102\u09f6\u0003\u0002\u0002\u0002\u0104",
    "\u09f8\u0003\u0002\u0002\u0002\u0106\u09fa\u0003\u0002\u0002\u0002\u0108",
    "\u0a02\u0003\u0002\u0002\u0002\u010a\u0a0a\u0003\u0002\u0002\u0002\u010c",
    "\u0a15\u0003\u0002\u0002\u0002\u010e\u0a18\u0003\u0002\u0002\u0002\u0110",
    "\u0a1c\u0003\u0002\u0002\u0002\u0112\u0a28\u0003\u0002\u0002\u0002\u0114",
    "\u0a2a\u0003\u0002\u0002\u0002\u0116\u0a2c\u0003\u0002\u0002\u0002\u0118",
    "\u0119\u0005\u0004\u0003\u0002\u0119\u011a\u0007\u0002\u0002\u0003\u011a",
    "\u0003\u0003\u0002\u0002\u0002\u011b\u011d\u0007\u00d6\u0002\u0002\u011c",
    "\u011b\u0003\u0002\u0002\u0002\u011c\u011d\u0003\u0002\u0002\u0002\u011d",
    "\u0121\u0003\u0002\u0002\u0002\u011e\u0120\u0007\u00d4\u0002\u0002\u011f",
    "\u011e\u0003\u0002\u0002\u0002\u0120\u0123\u0003\u0002\u0002\u0002\u0121",
    "\u011f\u0003\u0002\u0002\u0002\u0121\u0122\u0003\u0002\u0002\u0002\u0122",
    "\u012a\u0003\u0002\u0002\u0002\u0123\u0121\u0003\u0002\u0002\u0002\u0124",
    "\u0126\u0005\u0006\u0004\u0002\u0125\u0127\u0007\u00d4\u0002\u0002\u0126",
    "\u0125\u0003\u0002\u0002\u0002\u0127\u0128\u0003\u0002\u0002\u0002\u0128",
    "\u0126\u0003\u0002\u0002\u0002\u0128\u0129\u0003\u0002\u0002\u0002\u0129",
    "\u012b\u0003\u0002\u0002\u0002\u012a\u0124\u0003\u0002\u0002\u0002\u012a",
    "\u012b\u0003\u0002\u0002\u0002\u012b\u012d\u0003\u0002\u0002\u0002\u012c",
    "\u012e\u0005\b\u0005\u0002\u012d\u012c\u0003\u0002\u0002\u0002\u012d",
    "\u012e\u0003\u0002\u0002\u0002\u012e\u0132\u0003\u0002\u0002\u0002\u012f",
    "\u0131\u0007\u00d4\u0002\u0002\u0130\u012f\u0003\u0002\u0002\u0002\u0131",
    "\u0134\u0003\u0002\u0002\u0002\u0132\u0130\u0003\u0002\u0002\u0002\u0132",
    "\u0133\u0003\u0002\u0002\u0002\u0133\u0136\u0003\u0002\u0002\u0002\u0134",
    "\u0132\u0003\u0002\u0002\u0002\u0135\u0137\u0005\f\u0007\u0002\u0136",
    "\u0135\u0003\u0002\u0002\u0002\u0136\u0137\u0003\u0002\u0002\u0002\u0137",
    "\u013b\u0003\u0002\u0002\u0002\u0138\u013a\u0007\u00d4\u0002\u0002\u0139",
    "\u0138\u0003\u0002\u0002\u0002\u013a\u013d\u0003\u0002\u0002\u0002\u013b",
    "\u0139\u0003\u0002\u0002\u0002\u013b\u013c\u0003\u0002\u0002\u0002\u013c",
    "\u013f\u0003\u0002\u0002\u0002\u013d\u013b\u0003\u0002\u0002\u0002\u013e",
    "\u0140\u0005\u000e\b\u0002\u013f\u013e\u0003\u0002\u0002\u0002\u013f",
    "\u0140\u0003\u0002\u0002\u0002\u0140\u0144\u0003\u0002\u0002\u0002\u0141",
    "\u0143\u0007\u00d4\u0002\u0002\u0142\u0141\u0003\u0002\u0002\u0002\u0143",
    "\u0146\u0003\u0002\u0002\u0002\u0144\u0142\u0003\u0002\u0002\u0002\u0144",
    "\u0145\u0003\u0002\u0002\u0002\u0145\u0148\u0003\u0002\u0002\u0002\u0146",
    "\u0144\u0003\u0002\u0002\u0002\u0147\u0149\u0005\u0012\n\u0002\u0148",
    "\u0147\u0003\u0002\u0002\u0002\u0148\u0149\u0003\u0002\u0002\u0002\u0149",
    "\u014d\u0003\u0002\u0002\u0002\u014a\u014c\u0007\u00d4\u0002\u0002\u014b",
    "\u014a\u0003\u0002\u0002\u0002\u014c\u014f\u0003\u0002\u0002\u0002\u014d",
    "\u014b\u0003\u0002\u0002\u0002\u014d\u014e\u0003\u0002\u0002\u0002\u014e",
    "\u0151\u0003\u0002\u0002\u0002\u014f\u014d\u0003\u0002\u0002\u0002\u0150",
    "\u0152\u0007\u00d6\u0002\u0002\u0151\u0150\u0003\u0002\u0002\u0002\u0151",
    "\u0152\u0003\u0002\u0002\u0002\u0152\u0005\u0003\u0002\u0002\u0002\u0153",
    "\u0154\u0007\u00a8\u0002\u0002\u0154\u0155\u0007\u00d6\u0002\u0002\u0155",
    "\u0156\u0007\u00d0\u0002\u0002\u0156\u0157\u0007\u00d6\u0002\u0002\u0157",
    "\u0158\u0007\u0016\u0002\u0002\u0158\u0007\u0003\u0002\u0002\u0002\u0159",
    "\u015b\u0007\u000b\u0002\u0002\u015a\u015c\u0007\u00d4\u0002\u0002\u015b",
    "\u015a\u0003\u0002\u0002\u0002\u015c\u015d\u0003\u0002\u0002\u0002\u015d",
    "\u015b\u0003\u0002\u0002\u0002\u015d\u015e\u0003\u0002\u0002\u0002\u015e",
    "\u0160\u0003\u0002\u0002\u0002\u015f\u0161\u0005\n\u0006\u0002\u0160",
    "\u015f\u0003\u0002\u0002\u0002\u0161\u0162\u0003\u0002\u0002\u0002\u0162",
    "\u0160\u0003\u0002\u0002\u0002\u0162\u0163\u0003\u0002\u0002\u0002\u0163",
    "\u0164\u0003\u0002\u0002\u0002\u0164\u0166\u00077\u0002\u0002\u0165",
    "\u0167\u0007\u00d4\u0002\u0002\u0166\u0165\u0003\u0002\u0002\u0002\u0167",
    "\u0168\u0003\u0002\u0002\u0002\u0168\u0166\u0003\u0002\u0002\u0002\u0168",
    "\u0169\u0003\u0002\u0002\u0002\u0169\t\u0003\u0002\u0002\u0002\u016a",
    "\u016c\u0005\u00fc\u007f\u0002\u016b\u016d\u0007\u00d6\u0002\u0002\u016c",
    "\u016b\u0003\u0002\u0002\u0002\u016c\u016d\u0003\u0002\u0002\u0002\u016d",
    "\u016e\u0003\u0002\u0002\u0002\u016e\u0170\u0007\u00b8\u0002\u0002\u016f",
    "\u0171\u0007\u00d6\u0002\u0002\u0170\u016f\u0003\u0002\u0002\u0002\u0170",
    "\u0171\u0003\u0002\u0002\u0002\u0171\u0172\u0003\u0002\u0002\u0002\u0172",
    "\u0173\u0005\u010e\u0088\u0002\u0173\u0174\u0007\u00d4\u0002\u0002\u0174",
    "\u000b\u0003\u0002\u0002\u0002\u0175\u0177\u0005\u0018\r\u0002\u0176",
    "\u0178\u0007\u00d4\u0002\u0002\u0177\u0176\u0003\u0002\u0002\u0002\u0178",
    "\u0179\u0003\u0002\u0002\u0002\u0179\u0177\u0003\u0002\u0002\u0002\u0179",
    "\u017a\u0003\u0002\u0002\u0002\u017a\u017c\u0003\u0002\u0002\u0002\u017b",
    "\u0175\u0003\u0002\u0002\u0002\u017c\u017d\u0003\u0002\u0002\u0002\u017d",
    "\u017b\u0003\u0002\u0002\u0002\u017d\u017e\u0003\u0002\u0002\u0002\u017e",
    "\r\u0003\u0002\u0002\u0002\u017f\u0181\u0005\u0010\t\u0002\u0180\u0182",
    "\u0007\u00d4\u0002\u0002\u0181\u0180\u0003\u0002\u0002\u0002\u0182\u0183",
    "\u0003\u0002\u0002\u0002\u0183\u0181\u0003\u0002\u0002\u0002\u0183\u0184",
    "\u0003\u0002\u0002\u0002\u0184\u0186\u0003\u0002\u0002\u0002\u0185\u017f",
    "\u0003\u0002\u0002\u0002\u0186\u0187\u0003\u0002\u0002\u0002\u0187\u0185",
    "\u0003\u0002\u0002\u0002\u0187\u0188\u0003\u0002\u0002\u0002\u0188\u000f",
    "\u0003\u0002\u0002\u0002\u0189\u018a\u0007r\u0002\u0002\u018a\u018b",
    "\u0007\u00d6\u0002\u0002\u018b\u0192\u0007\u00cf\u0002\u0002\u018c\u018d",
    "\u0007t\u0002\u0002\u018d\u018e\u0007\u00d6\u0002\u0002\u018e\u0192",
    "\t\u0002\u0002\u0002\u018f\u0192\u0007s\u0002\u0002\u0190\u0192\u0007",
    "u\u0002\u0002\u0191\u0189\u0003\u0002\u0002\u0002\u0191\u018c\u0003",
    "\u0002\u0002\u0002\u0191\u018f\u0003\u0002\u0002\u0002\u0191\u0190\u0003",
    "\u0002\u0002\u0002\u0192\u0011\u0003\u0002\u0002\u0002\u0193\u019c\u0005",
    "\u0014\u000b\u0002\u0194\u0196\u0007\u00d4\u0002\u0002\u0195\u0194\u0003",
    "\u0002\u0002\u0002\u0196\u0197\u0003\u0002\u0002\u0002\u0197\u0195\u0003",
    "\u0002\u0002\u0002\u0197\u0198\u0003\u0002\u0002\u0002\u0198\u0199\u0003",
    "\u0002\u0002\u0002\u0199\u019b\u0005\u0014\u000b\u0002\u019a\u0195\u0003",
    "\u0002\u0002\u0002\u019b\u019e\u0003\u0002\u0002\u0002\u019c\u019a\u0003",
    "\u0002\u0002\u0002\u019c\u019d\u0003\u0002\u0002\u0002\u019d\u0013\u0003",
    "\u0002\u0002\u0002\u019e\u019c\u0003\u0002\u0002\u0002\u019f\u01ab\u0005",
    "\u0016\f\u0002\u01a0\u01ab\u0005.\u0018\u0002\u01a1\u01ab\u00058\u001d",
    "\u0002\u01a2\u01ab\u0005@!\u0002\u01a3\u01ab\u0005J&\u0002\u01a4\u01ab",
    "\u0005l7\u0002\u01a5\u01ab\u0005\u0088E\u0002\u01a6\u01ab\u0005\u008a",
    "F\u0002\u01a7\u01ab\u0005\u008cG\u0002\u01a8\u01ab\u0005\u00b6\\\u0002",
    "\u01a9\u01ab\u0005\u00ba^\u0002\u01aa\u019f\u0003\u0002\u0002\u0002",
    "\u01aa\u01a0\u0003\u0002\u0002\u0002\u01aa\u01a1\u0003\u0002\u0002\u0002",
    "\u01aa\u01a2\u0003\u0002\u0002\u0002\u01aa\u01a3\u0003\u0002\u0002\u0002",
    "\u01aa\u01a4\u0003\u0002\u0002\u0002\u01aa\u01a5\u0003\u0002\u0002\u0002",
    "\u01aa\u01a6\u0003\u0002\u0002\u0002\u01aa\u01a7\u0003\u0002\u0002\u0002",
    "\u01aa\u01a8\u0003\u0002\u0002\u0002\u01aa\u01a9\u0003\u0002\u0002\u0002",
    "\u01ab\u0015\u0003\u0002\u0002\u0002\u01ac\u01ad\u0005\u001a\u000e\u0002",
    "\u01ad\u0017\u0003\u0002\u0002\u0002\u01ae\u01af\u0007\u0007\u0002\u0002",
    "\u01af\u01b0\u0007\u00d6\u0002\u0002\u01b0\u01b2\u0005\u00e0q\u0002",
    "\u01b1\u01b3\u0007\u00d6\u0002\u0002\u01b2\u01b1\u0003\u0002\u0002\u0002",
    "\u01b2\u01b3\u0003\u0002\u0002\u0002\u01b3\u01b4\u0003\u0002\u0002\u0002",
    "\u01b4\u01b6\u0007\u00b8\u0002\u0002\u01b5\u01b7\u0007\u00d6\u0002\u0002",
    "\u01b6\u01b5\u0003\u0002\u0002\u0002\u01b6\u01b7\u0003\u0002\u0002\u0002",
    "\u01b7\u01b8\u0003\u0002\u0002\u0002\u01b8\u01c3\u0005\u010e\u0088\u0002",
    "\u01b9\u01bb\u0007\u00d6\u0002\u0002\u01ba\u01b9\u0003\u0002\u0002\u0002",
    "\u01ba\u01bb\u0003\u0002\u0002\u0002\u01bb\u01bc\u0003\u0002\u0002\u0002",
    "\u01bc\u01be\u0007\u00b4\u0002\u0002\u01bd\u01bf\u0007\u00d6\u0002\u0002",
    "\u01be\u01bd\u0003\u0002\u0002\u0002\u01be\u01bf\u0003\u0002\u0002\u0002",
    "\u01bf\u01c0\u0003\u0002\u0002\u0002\u01c0\u01c2\u0005\u010e\u0088\u0002",
    "\u01c1\u01ba\u0003\u0002\u0002\u0002\u01c2\u01c5\u0003\u0002\u0002\u0002",
    "\u01c3\u01c1\u0003\u0002\u0002\u0002\u01c3\u01c4\u0003\u0002\u0002\u0002",
    "\u01c4\u0019\u0003\u0002\u0002\u0002\u01c5\u01c3\u0003\u0002\u0002\u0002",
    "\u01c6\u01d2\u0005\u001c\u000f\u0002\u01c7\u01c9\u0007\u00d4\u0002\u0002",
    "\u01c8\u01c7\u0003\u0002\u0002\u0002\u01c9\u01ca\u0003\u0002\u0002\u0002",
    "\u01ca\u01c8\u0003\u0002\u0002\u0002\u01ca\u01cb\u0003\u0002\u0002\u0002",
    "\u01cb\u01cd\u0003\u0002\u0002\u0002\u01cc\u01ce\u0007\u00d6\u0002\u0002",
    "\u01cd\u01cc\u0003\u0002\u0002\u0002\u01cd\u01ce\u0003\u0002\u0002\u0002",
    "\u01ce\u01cf\u0003\u0002\u0002\u0002\u01cf\u01d1\u0005\u001c\u000f\u0002",
    "\u01d0\u01c8\u0003\u0002\u0002\u0002\u01d1\u01d4\u0003\u0002\u0002\u0002",
    "\u01d2\u01d0\u0003\u0002\u0002\u0002\u01d2\u01d3\u0003\u0002\u0002\u0002",
    "\u01d3\u001b\u0003\u0002\u0002\u0002\u01d4\u01d2\u0003\u0002\u0002\u0002",
    "\u01d5\u0219\u0005\u001e\u0010\u0002\u01d6\u0219\u0005\u0018\r\u0002",
    "\u01d7\u0219\u0005 \u0011\u0002\u01d8\u0219\u0005\"\u0012\u0002\u01d9",
    "\u0219\u0005$\u0013\u0002\u01da\u0219\u0005&\u0014\u0002\u01db\u0219",
    "\u0005(\u0015\u0002\u01dc\u0219\u0005,\u0017\u0002\u01dd\u0219\u0005",
    "2\u001a\u0002\u01de\u0219\u00050\u0019\u0002\u01df\u0219\u00054\u001b",
    "\u0002\u01e0\u0219\u00056\u001c\u0002\u01e1\u0219\u0005<\u001f\u0002",
    "\u01e2\u0219\u0005> \u0002\u01e3\u0219\u0005B\"\u0002\u01e4\u0219\u0005",
    "\u00d4k\u0002\u01e5\u0219\u0005D#\u0002\u01e6\u0219\u0005F$\u0002\u01e7",
    "\u0219\u0005H%\u0002\u01e8\u0219\u0005L\'\u0002\u01e9\u0219\u0005N(",
    "\u0002\u01ea\u0219\u0005P)\u0002\u01eb\u0219\u0005R*\u0002\u01ec\u0219",
    "\u0005\\/\u0002\u01ed\u0219\u0005^0\u0002\u01ee\u0219\u0005`1\u0002",
    "\u01ef\u0219\u0005b2\u0002\u01f0\u0219\u0005d3\u0002\u01f1\u0219\u0005",
    "\u010c\u0087\u0002\u01f2\u0219\u0005f4\u0002\u01f3\u0219\u0005h5\u0002",
    "\u01f4\u0219\u0005j6\u0002\u01f5\u0219\u0005l7\u0002\u01f6\u0219\u0005",
    "t;\u0002\u01f7\u0219\u0005v<\u0002\u01f8\u0219\u0005x=\u0002\u01f9\u0219",
    "\u0005z>\u0002\u01fa\u0219\u0005|?\u0002\u01fb\u0219\u0005~@\u0002\u01fc",
    "\u0219\u0005\u0080A\u0002\u01fd\u0219\u0005\u0086D\u0002\u01fe\u0219",
    "\u0005\u008eH\u0002\u01ff\u0219\u0005\u0090I\u0002\u0200\u0219\u0005",
    "\u0092J\u0002\u0201\u0219\u0005\u0094K\u0002\u0202\u0219\u0005\u0098",
    "M\u0002\u0203\u0219\u0005\u009aN\u0002\u0204\u0219\u0005\u009cO\u0002",
    "\u0205\u0219\u0005\u009eP\u0002\u0206\u0219\u0005\u00a0Q\u0002\u0207",
    "\u0219\u0005\u00a2R\u0002\u0208\u0219\u0005\u00a4S\u0002\u0209\u0219",
    "\u0005\u00a6T\u0002\u020a\u0219\u0005\u00a8U\u0002\u020b\u0219\u0005",
    "\u00aeX\u0002\u020c\u0219\u0005\u00b0Y\u0002\u020d\u0219\u0005\u00b2",
    "Z\u0002\u020e\u0219\u0005\u00b4[\u0002\u020f\u0219\u0005\u00b8]\u0002",
    "\u0210\u0219\u0005\u00c0a\u0002\u0211\u0219\u0005\u00c2b\u0002\u0212",
    "\u0219\u0005\u00c6d\u0002\u0213\u0219\u0005\u00ccg\u0002\u0214\u0219",
    "\u0005\u00ceh\u0002\u0215\u0219\u0005\u00d0i\u0002\u0216\u0219\u0005",
    "\u00d2j\u0002\u0217\u0219\u0005\u00dan\u0002\u0218\u01d5\u0003\u0002",
    "\u0002\u0002\u0218\u01d6\u0003\u0002\u0002\u0002\u0218\u01d7\u0003\u0002",
    "\u0002\u0002\u0218\u01d8\u0003\u0002\u0002\u0002\u0218\u01d9\u0003\u0002",
    "\u0002\u0002\u0218\u01da\u0003\u0002\u0002\u0002\u0218\u01db\u0003\u0002",
    "\u0002\u0002\u0218\u01dc\u0003\u0002\u0002\u0002\u0218\u01dd\u0003\u0002",
    "\u0002\u0002\u0218\u01de\u0003\u0002\u0002\u0002\u0218\u01df\u0003\u0002",
    "\u0002\u0002\u0218\u01e0\u0003\u0002\u0002\u0002\u0218\u01e1\u0003\u0002",
    "\u0002\u0002\u0218\u01e2\u0003\u0002\u0002\u0002\u0218\u01e3\u0003\u0002",
    "\u0002\u0002\u0218\u01e4\u0003\u0002\u0002\u0002\u0218\u01e5\u0003\u0002",
    "\u0002\u0002\u0218\u01e6\u0003\u0002\u0002\u0002\u0218\u01e7\u0003\u0002",
    "\u0002\u0002\u0218\u01e8\u0003\u0002\u0002\u0002\u0218\u01e9\u0003\u0002",
    "\u0002\u0002\u0218\u01ea\u0003\u0002\u0002\u0002\u0218\u01eb\u0003\u0002",
    "\u0002\u0002\u0218\u01ec\u0003\u0002\u0002\u0002\u0218\u01ed\u0003\u0002",
    "\u0002\u0002\u0218\u01ee\u0003\u0002\u0002\u0002\u0218\u01ef\u0003\u0002",
    "\u0002\u0002\u0218\u01f0\u0003\u0002\u0002\u0002\u0218\u01f1\u0003\u0002",
    "\u0002\u0002\u0218\u01f2\u0003\u0002\u0002\u0002\u0218\u01f3\u0003\u0002",
    "\u0002\u0002\u0218\u01f4\u0003\u0002\u0002\u0002\u0218\u01f5\u0003\u0002",
    "\u0002\u0002\u0218\u01f6\u0003\u0002\u0002\u0002\u0218\u01f7\u0003\u0002",
    "\u0002\u0002\u0218\u01f8\u0003\u0002\u0002\u0002\u0218\u01f9\u0003\u0002",
    "\u0002\u0002\u0218\u01fa\u0003\u0002\u0002\u0002\u0218\u01fb\u0003\u0002",
    "\u0002\u0002\u0218\u01fc\u0003\u0002\u0002\u0002\u0218\u01fd\u0003\u0002",
    "\u0002\u0002\u0218\u01fe\u0003\u0002\u0002\u0002\u0218\u01ff\u0003\u0002",
    "\u0002\u0002\u0218\u0200\u0003\u0002\u0002\u0002\u0218\u0201\u0003\u0002",
    "\u0002\u0002\u0218\u0202\u0003\u0002\u0002\u0002\u0218\u0203\u0003\u0002",
    "\u0002\u0002\u0218\u0204\u0003\u0002\u0002\u0002\u0218\u0205\u0003\u0002",
    "\u0002\u0002\u0218\u0206\u0003\u0002\u0002\u0002\u0218\u0207\u0003\u0002",
    "\u0002\u0002\u0218\u0208\u0003\u0002\u0002\u0002\u0218\u0209\u0003\u0002",
    "\u0002\u0002\u0218\u020a\u0003\u0002\u0002\u0002\u0218\u020b\u0003\u0002",
    "\u0002\u0002\u0218\u020c\u0003\u0002\u0002\u0002\u0218\u020d\u0003\u0002",
    "\u0002\u0002\u0218\u020e\u0003\u0002\u0002\u0002\u0218\u020f\u0003\u0002",
    "\u0002\u0002\u0218\u0210\u0003\u0002\u0002\u0002\u0218\u0211\u0003\u0002",
    "\u0002\u0002\u0218\u0212\u0003\u0002\u0002\u0002\u0218\u0213\u0003\u0002",
    "\u0002\u0002\u0218\u0214\u0003\u0002\u0002\u0002\u0218\u0215\u0003\u0002",
    "\u0002\u0002\u0218\u0216\u0003\u0002\u0002\u0002\u0218\u0217\u0003\u0002",
    "\u0002\u0002\u0219\u001d\u0003\u0002\u0002\u0002\u021a\u021b\u0007\b",
    "\u0002\u0002\u021b\u021c\u0007\u00d6\u0002\u0002\u021c\u0225\u0005\u00c4",
    "c\u0002\u021d\u021f\u0007\u00d6\u0002\u0002\u021e\u021d\u0003\u0002",
    "\u0002\u0002\u021e\u021f\u0003\u0002\u0002\u0002\u021f\u0220\u0003\u0002",
    "\u0002\u0002\u0220\u0222\u0007\u00b4\u0002\u0002\u0221\u0223\u0007\u00d6",
    "\u0002\u0002\u0222\u0221\u0003\u0002\u0002\u0002\u0222\u0223\u0003\u0002",
    "\u0002\u0002\u0223\u0224\u0003\u0002\u0002\u0002\u0224\u0226\u0005\u00c4",
    "c\u0002\u0225\u021e\u0003\u0002\u0002\u0002\u0225\u0226\u0003\u0002",
    "\u0002\u0002\u0226\u001f\u0003\u0002\u0002\u0002\u0227\u0228\u0007\f",
    "\u0002\u0002\u0228!\u0003\u0002\u0002\u0002\u0229\u022a\u0007\u0014",
    "\u0002\u0002\u022a\u022b\u0007\u00d6\u0002\u0002\u022b\u022c\u0005\u00c4",
    "c\u0002\u022c#\u0003\u0002\u0002\u0002\u022d\u022e\u0007\u0015\u0002",
    "\u0002\u022e\u022f\u0007\u00d6\u0002\u0002\u022f\u0230\u0005\u00c4c",
    "\u0002\u0230%\u0003\u0002\u0002\u0002\u0231\u0241\u0007\u0017\u0002",
    "\u0002\u0232\u0233\u0007\u00d6\u0002\u0002\u0233\u023e\u0005\u00c4c",
    "\u0002\u0234\u0236\u0007\u00d6\u0002\u0002\u0235\u0234\u0003\u0002\u0002",
    "\u0002\u0235\u0236\u0003\u0002\u0002\u0002\u0236\u0237\u0003\u0002\u0002",
    "\u0002\u0237\u0239\u0007\u00b4\u0002\u0002\u0238\u023a\u0007\u00d6\u0002",
    "\u0002\u0239\u0238\u0003\u0002\u0002\u0002\u0239\u023a\u0003\u0002\u0002",
    "\u0002\u023a\u023b\u0003\u0002\u0002\u0002\u023b\u023d\u0005\u00c4c",
    "\u0002\u023c\u0235\u0003\u0002\u0002\u0002\u023d\u0240\u0003\u0002\u0002",
    "\u0002\u023e\u023c\u0003\u0002\u0002\u0002\u023e\u023f\u0003\u0002\u0002",
    "\u0002\u023f\u0242\u0003\u0002\u0002\u0002\u0240\u023e\u0003\u0002\u0002",
    "\u0002\u0241\u0232\u0003\u0002\u0002\u0002\u0241\u0242\u0003\u0002\u0002",
    "\u0002\u0242\'\u0003\u0002\u0002\u0002\u0243\u0244\u0005\u0114\u008b",
    "\u0002\u0244\u0245\u0007\u00d6\u0002\u0002\u0245\u0247\u0003\u0002\u0002",
    "\u0002\u0246\u0243\u0003\u0002\u0002\u0002\u0246\u0247\u0003\u0002\u0002",
    "\u0002\u0247\u0248\u0003\u0002\u0002\u0002\u0248\u0249\u0007\u0019\u0002",
    "\u0002\u0249\u024a\u0007\u00d6\u0002\u0002\u024a\u0255\u0005*\u0016",
    "\u0002\u024b\u024d\u0007\u00d6\u0002\u0002\u024c\u024b\u0003\u0002\u0002",
    "\u0002\u024c\u024d\u0003\u0002\u0002\u0002\u024d\u024e\u0003\u0002\u0002",
    "\u0002\u024e\u0250\u0007\u00b4\u0002\u0002\u024f\u0251\u0007\u00d6\u0002",
    "\u0002\u0250\u024f\u0003\u0002\u0002\u0002\u0250\u0251\u0003\u0002\u0002",
    "\u0002\u0251\u0252\u0003\u0002\u0002\u0002\u0252\u0254\u0005*\u0016",
    "\u0002\u0253\u024c\u0003\u0002\u0002\u0002\u0254\u0257\u0003\u0002\u0002",
    "\u0002\u0255\u0253\u0003\u0002\u0002\u0002\u0255\u0256\u0003\u0002\u0002",
    "\u0002\u0256)\u0003\u0002\u0002\u0002\u0257\u0255\u0003\u0002\u0002",
    "\u0002\u0258\u025a\u0005\u00fc\u007f\u0002\u0259\u025b\u0005\u0112\u008a",
    "\u0002\u025a\u0259\u0003\u0002\u0002\u0002\u025a\u025b\u0003\u0002\u0002",
    "\u0002\u025b\u025e\u0003\u0002\u0002\u0002\u025c\u025d\u0007\u00d6\u0002",
    "\u0002\u025d\u025f\u0005\u00fe\u0080\u0002\u025e\u025c\u0003\u0002\u0002",
    "\u0002\u025e\u025f\u0003\u0002\u0002\u0002\u025f\u0261\u0003\u0002\u0002",
    "\u0002\u0260\u0262\u0007\u00d6\u0002\u0002\u0261\u0260\u0003\u0002\u0002",
    "\u0002\u0261\u0262\u0003\u0002\u0002\u0002\u0262\u0263\u0003\u0002\u0002",
    "\u0002\u0263\u0265\u0007\u00b8\u0002\u0002\u0264\u0266\u0007\u00d6\u0002",
    "\u0002\u0265\u0264\u0003\u0002\u0002\u0002\u0265\u0266\u0003\u0002\u0002",
    "\u0002\u0266\u0267\u0003\u0002\u0002\u0002\u0267\u0268\u0005\u00c4c",
    "\u0002\u0268+\u0003\u0002\u0002\u0002\u0269\u026b\u0007\u001a\u0002",
    "\u0002\u026a\u026c\u0007\u00d6\u0002\u0002\u026b\u026a\u0003\u0002\u0002",
    "\u0002\u026b\u026c\u0003\u0002\u0002\u0002\u026c\u026d\u0003\u0002\u0002",
    "\u0002\u026d\u026f\u0007\u00b8\u0002\u0002\u026e\u0270\u0007\u00d6\u0002",
    "\u0002\u026f\u026e\u0003\u0002\u0002\u0002\u026f\u0270\u0003\u0002\u0002",
    "\u0002\u0270\u0271\u0003\u0002\u0002\u0002\u0271\u0272\u0005\u00c4c",
    "\u0002\u0272-\u0003\u0002\u0002\u0002\u0273\u0274\u0005\u0114\u008b",
    "\u0002\u0274\u0275\u0007\u00d6\u0002\u0002\u0275\u0277\u0003\u0002\u0002",
    "\u0002\u0276\u0273\u0003\u0002\u0002\u0002\u0276\u0277\u0003\u0002\u0002",
    "\u0002\u0277\u0278\u0003\u0002\u0002\u0002\u0278\u0279\u0007\u001b\u0002",
    "\u0002\u0279\u027f\u0007\u00d6\u0002\u0002\u027a\u027c\u0007F\u0002",
    "\u0002\u027b\u027d\u0005\u0112\u008a\u0002\u027c\u027b\u0003\u0002\u0002",
    "\u0002\u027c\u027d\u0003\u0002\u0002\u0002\u027d\u0280\u0003\u0002\u0002",
    "\u0002\u027e\u0280\u0007\u009b\u0002\u0002\u027f\u027a\u0003\u0002\u0002",
    "\u0002\u027f\u027e\u0003\u0002\u0002\u0002\u0280\u0281\u0003\u0002\u0002",
    "\u0002\u0281\u0282\u0007\u00d6\u0002\u0002\u0282\u0284\u0005\u00fc\u007f",
    "\u0002\u0283\u0285\u0005\u0112\u008a\u0002\u0284\u0283\u0003\u0002\u0002",
    "\u0002\u0284\u0285\u0003\u0002\u0002\u0002\u0285\u0286\u0003\u0002\u0002",
    "\u0002\u0286\u0287\u0007\u00d6\u0002\u0002\u0287\u0288\u0007Y\u0002",
    "\u0002\u0288\u0289\u0007\u00d6\u0002\u0002\u0289\u028e\u0007\u00cc\u0002",
    "\u0002\u028a\u028b\u0007\u00d6\u0002\u0002\u028b\u028c\u0007\u0005\u0002",
    "\u0002\u028c\u028d\u0007\u00d6\u0002\u0002\u028d\u028f\u0007\u00cc\u0002",
    "\u0002\u028e\u028a\u0003\u0002\u0002\u0002\u028e\u028f\u0003\u0002\u0002",
    "\u0002\u028f\u0294\u0003\u0002\u0002\u0002\u0290\u0292\u0007\u00d6\u0002",
    "\u0002\u0291\u0290\u0003\u0002\u0002\u0002\u0291\u0292\u0003\u0002\u0002",
    "\u0002\u0292\u0293\u0003\u0002\u0002\u0002\u0293\u0295\u0005\u00f2z",
    "\u0002\u0294\u0291\u0003\u0002\u0002\u0002\u0294\u0295\u0003\u0002\u0002",
    "\u0002\u0295\u0298\u0003\u0002\u0002\u0002\u0296\u0297\u0007\u00d6\u0002",
    "\u0002\u0297\u0299\u0005\u00fe\u0080\u0002\u0298\u0296\u0003\u0002\u0002",
    "\u0002\u0298\u0299\u0003\u0002\u0002\u0002\u0299/\u0003\u0002\u0002",
    "\u0002\u029a\u029b\t\u0003\u0002\u0002\u029b\u029c\u0007\u00d6\u0002",
    "\u0002\u029c\u02a7\u0005\u010a\u0086\u0002\u029d\u029f\u0007\u00d6\u0002",
    "\u0002\u029e\u029d\u0003\u0002\u0002\u0002\u029e\u029f\u0003\u0002\u0002",
    "\u0002\u029f\u02a0\u0003\u0002\u0002\u0002\u02a0\u02a2\u0007\u00b4\u0002",
    "\u0002\u02a1\u02a3\u0007\u00d6\u0002\u0002\u02a2\u02a1\u0003\u0002\u0002",
    "\u0002\u02a2\u02a3\u0003\u0002\u0002\u0002\u02a3\u02a4\u0003\u0002\u0002",
    "\u0002\u02a4\u02a6\u0005\u010a\u0086\u0002\u02a5\u029e\u0003\u0002\u0002",
    "\u0002\u02a6\u02a9\u0003\u0002\u0002\u0002\u02a7\u02a5\u0003\u0002\u0002",
    "\u0002\u02a7\u02a8\u0003\u0002\u0002\u0002\u02a81\u0003\u0002\u0002",
    "\u0002\u02a9\u02a7\u0003\u0002\u0002\u0002\u02aa\u02ab\u0007(\u0002",
    "\u0002\u02ab\u02ac\u0007\u00d6\u0002\u0002\u02ac\u02ae\u0005\u00c4c",
    "\u0002\u02ad\u02af\u0007\u00d6\u0002\u0002\u02ae\u02ad\u0003\u0002\u0002",
    "\u0002\u02ae\u02af\u0003\u0002\u0002\u0002\u02af\u02b0\u0003\u0002\u0002",
    "\u0002\u02b0\u02b2\u0007\u00b4\u0002\u0002\u02b1\u02b3\u0007\u00d6\u0002",
    "\u0002\u02b2\u02b1\u0003\u0002\u0002\u0002\u02b2\u02b3\u0003\u0002\u0002",
    "\u0002\u02b3\u02b4\u0003\u0002\u0002\u0002\u02b4\u02bd\u0005\u00c4c",
    "\u0002\u02b5\u02b7\u0007\u00d6\u0002\u0002\u02b6\u02b5\u0003\u0002\u0002",
    "\u0002\u02b6\u02b7\u0003\u0002\u0002\u0002\u02b7\u02b8\u0003\u0002\u0002",
    "\u0002\u02b8\u02ba\u0007\u00b4\u0002\u0002\u02b9\u02bb\u0007\u00d6\u0002",
    "\u0002\u02ba\u02b9\u0003\u0002\u0002\u0002\u02ba\u02bb\u0003\u0002\u0002",
    "\u0002\u02bb\u02bc\u0003\u0002\u0002\u0002\u02bc\u02be\u0005\u00c4c",
    "\u0002\u02bd\u02b6\u0003\u0002\u0002\u0002\u02bd\u02be\u0003\u0002\u0002",
    "\u0002\u02be3\u0003\u0002\u0002\u0002\u02bf\u02c1\u0007*\u0002\u0002",
    "\u02c0\u02c2\u0007\u00d4\u0002\u0002\u02c1\u02c0\u0003\u0002\u0002\u0002",
    "\u02c2\u02c3\u0003\u0002\u0002\u0002\u02c3\u02c1\u0003\u0002\u0002\u0002",
    "\u02c3\u02c4\u0003\u0002\u0002\u0002\u02c4\u02cb\u0003\u0002\u0002\u0002",
    "\u02c5\u02c7\u0005\u001a\u000e\u0002\u02c6\u02c8\u0007\u00d4\u0002\u0002",
    "\u02c7\u02c6\u0003\u0002\u0002\u0002\u02c8\u02c9\u0003\u0002\u0002\u0002",
    "\u02c9\u02c7\u0003\u0002\u0002\u0002\u02c9\u02ca\u0003\u0002\u0002\u0002",
    "\u02ca\u02cc\u0003\u0002\u0002\u0002\u02cb\u02c5\u0003\u0002\u0002\u0002",
    "\u02cb\u02cc\u0003\u0002\u0002\u0002\u02cc\u02cd\u0003\u0002\u0002\u0002",
    "\u02cd\u02f5\u0007V\u0002\u0002\u02ce\u02cf\u0007*\u0002\u0002\u02cf",
    "\u02d0\u0007\u00d6\u0002\u0002\u02d0\u02d1\t\u0004\u0002\u0002\u02d1",
    "\u02d2\u0007\u00d6\u0002\u0002\u02d2\u02d4\u0005\u00c4c\u0002\u02d3",
    "\u02d5\u0007\u00d4\u0002\u0002\u02d4\u02d3\u0003\u0002\u0002\u0002\u02d5",
    "\u02d6\u0003\u0002\u0002\u0002\u02d6\u02d4\u0003\u0002\u0002\u0002\u02d6",
    "\u02d7\u0003\u0002\u0002\u0002\u02d7\u02de\u0003\u0002\u0002\u0002\u02d8",
    "\u02da\u0005\u001a\u000e\u0002\u02d9\u02db\u0007\u00d4\u0002\u0002\u02da",
    "\u02d9\u0003\u0002\u0002\u0002\u02db\u02dc\u0003\u0002\u0002\u0002\u02dc",
    "\u02da\u0003\u0002\u0002\u0002\u02dc\u02dd\u0003\u0002\u0002\u0002\u02dd",
    "\u02df\u0003\u0002\u0002\u0002\u02de\u02d8\u0003\u0002\u0002\u0002\u02de",
    "\u02df\u0003\u0002\u0002\u0002\u02df\u02e0\u0003\u0002\u0002\u0002\u02e0",
    "\u02e1\u0007V\u0002\u0002\u02e1\u02f5\u0003\u0002\u0002\u0002\u02e2",
    "\u02e4\u0007*\u0002\u0002\u02e3\u02e5\u0007\u00d4\u0002\u0002\u02e4",
    "\u02e3\u0003\u0002\u0002\u0002\u02e5\u02e6\u0003\u0002\u0002\u0002\u02e6",
    "\u02e4\u0003\u0002\u0002\u0002\u02e6\u02e7\u0003\u0002\u0002\u0002\u02e7",
    "\u02e8\u0003\u0002\u0002\u0002\u02e8\u02ea\u0005\u001a\u000e\u0002\u02e9",
    "\u02eb\u0007\u00d4\u0002\u0002\u02ea\u02e9\u0003\u0002\u0002\u0002\u02eb",
    "\u02ec\u0003\u0002\u0002\u0002\u02ec\u02ea\u0003\u0002\u0002\u0002\u02ec",
    "\u02ed\u0003\u0002\u0002\u0002\u02ed\u02ee\u0003\u0002\u0002\u0002\u02ee",
    "\u02ef\u0007V\u0002\u0002\u02ef\u02f0\u0007\u00d6\u0002\u0002\u02f0",
    "\u02f1\t\u0004\u0002\u0002\u02f1\u02f2\u0007\u00d6\u0002\u0002\u02f2",
    "\u02f3\u0005\u00c4c\u0002\u02f3\u02f5\u0003\u0002\u0002\u0002\u02f4",
    "\u02bf\u0003\u0002\u0002\u0002\u02f4\u02ce\u0003\u0002\u0002\u0002\u02f4",
    "\u02e2\u0003\u0002\u0002\u0002\u02f55\u0003\u0002\u0002\u0002\u02f6",
    "\u02f7\u00077\u0002\u0002\u02f77\u0003\u0002\u0002\u0002\u02f8\u02f9",
    "\u0005\u0114\u008b\u0002\u02f9\u02fa\u0007\u00d6\u0002\u0002\u02fa\u02fc",
    "\u0003\u0002\u0002\u0002\u02fb\u02f8\u0003\u0002\u0002\u0002\u02fb\u02fc",
    "\u0003\u0002\u0002\u0002\u02fc\u02fd\u0003\u0002\u0002\u0002\u02fd\u02fe",
    "\u00078\u0002\u0002\u02fe\u02ff\u0007\u00d6\u0002\u0002\u02ff\u0301",
    "\u0005\u00fc\u007f\u0002\u0300\u0302\u0007\u00d4\u0002\u0002\u0301\u0300",
    "\u0003\u0002\u0002\u0002\u0302\u0303\u0003\u0002\u0002\u0002\u0303\u0301",
    "\u0003\u0002\u0002\u0002\u0303\u0304\u0003\u0002\u0002\u0002\u0304\u0308",
    "\u0003\u0002\u0002\u0002\u0305\u0307\u0005:\u001e\u0002\u0306\u0305",
    "\u0003\u0002\u0002\u0002\u0307\u030a\u0003\u0002\u0002\u0002\u0308\u0306",
    "\u0003\u0002\u0002\u0002\u0308\u0309\u0003\u0002\u0002\u0002\u0309\u030b",
    "\u0003\u0002\u0002\u0002\u030a\u0308\u0003\u0002\u0002\u0002\u030b\u030c",
    "\u0007/\u0002\u0002\u030c9\u0003\u0002\u0002\u0002\u030d\u0316\u0005",
    "\u00fc\u007f\u0002\u030e\u0310\u0007\u00d6\u0002\u0002\u030f\u030e\u0003",
    "\u0002\u0002\u0002\u030f\u0310\u0003\u0002\u0002\u0002\u0310\u0311\u0003",
    "\u0002\u0002\u0002\u0311\u0313\u0007\u00b8\u0002\u0002\u0312\u0314\u0007",
    "\u00d6\u0002\u0002\u0313\u0312\u0003\u0002\u0002\u0002\u0313\u0314\u0003",
    "\u0002\u0002\u0002\u0314\u0315\u0003\u0002\u0002\u0002\u0315\u0317\u0005",
    "\u00c4c\u0002\u0316\u030f\u0003\u0002\u0002\u0002\u0316\u0317\u0003",
    "\u0002\u0002\u0002\u0317\u0319\u0003\u0002\u0002\u0002\u0318\u031a\u0007",
    "\u00d4\u0002\u0002\u0319\u0318\u0003\u0002\u0002\u0002\u031a\u031b\u0003",
    "\u0002\u0002\u0002\u031b\u0319\u0003\u0002\u0002\u0002\u031b\u031c\u0003",
    "\u0002\u0002\u0002\u031c;\u0003\u0002\u0002\u0002\u031d\u031e\u0007",
    ":\u0002\u0002\u031e\u031f\u0007\u00d6\u0002\u0002\u031f\u032a\u0005",
    "\u00c4c\u0002\u0320\u0322\u0007\u00d6\u0002\u0002\u0321\u0320\u0003",
    "\u0002\u0002\u0002\u0321\u0322\u0003\u0002\u0002\u0002\u0322\u0323\u0003",
    "\u0002\u0002\u0002\u0323\u0325\u0007\u00b4\u0002\u0002\u0324\u0326\u0007",
    "\u00d6\u0002\u0002\u0325\u0324\u0003\u0002\u0002\u0002\u0325\u0326\u0003",
    "\u0002\u0002\u0002\u0326\u0327\u0003\u0002\u0002\u0002\u0327\u0329\u0005",
    "\u00c4c\u0002\u0328\u0321\u0003\u0002\u0002\u0002\u0329\u032c\u0003",
    "\u0002\u0002\u0002\u032a\u0328\u0003\u0002\u0002\u0002\u032a\u032b\u0003",
    "\u0002\u0002\u0002\u032b=\u0003\u0002\u0002\u0002\u032c\u032a\u0003",
    "\u0002\u0002\u0002\u032d\u032e\u0007;\u0002\u0002\u032e\u032f\u0007",
    "\u00d6\u0002\u0002\u032f\u0330\u0005\u00c4c\u0002\u0330?\u0003\u0002",
    "\u0002\u0002\u0331\u0332\u0005\u0114\u008b\u0002\u0332\u0333\u0007\u00d6",
    "\u0002\u0002\u0333\u0335\u0003\u0002\u0002\u0002\u0334\u0331\u0003\u0002",
    "\u0002\u0002\u0334\u0335\u0003\u0002\u0002\u0002\u0335\u0336\u0003\u0002",
    "\u0002\u0002\u0336\u0337\u0007<\u0002\u0002\u0337\u0338\u0007\u00d6",
    "\u0002\u0002\u0338\u033a\u0005\u00fc\u007f\u0002\u0339\u033b\u0007\u00d6",
    "\u0002\u0002\u033a\u0339\u0003\u0002\u0002\u0002\u033a\u033b\u0003\u0002",
    "\u0002\u0002\u033b\u033c\u0003\u0002\u0002\u0002\u033c\u033d\u0005\u00f2",
    "z\u0002\u033dA\u0003\u0002\u0002\u0002\u033e\u033f\t\u0005\u0002\u0002",
    "\u033fC\u0003\u0002\u0002\u0002\u0340\u0341\u0007C\u0002\u0002\u0341",
    "\u0342\u0007\u00d6\u0002\u0002\u0342\u0344\u0005\u00c4c\u0002\u0343",
    "\u0345\u0007\u00d6\u0002\u0002\u0344\u0343\u0003\u0002\u0002\u0002\u0344",
    "\u0345\u0003\u0002\u0002\u0002\u0345\u0346\u0003\u0002\u0002\u0002\u0346",
    "\u0348\u0007\u00b4\u0002\u0002\u0347\u0349\u0007\u00d6\u0002\u0002\u0348",
    "\u0347\u0003\u0002\u0002\u0002\u0348\u0349\u0003\u0002\u0002\u0002\u0349",
    "\u034a\u0003\u0002\u0002\u0002\u034a\u034b\u0005\u00c4c\u0002\u034b",
    "E\u0003\u0002\u0002\u0002\u034c\u034d\u0007E\u0002\u0002\u034d\u034e",
    "\u0007\u00d6\u0002\u0002\u034e\u034f\u0007,\u0002\u0002\u034f\u0350",
    "\u0007\u00d6\u0002\u0002\u0350\u0352\u0005\u00fc\u007f\u0002\u0351\u0353",
    "\u0005\u0112\u008a\u0002\u0352\u0351\u0003\u0002\u0002\u0002\u0352\u0353",
    "\u0003\u0002\u0002\u0002\u0353\u0354\u0003\u0002\u0002\u0002\u0354\u0355",
    "\u0007\u00d6\u0002\u0002\u0355\u0356\u0007N\u0002\u0002\u0356\u0357",
    "\u0007\u00d6\u0002\u0002\u0357\u0359\u0005\u00c4c\u0002\u0358\u035a",
    "\u0007\u00d4\u0002\u0002\u0359\u0358\u0003\u0002\u0002\u0002\u035a\u035b",
    "\u0003\u0002\u0002\u0002\u035b\u0359\u0003\u0002\u0002\u0002\u035b\u035c",
    "\u0003\u0002\u0002\u0002\u035c\u0363\u0003\u0002\u0002\u0002\u035d\u035f",
    "\u0005\u001a\u000e\u0002\u035e\u0360\u0007\u00d4\u0002\u0002\u035f\u035e",
    "\u0003\u0002\u0002\u0002\u0360\u0361\u0003\u0002\u0002\u0002\u0361\u035f",
    "\u0003\u0002\u0002\u0002\u0361\u0362\u0003\u0002\u0002\u0002\u0362\u0364",
    "\u0003\u0002\u0002\u0002\u0363\u035d\u0003\u0002\u0002\u0002\u0363\u0364",
    "\u0003\u0002\u0002\u0002\u0364\u0365\u0003\u0002\u0002\u0002\u0365\u0368",
    "\u0007i\u0002\u0002\u0366\u0367\u0007\u00d6\u0002\u0002\u0367\u0369",
    "\u0005\u00fc\u007f\u0002\u0368\u0366\u0003\u0002\u0002\u0002\u0368\u0369",
    "\u0003\u0002\u0002\u0002\u0369G\u0003\u0002\u0002\u0002\u036a\u036b",
    "\u0007E\u0002\u0002\u036b\u036c\u0007\u00d6\u0002\u0002\u036c\u036e",
    "\u0005\u00fc\u007f\u0002\u036d\u036f\u0005\u0112\u008a\u0002\u036e\u036d",
    "\u0003\u0002\u0002\u0002\u036e\u036f\u0003\u0002\u0002\u0002\u036f\u0372",
    "\u0003\u0002\u0002\u0002\u0370\u0371\u0007\u00d6\u0002\u0002\u0371\u0373",
    "\u0005\u00fe\u0080\u0002\u0372\u0370\u0003\u0002\u0002\u0002\u0372\u0373",
    "\u0003\u0002\u0002\u0002\u0373\u0375\u0003\u0002\u0002\u0002\u0374\u0376",
    "\u0007\u00d6\u0002\u0002\u0375\u0374\u0003\u0002\u0002\u0002\u0375\u0376",
    "\u0003\u0002\u0002\u0002\u0376\u0377\u0003\u0002\u0002\u0002\u0377\u0379",
    "\u0007\u00b8\u0002\u0002\u0378\u037a\u0007\u00d6\u0002\u0002\u0379\u0378",
    "\u0003\u0002\u0002\u0002\u0379\u037a\u0003\u0002\u0002\u0002\u037a\u037b",
    "\u0003\u0002\u0002\u0002\u037b\u037c\u0005\u00c4c\u0002\u037c\u037d",
    "\u0007\u00d6\u0002\u0002\u037d\u037e\u0007\u00a0\u0002\u0002\u037e\u037f",
    "\u0007\u00d6\u0002\u0002\u037f\u0384\u0005\u00c4c\u0002\u0380\u0381",
    "\u0007\u00d6\u0002\u0002\u0381\u0382\u0007\u0098\u0002\u0002\u0382\u0383",
    "\u0007\u00d6\u0002\u0002\u0383\u0385\u0005\u00c4c\u0002\u0384\u0380",
    "\u0003\u0002\u0002\u0002\u0384\u0385\u0003\u0002\u0002\u0002\u0385\u0387",
    "\u0003\u0002\u0002\u0002\u0386\u0388\u0007\u00d4\u0002\u0002\u0387\u0386",
    "\u0003\u0002\u0002\u0002\u0388\u0389\u0003\u0002\u0002\u0002\u0389\u0387",
    "\u0003\u0002\u0002\u0002\u0389\u038a\u0003\u0002\u0002\u0002\u038a\u0391",
    "\u0003\u0002\u0002\u0002\u038b\u038d\u0005\u001a\u000e\u0002\u038c\u038e",
    "\u0007\u00d4\u0002\u0002\u038d\u038c\u0003\u0002\u0002\u0002\u038e\u038f",
    "\u0003\u0002\u0002\u0002\u038f\u038d\u0003\u0002\u0002\u0002\u038f\u0390",
    "\u0003\u0002\u0002\u0002\u0390\u0392\u0003\u0002\u0002\u0002\u0391\u038b",
    "\u0003\u0002\u0002\u0002\u0391\u0392\u0003\u0002\u0002\u0002\u0392\u0393",
    "\u0003\u0002\u0002\u0002\u0393\u0396\u0007i\u0002\u0002\u0394\u0395",
    "\u0007\u00d6\u0002\u0002\u0395\u0397\u0005\u00fc\u007f\u0002\u0396\u0394",
    "\u0003\u0002\u0002\u0002\u0396\u0397\u0003\u0002\u0002\u0002\u0397I",
    "\u0003\u0002\u0002\u0002\u0398\u0399\u0005\u0114\u008b\u0002\u0399\u039a",
    "\u0007\u00d6\u0002\u0002\u039a\u039c\u0003\u0002\u0002\u0002\u039b\u0398",
    "\u0003\u0002\u0002\u0002\u039b\u039c\u0003\u0002\u0002\u0002\u039c\u039f",
    "\u0003\u0002\u0002\u0002\u039d\u039e\u0007\u0097\u0002\u0002\u039e\u03a0",
    "\u0007\u00d6\u0002\u0002\u039f\u039d\u0003\u0002\u0002\u0002\u039f\u03a0",
    "\u0003\u0002\u0002\u0002\u03a0\u03a1\u0003\u0002\u0002\u0002\u03a1\u03a2",
    "\u0007F\u0002\u0002\u03a2\u03a3\u0007\u00d6\u0002\u0002\u03a3\u03a8",
    "\u0005\u00fc\u007f\u0002\u03a4\u03a6\u0007\u00d6\u0002\u0002\u03a5\u03a4",
    "\u0003\u0002\u0002\u0002\u03a5\u03a6\u0003\u0002\u0002\u0002\u03a6\u03a7",
    "\u0003\u0002\u0002\u0002\u03a7\u03a9\u0005\u00f2z\u0002\u03a8\u03a5",
    "\u0003\u0002\u0002\u0002\u03a8\u03a9\u0003\u0002\u0002\u0002\u03a9\u03ac",
    "\u0003\u0002\u0002\u0002\u03aa\u03ab\u0007\u00d6\u0002\u0002\u03ab\u03ad",
    "\u0005\u00fe\u0080\u0002\u03ac\u03aa\u0003\u0002\u0002\u0002\u03ac\u03ad",
    "\u0003\u0002\u0002\u0002\u03ad\u03af\u0003\u0002\u0002\u0002\u03ae\u03b0",
    "\u0007\u00d4\u0002\u0002\u03af\u03ae\u0003\u0002\u0002\u0002\u03b0\u03b1",
    "\u0003\u0002\u0002\u0002\u03b1\u03af\u0003\u0002\u0002\u0002\u03b1\u03b2",
    "\u0003\u0002\u0002\u0002\u03b2\u03b9\u0003\u0002\u0002\u0002\u03b3\u03b5",
    "\u0005\u001a\u000e\u0002\u03b4\u03b6\u0007\u00d4\u0002\u0002\u03b5\u03b4",
    "\u0003\u0002\u0002\u0002\u03b6\u03b7\u0003\u0002\u0002\u0002\u03b7\u03b5",
    "\u0003\u0002\u0002\u0002\u03b7\u03b8\u0003\u0002\u0002\u0002\u03b8\u03ba",
    "\u0003\u0002\u0002\u0002\u03b9\u03b3\u0003\u0002\u0002\u0002\u03b9\u03ba",
    "\u0003\u0002\u0002\u0002\u03ba\u03bb\u0003\u0002\u0002\u0002\u03bb\u03bc",
    "\u00070\u0002\u0002\u03bcK\u0003\u0002\u0002\u0002\u03bd\u03be\u0007",
    "G\u0002\u0002\u03be\u03bf\u0007\u00d6\u0002\u0002\u03bf\u03c1\u0005",
    "\u00c4c\u0002\u03c0\u03c2\u0007\u00d6\u0002\u0002\u03c1\u03c0\u0003",
    "\u0002\u0002\u0002\u03c1\u03c2\u0003\u0002\u0002\u0002\u03c2\u03c3\u0003",
    "\u0002\u0002\u0002\u03c3\u03c5\u0007\u00b4\u0002\u0002\u03c4\u03c6\u0007",
    "\u00d6\u0002\u0002\u03c5\u03c4\u0003\u0002\u0002\u0002\u03c5\u03c6\u0003",
    "\u0002\u0002\u0002\u03c6\u03c8\u0003\u0002\u0002\u0002\u03c7\u03c9\u0005",
    "\u00c4c\u0002\u03c8\u03c7\u0003\u0002\u0002\u0002\u03c8\u03c9\u0003",
    "\u0002\u0002\u0002\u03c9\u03cb\u0003\u0002\u0002\u0002\u03ca\u03cc\u0007",
    "\u00d6\u0002\u0002\u03cb\u03ca\u0003\u0002\u0002\u0002\u03cb\u03cc\u0003",
    "\u0002\u0002\u0002\u03cc\u03cd\u0003\u0002\u0002\u0002\u03cd\u03cf\u0007",
    "\u00b4\u0002\u0002\u03ce\u03d0\u0007\u00d6\u0002\u0002\u03cf\u03ce\u0003",
    "\u0002\u0002\u0002\u03cf\u03d0\u0003\u0002\u0002\u0002\u03d0\u03d1\u0003",
    "\u0002\u0002\u0002\u03d1\u03d2\u0005\u00c4c\u0002\u03d2M\u0003\u0002",
    "\u0002\u0002\u03d3\u03d4\u0007I\u0002\u0002\u03d4\u03d5\u0007\u00d6",
    "\u0002\u0002\u03d5\u03d6\u0005\u00c4c\u0002\u03d6O\u0003\u0002\u0002",
    "\u0002\u03d7\u03d8\u0007J\u0002\u0002\u03d8\u03d9\u0007\u00d6\u0002",
    "\u0002\u03d9\u03da\u0005\u00c4c\u0002\u03daQ\u0003\u0002\u0002\u0002",
    "\u03db\u03dc\u0007K\u0002\u0002\u03dc\u03dd\u0007\u00d6\u0002\u0002",
    "\u03dd\u03de\u0005V,\u0002\u03de\u03df\u0007\u00d6\u0002\u0002\u03df",
    "\u03e0\u0007\u009e\u0002\u0002\u03e0\u03e1\u0007\u00d6\u0002\u0002\u03e1",
    "\u03e6\u0005\u001c\u000f\u0002\u03e2\u03e3\u0007\u00d6\u0002\u0002\u03e3",
    "\u03e4\u0007-\u0002\u0002\u03e4\u03e5\u0007\u00d6\u0002\u0002\u03e5",
    "\u03e7\u0005\u001c\u000f\u0002\u03e6\u03e2\u0003\u0002\u0002\u0002\u03e6",
    "\u03e7\u0003\u0002\u0002\u0002\u03e7\u03f5\u0003\u0002\u0002\u0002\u03e8",
    "\u03ec\u0005T+\u0002\u03e9\u03eb\u0005X-\u0002\u03ea\u03e9\u0003\u0002",
    "\u0002\u0002\u03eb\u03ee\u0003\u0002\u0002\u0002\u03ec\u03ea\u0003\u0002",
    "\u0002\u0002\u03ec\u03ed\u0003\u0002\u0002\u0002\u03ed\u03f0\u0003\u0002",
    "\u0002\u0002\u03ee\u03ec\u0003\u0002\u0002\u0002\u03ef\u03f1\u0005Z",
    ".\u0002\u03f0\u03ef\u0003\u0002\u0002\u0002\u03f0\u03f1\u0003\u0002",
    "\u0002\u0002\u03f1\u03f2\u0003\u0002\u0002\u0002\u03f2\u03f3\u00071",
    "\u0002\u0002\u03f3\u03f5\u0003\u0002\u0002\u0002\u03f4\u03db\u0003\u0002",
    "\u0002\u0002\u03f4\u03e8\u0003\u0002\u0002\u0002\u03f5S\u0003\u0002",
    "\u0002\u0002\u03f6\u03f7\u0007K\u0002\u0002\u03f7\u03f8\u0007\u00d6",
    "\u0002\u0002\u03f8\u03f9\u0005V,\u0002\u03f9\u03fa\u0007\u00d6\u0002",
    "\u0002\u03fa\u03fc\u0007\u009e\u0002\u0002\u03fb\u03fd\u0007\u00d4\u0002",
    "\u0002\u03fc\u03fb\u0003\u0002\u0002\u0002\u03fd\u03fe\u0003\u0002\u0002",
    "\u0002\u03fe\u03fc\u0003\u0002\u0002\u0002\u03fe\u03ff\u0003\u0002\u0002",
    "\u0002\u03ff\u0406\u0003\u0002\u0002\u0002\u0400\u0402\u0005\u001a\u000e",
    "\u0002\u0401\u0403\u0007\u00d4\u0002\u0002\u0402\u0401\u0003\u0002\u0002",
    "\u0002\u0403\u0404\u0003\u0002\u0002\u0002\u0404\u0402\u0003\u0002\u0002",
    "\u0002\u0404\u0405\u0003\u0002\u0002\u0002\u0405\u0407\u0003\u0002\u0002",
    "\u0002\u0406\u0400\u0003\u0002\u0002\u0002\u0406\u0407\u0003\u0002\u0002",
    "\u0002\u0407U\u0003\u0002\u0002\u0002\u0408\u0409\u0005\u00c4c\u0002",
    "\u0409W\u0003\u0002\u0002\u0002\u040a\u040b\u0007.\u0002\u0002\u040b",
    "\u040c\u0007\u00d6\u0002\u0002\u040c\u040d\u0005V,\u0002\u040d\u040e",
    "\u0007\u00d6\u0002\u0002\u040e\u0410\u0007\u009e\u0002\u0002\u040f\u0411",
    "\u0007\u00d4\u0002\u0002\u0410\u040f\u0003\u0002\u0002\u0002\u0411\u0412",
    "\u0003\u0002\u0002\u0002\u0412\u0410\u0003\u0002\u0002\u0002\u0412\u0413",
    "\u0003\u0002\u0002\u0002\u0413\u041a\u0003\u0002\u0002\u0002\u0414\u0416",
    "\u0005\u001a\u000e\u0002\u0415\u0417\u0007\u00d4\u0002\u0002\u0416\u0415",
    "\u0003\u0002\u0002\u0002\u0417\u0418\u0003\u0002\u0002\u0002\u0418\u0416",
    "\u0003\u0002\u0002\u0002\u0418\u0419\u0003\u0002\u0002\u0002\u0419\u041b",
    "\u0003\u0002\u0002\u0002\u041a\u0414\u0003\u0002\u0002\u0002\u041a\u041b",
    "\u0003\u0002\u0002\u0002\u041bY\u0003\u0002\u0002\u0002\u041c\u041e",
    "\u0007-\u0002\u0002\u041d\u041f\u0007\u00d4\u0002\u0002\u041e\u041d",
    "\u0003\u0002\u0002\u0002\u041f\u0420\u0003\u0002\u0002\u0002\u0420\u041e",
    "\u0003\u0002\u0002\u0002\u0420\u0421\u0003\u0002\u0002\u0002\u0421\u0428",
    "\u0003\u0002\u0002\u0002\u0422\u0424\u0005\u001a\u000e\u0002\u0423\u0425",
    "\u0007\u00d4\u0002\u0002\u0424\u0423\u0003\u0002\u0002\u0002\u0425\u0426",
    "\u0003\u0002\u0002\u0002\u0426\u0424\u0003\u0002\u0002\u0002\u0426\u0427",
    "\u0003\u0002\u0002\u0002\u0427\u0429\u0003\u0002\u0002\u0002\u0428\u0422",
    "\u0003\u0002\u0002\u0002\u0428\u0429\u0003\u0002\u0002\u0002\u0429[",
    "\u0003\u0002\u0002\u0002\u042a\u042b\u0007M\u0002\u0002\u042b\u042c",
    "\u0007\u00d6\u0002\u0002\u042c\u042d\u0005\u00fc\u007f\u0002\u042d]",
    "\u0003\u0002\u0002\u0002\u042e\u042f\u0007O\u0002\u0002\u042f\u0430",
    "\u0007\u00d6\u0002\u0002\u0430\u0439\u0005\u00c4c\u0002\u0431\u0433",
    "\u0007\u00d6\u0002\u0002\u0432\u0431\u0003\u0002\u0002\u0002\u0432\u0433",
    "\u0003\u0002\u0002\u0002\u0433\u0434\u0003\u0002\u0002\u0002\u0434\u0436",
    "\u0007\u00b4\u0002\u0002\u0435\u0437\u0007\u00d6\u0002\u0002\u0436\u0435",
    "\u0003\u0002\u0002\u0002\u0436\u0437\u0003\u0002\u0002\u0002\u0437\u0438",
    "\u0003\u0002\u0002\u0002\u0438\u043a\u0005\u00c4c\u0002\u0439\u0432",
    "\u0003\u0002\u0002\u0002\u043a\u043b\u0003\u0002\u0002\u0002\u043b\u0439",
    "\u0003\u0002\u0002\u0002\u043b\u043c\u0003\u0002\u0002\u0002\u043c_",
    "\u0003\u0002\u0002\u0002\u043d\u043e\u0007R\u0002\u0002\u043e\u043f",
    "\u0007\u00d6\u0002\u0002\u043f\u0440\u0005\u00c4c\u0002\u0440a\u0003",
    "\u0002\u0002\u0002\u0441\u0442\u0007X\u0002\u0002\u0442\u0444\u0007",
    "\u00d6\u0002\u0002\u0443\u0441\u0003\u0002\u0002\u0002\u0443\u0444\u0003",
    "\u0002\u0002\u0002\u0444\u0445\u0003\u0002\u0002\u0002\u0445\u0447\u0005",
    "\u00e0q\u0002\u0446\u0448\u0007\u00d6\u0002\u0002\u0447\u0446\u0003",
    "\u0002\u0002\u0002\u0447\u0448\u0003\u0002\u0002\u0002\u0448\u0449\u0003",
    "\u0002\u0002\u0002\u0449\u044b\t\u0006\u0002\u0002\u044a\u044c\u0007",
    "\u00d6\u0002\u0002\u044b\u044a\u0003\u0002\u0002\u0002\u044b\u044c\u0003",
    "\u0002\u0002\u0002\u044c\u044d\u0003\u0002\u0002\u0002\u044d\u044e\u0005",
    "\u00c4c\u0002\u044ec\u0003\u0002\u0002\u0002\u044f\u0450\u0007[\u0002",
    "\u0002\u0450\u0451\u0007\u00d6\u0002\u0002\u0451\u0453\u0005\u00c4c",
    "\u0002\u0452\u0454\u0007\u00d6\u0002\u0002\u0453\u0452\u0003\u0002\u0002",
    "\u0002\u0453\u0454\u0003\u0002\u0002\u0002\u0454\u0455\u0003\u0002\u0002",
    "\u0002\u0455\u0457\u0007\u00b4\u0002\u0002\u0456\u0458\u0007\u00d6\u0002",
    "\u0002\u0457\u0456\u0003\u0002\u0002\u0002\u0457\u0458\u0003\u0002\u0002",
    "\u0002\u0458\u0459\u0003\u0002\u0002\u0002\u0459\u045a\u0005\u00c4c",
    "\u0002\u045ae\u0003\u0002\u0002\u0002\u045b\u045c\u0007S\u0002\u0002",
    "\u045c\u045d\u0007\u00d6\u0002\u0002\u045d\u045e\u0005\u00c4c\u0002",
    "\u045eg\u0003\u0002\u0002\u0002\u045f\u0460\u0007T\u0002\u0002\u0460",
    "\u0461\u0007\u00d6\u0002\u0002\u0461\u0470\u0005\u00c4c\u0002\u0462",
    "\u0464\u0007\u00d6\u0002\u0002\u0463\u0462\u0003\u0002\u0002\u0002\u0463",
    "\u0464\u0003\u0002\u0002\u0002\u0464\u0465\u0003\u0002\u0002\u0002\u0465",
    "\u0467\u0007\u00b4\u0002\u0002\u0466\u0468\u0007\u00d6\u0002\u0002\u0467",
    "\u0466\u0003\u0002\u0002\u0002\u0467\u0468\u0003\u0002\u0002\u0002\u0468",
    "\u0469\u0003\u0002\u0002\u0002\u0469\u046e\u0005\u00c4c\u0002\u046a",
    "\u046b\u0007\u00d6\u0002\u0002\u046b\u046c\u0007\u00a0\u0002\u0002\u046c",
    "\u046d\u0007\u00d6\u0002\u0002\u046d\u046f\u0005\u00c4c\u0002\u046e",
    "\u046a\u0003\u0002\u0002\u0002\u046e\u046f\u0003\u0002\u0002\u0002\u046f",
    "\u0471\u0003\u0002\u0002\u0002\u0470\u0463\u0003\u0002\u0002\u0002\u0470",
    "\u0471\u0003\u0002\u0002\u0002\u0471i\u0003\u0002\u0002\u0002\u0472",
    "\u0473\u0007_\u0002\u0002\u0473\u0474\u0007\u00d6\u0002\u0002\u0474",
    "\u0476\u0005\u00e0q\u0002\u0475\u0477\u0007\u00d6\u0002\u0002\u0476",
    "\u0475\u0003\u0002\u0002\u0002\u0476\u0477\u0003\u0002\u0002\u0002\u0477",
    "\u0478\u0003\u0002\u0002\u0002\u0478\u047a\u0007\u00b8\u0002\u0002\u0479",
    "\u047b\u0007\u00d6\u0002\u0002\u047a\u0479\u0003\u0002\u0002\u0002\u047a",
    "\u047b\u0003\u0002\u0002\u0002\u047b\u047c\u0003\u0002\u0002\u0002\u047c",
    "\u047d\u0005\u00c4c\u0002\u047dk\u0003\u0002\u0002\u0002\u047e\u0482",
    "\u0005n8\u0002\u047f\u0481\u0005p9\u0002\u0480\u047f\u0003\u0002\u0002",
    "\u0002\u0481\u0484\u0003\u0002\u0002\u0002\u0482\u0480\u0003\u0002\u0002",
    "\u0002\u0482\u0483\u0003\u0002\u0002\u0002\u0483\u0486\u0003\u0002\u0002",
    "\u0002\u0484\u0482\u0003\u0002\u0002\u0002\u0485\u0487\u0005r:\u0002",
    "\u0486\u0485\u0003\u0002\u0002\u0002\u0486\u0487\u0003\u0002\u0002\u0002",
    "\u0487\u0488\u0003\u0002\u0002\u0002\u0488\u0489\u0007c\u0002\u0002",
    "\u0489m\u0003\u0002\u0002\u0002\u048a\u048b\u0007`\u0002\u0002\u048b",
    "\u048c\u0007\u00d6\u0002\u0002\u048c\u048d\u0005V,\u0002\u048d\u048e",
    "\u0007\u00d6\u0002\u0002\u048e\u0490\u0007\u009e\u0002\u0002\u048f\u0491",
    "\u0007\u00d4\u0002\u0002\u0490\u048f\u0003\u0002\u0002\u0002\u0491\u0492",
    "\u0003\u0002\u0002\u0002\u0492\u0490\u0003\u0002\u0002\u0002\u0492\u0493",
    "\u0003\u0002\u0002\u0002\u0493\u049a\u0003\u0002\u0002\u0002\u0494\u0496",
    "\u0005\u0012\n\u0002\u0495\u0497\u0007\u00d4\u0002\u0002\u0496\u0495",
    "\u0003\u0002\u0002\u0002\u0497\u0498\u0003\u0002\u0002\u0002\u0498\u0496",
    "\u0003\u0002\u0002\u0002\u0498\u0499\u0003\u0002\u0002\u0002\u0499\u049b",
    "\u0003\u0002\u0002\u0002\u049a\u0494\u0003\u0002\u0002\u0002\u049a\u049b",
    "\u0003\u0002\u0002\u0002\u049bo\u0003\u0002\u0002\u0002\u049c\u049d",
    "\u0007a\u0002\u0002\u049d\u049e\u0007\u00d6\u0002\u0002\u049e\u049f",
    "\u0005V,\u0002\u049f\u04a0\u0007\u00d6\u0002\u0002\u04a0\u04a2\u0007",
    "\u009e\u0002\u0002\u04a1\u04a3\u0007\u00d4\u0002\u0002\u04a2\u04a1\u0003",
    "\u0002\u0002\u0002\u04a3\u04a4\u0003\u0002\u0002\u0002\u04a4\u04a2\u0003",
    "\u0002\u0002\u0002\u04a4\u04a5\u0003\u0002\u0002\u0002\u04a5\u04ac\u0003",
    "\u0002\u0002\u0002\u04a6\u04a8\u0005\u0012\n\u0002\u04a7\u04a9\u0007",
    "\u00d4\u0002\u0002\u04a8\u04a7\u0003\u0002\u0002\u0002\u04a9\u04aa\u0003",
    "\u0002\u0002\u0002\u04aa\u04a8\u0003\u0002\u0002\u0002\u04aa\u04ab\u0003",
    "\u0002\u0002\u0002\u04ab\u04ad\u0003\u0002\u0002\u0002\u04ac\u04a6\u0003",
    "\u0002\u0002\u0002\u04ac\u04ad\u0003\u0002\u0002\u0002\u04adq\u0003",
    "\u0002\u0002\u0002\u04ae\u04b0\u0007b\u0002\u0002\u04af\u04b1\u0007",
    "\u00d4\u0002\u0002\u04b0\u04af\u0003\u0002\u0002\u0002\u04b1\u04b2\u0003",
    "\u0002\u0002\u0002\u04b2\u04b0\u0003\u0002\u0002\u0002\u04b2\u04b3\u0003",
    "\u0002\u0002\u0002\u04b3\u04ba\u0003\u0002\u0002\u0002\u04b4\u04b6\u0005",
    "\u0012\n\u0002\u04b5\u04b7\u0007\u00d4\u0002\u0002\u04b6\u04b5\u0003",
    "\u0002\u0002\u0002\u04b7\u04b8\u0003\u0002\u0002\u0002\u04b8\u04b6\u0003",
    "\u0002\u0002\u0002\u04b8\u04b9\u0003\u0002\u0002\u0002\u04b9\u04bb\u0003",
    "\u0002\u0002\u0002\u04ba\u04b4\u0003\u0002\u0002\u0002\u04ba\u04bb\u0003",
    "\u0002\u0002\u0002\u04bbs\u0003\u0002\u0002\u0002\u04bc\u04be\u0007",
    "e\u0002\u0002\u04bd\u04bf\u0007\u00d6\u0002\u0002\u04be\u04bd\u0003",
    "\u0002\u0002\u0002\u04be\u04bf\u0003\u0002\u0002\u0002\u04bf\u04c0\u0003",
    "\u0002\u0002\u0002\u04c0\u04c2\u0007\u00be\u0002\u0002\u04c1\u04c3\u0007",
    "\u00d6\u0002\u0002\u04c2\u04c1\u0003\u0002\u0002\u0002\u04c2\u04c3\u0003",
    "\u0002\u0002\u0002\u04c3\u04c4\u0003\u0002\u0002\u0002\u04c4\u04c6\u0005",
    "\u00ecw\u0002\u04c5\u04c7\u0007\u00d6\u0002\u0002\u04c6\u04c5\u0003",
    "\u0002\u0002\u0002\u04c6\u04c7\u0003\u0002\u0002\u0002\u04c7\u04c8\u0003",
    "\u0002\u0002\u0002\u04c8\u04c9\u0007\u00c8\u0002\u0002\u04c9u\u0003",
    "\u0002\u0002\u0002\u04ca\u04cb\u0007f\u0002\u0002\u04cb\u04cc\u0007",
    "\u00d6\u0002\u0002\u04cc\u04cd\u0005\u00c4c\u0002\u04cdw\u0003\u0002",
    "\u0002\u0002\u04ce\u04cf\u0007h\u0002\u0002\u04cf\u04d0\u0007\u00d6",
    "\u0002\u0002\u04d0\u04d1\u0005\u00c4c\u0002\u04d1\u04d2\u0007\u00d6",
    "\u0002\u0002\u04d2\u04d3\u0007\n\u0002\u0002\u04d3\u04d4\u0007\u00d6",
    "\u0002\u0002\u04d4\u04d5\u0005\u00c4c\u0002\u04d5y\u0003\u0002\u0002",
    "\u0002\u04d6\u04d7\u0007o\u0002\u0002\u04d7\u04de\u0007\u00d6\u0002",
    "\u0002\u04d8\u04d9\u0007J\u0002\u0002\u04d9\u04da\u0007\u00d6\u0002",
    "\u0002\u04da\u04df\u0005\u00c4c\u0002\u04db\u04dc\u0007\u0089\u0002",
    "\u0002\u04dc\u04dd\u0007\u00d6\u0002\u0002\u04dd\u04df\u0007i\u0002",
    "\u0002\u04de\u04d8\u0003\u0002\u0002\u0002\u04de\u04db\u0003\u0002\u0002",
    "\u0002\u04df{\u0003\u0002\u0002\u0002\u04e0\u04e1\u0007n\u0002\u0002",
    "\u04e1\u04e2\u0007\u00d6\u0002\u0002\u04e2\u04e3\u0005\u00c4c\u0002",
    "\u04e3\u04e4\u0007\u00d6\u0002\u0002\u04e4\u04e5\u0007J\u0002\u0002",
    "\u04e5\u04e6\u0007\u00d6\u0002\u0002\u04e6\u04f1\u0005\u00c4c\u0002",
    "\u04e7\u04e9\u0007\u00d6\u0002\u0002\u04e8\u04e7\u0003\u0002\u0002\u0002",
    "\u04e8\u04e9\u0003\u0002\u0002\u0002\u04e9\u04ea\u0003\u0002\u0002\u0002",
    "\u04ea\u04ec\u0007\u00b4\u0002\u0002\u04eb\u04ed\u0007\u00d6\u0002\u0002",
    "\u04ec\u04eb\u0003\u0002\u0002\u0002\u04ec\u04ed\u0003\u0002\u0002\u0002",
    "\u04ed\u04ee\u0003\u0002\u0002\u0002\u04ee\u04f0\u0005\u00c4c\u0002",
    "\u04ef\u04e8\u0003\u0002\u0002\u0002\u04f0\u04f3\u0003\u0002\u0002\u0002",
    "\u04f1\u04ef\u0003\u0002\u0002\u0002\u04f1\u04f2\u0003\u0002\u0002\u0002",
    "\u04f2}\u0003\u0002\u0002\u0002\u04f3\u04f1\u0003\u0002\u0002\u0002",
    "\u04f4\u04f5\u0007n\u0002\u0002\u04f5\u04f6\u0007\u00d6\u0002\u0002",
    "\u04f6\u04f7\u0005\u00c4c\u0002\u04f7\u04f8\u0007\u00d6\u0002\u0002",
    "\u04f8\u04f9\u0007I\u0002\u0002\u04f9\u04fa\u0007\u00d6\u0002\u0002",
    "\u04fa\u0505\u0005\u00c4c\u0002\u04fb\u04fd\u0007\u00d6\u0002\u0002",
    "\u04fc\u04fb\u0003\u0002\u0002\u0002\u04fc\u04fd\u0003\u0002\u0002\u0002",
    "\u04fd\u04fe\u0003\u0002\u0002\u0002\u04fe\u0500\u0007\u00b4\u0002\u0002",
    "\u04ff\u0501\u0007\u00d6\u0002\u0002\u0500\u04ff\u0003\u0002\u0002\u0002",
    "\u0500\u0501\u0003\u0002\u0002\u0002\u0501\u0502\u0003\u0002\u0002\u0002",
    "\u0502\u0504\u0005\u00c4c\u0002\u0503\u04fc\u0003\u0002\u0002\u0002",
    "\u0504\u0507\u0003\u0002\u0002\u0002\u0505\u0503\u0003\u0002\u0002\u0002",
    "\u0505\u0506\u0003\u0002\u0002\u0002\u0506\u007f\u0003\u0002\u0002\u0002",
    "\u0507\u0505\u0003\u0002\u0002\u0002\u0508\u0509\u0007p\u0002\u0002",
    "\u0509\u050a\u0007\u00d6\u0002\u0002\u050a\u050b\u0005\u00c4c\u0002",
    "\u050b\u050c\u0007\u00d6\u0002\u0002\u050c\u050d\u0007E\u0002\u0002",
    "\u050d\u050e\u0007\u00d6\u0002\u0002\u050e\u0513\t\u0007\u0002\u0002",
    "\u050f\u0510\u0007\u00d6\u0002\u0002\u0510\u0511\u0007\u0003\u0002\u0002",
    "\u0511\u0512\u0007\u00d6\u0002\u0002\u0512\u0514\t\b\u0002\u0002\u0513",
    "\u050f\u0003\u0002\u0002\u0002\u0513\u0514\u0003\u0002\u0002\u0002\u0514",
    "\u0517\u0003\u0002\u0002\u0002\u0515\u0516\u0007\u00d6\u0002\u0002\u0516",
    "\u0518\t\t\u0002\u0002\u0517\u0515\u0003\u0002\u0002\u0002\u0517\u0518",
    "\u0003\u0002\u0002\u0002\u0518\u0519\u0003\u0002\u0002\u0002\u0519\u051a",
    "\u0007\u00d6\u0002\u0002\u051a\u051b\u0007\n\u0002\u0002\u051b\u051c",
    "\u0007\u00d6\u0002\u0002\u051c\u0527\u0005\u00c4c\u0002\u051d\u051e",
    "\u0007\u00d6\u0002\u0002\u051e\u0520\u0007W\u0002\u0002\u051f\u0521",
    "\u0007\u00d6\u0002\u0002\u0520\u051f\u0003\u0002\u0002\u0002\u0520\u0521",
    "\u0003\u0002\u0002\u0002\u0521\u0522\u0003\u0002\u0002\u0002\u0522\u0524",
    "\u0007\u00b8\u0002\u0002\u0523\u0525\u0007\u00d6\u0002\u0002\u0524\u0523",
    "\u0003\u0002\u0002\u0002\u0524\u0525\u0003\u0002\u0002\u0002\u0525\u0526",
    "\u0003\u0002\u0002\u0002\u0526\u0528\u0005\u00c4c\u0002\u0527\u051d",
    "\u0003\u0002\u0002\u0002\u0527\u0528\u0003\u0002\u0002\u0002\u0528\u0081",
    "\u0003\u0002\u0002\u0002\u0529\u0536\u0005\u0084C\u0002\u052a\u052c",
    "\u0007\u00d6\u0002\u0002\u052b\u052a\u0003\u0002\u0002\u0002\u052b\u052c",
    "\u0003\u0002\u0002\u0002\u052c\u052d\u0003\u0002\u0002\u0002\u052d\u052f",
    "\t\n\u0002\u0002\u052e\u0530\u0007\u00d6\u0002\u0002\u052f\u052e\u0003",
    "\u0002\u0002\u0002\u052f\u0530\u0003\u0002\u0002\u0002\u0530\u0532\u0003",
    "\u0002\u0002\u0002\u0531\u0533\u0005\u0084C\u0002\u0532\u0531\u0003",
    "\u0002\u0002\u0002\u0532\u0533\u0003\u0002\u0002\u0002\u0533\u0535\u0003",
    "\u0002\u0002\u0002\u0534\u052b\u0003\u0002\u0002\u0002\u0535\u0538\u0003",
    "\u0002\u0002\u0002\u0536\u0534\u0003\u0002\u0002\u0002\u0536\u0537\u0003",
    "\u0002\u0002\u0002\u0537\u054b\u0003\u0002\u0002\u0002\u0538\u0536\u0003",
    "\u0002\u0002\u0002\u0539\u053b\u0005\u0084C\u0002\u053a\u0539\u0003",
    "\u0002\u0002\u0002\u053a\u053b\u0003\u0002\u0002\u0002\u053b\u0546\u0003",
    "\u0002\u0002\u0002\u053c\u053e\u0007\u00d6\u0002\u0002\u053d\u053c\u0003",
    "\u0002\u0002\u0002\u053d\u053e\u0003\u0002\u0002\u0002\u053e\u053f\u0003",
    "\u0002\u0002\u0002\u053f\u0541\t\n\u0002\u0002\u0540\u0542\u0007\u00d6",
    "\u0002\u0002\u0541\u0540\u0003\u0002\u0002\u0002\u0541\u0542\u0003\u0002",
    "\u0002\u0002\u0542\u0544\u0003\u0002\u0002\u0002\u0543\u0545\u0005\u0084",
    "C\u0002\u0544\u0543\u0003\u0002\u0002\u0002\u0544\u0545\u0003\u0002",
    "\u0002\u0002\u0545\u0547\u0003\u0002\u0002\u0002\u0546\u053d\u0003\u0002",
    "\u0002\u0002\u0547\u0548\u0003\u0002\u0002\u0002\u0548\u0546\u0003\u0002",
    "\u0002\u0002\u0548\u0549\u0003\u0002\u0002\u0002\u0549\u054b\u0003\u0002",
    "\u0002\u0002\u054a\u0529\u0003\u0002\u0002\u0002\u054a\u053a\u0003\u0002",
    "\u0002\u0002\u054b\u0083\u0003\u0002\u0002\u0002\u054c\u055e\u0005\u00c4",
    "c\u0002\u054d\u055b\t\u000b\u0002\u0002\u054e\u0550\u0007\u00d6\u0002",
    "\u0002\u054f\u054e\u0003\u0002\u0002\u0002\u054f\u0550\u0003\u0002\u0002",
    "\u0002\u0550\u0551\u0003\u0002\u0002\u0002\u0551\u0553\u0007\u00be\u0002",
    "\u0002\u0552\u0554\u0007\u00d6\u0002\u0002\u0553\u0552\u0003\u0002\u0002",
    "\u0002\u0553\u0554\u0003\u0002\u0002\u0002\u0554\u0555\u0003\u0002\u0002",
    "\u0002\u0555\u0557\u0005\u00ecw\u0002\u0556\u0558\u0007\u00d6\u0002",
    "\u0002\u0557\u0556\u0003\u0002\u0002\u0002\u0557\u0558\u0003\u0002\u0002",
    "\u0002\u0558\u0559\u0003\u0002\u0002\u0002\u0559\u055a\u0007\u00c8\u0002",
    "\u0002\u055a\u055c\u0003\u0002\u0002\u0002\u055b\u054f\u0003\u0002\u0002",
    "\u0002\u055b\u055c\u0003\u0002\u0002\u0002\u055c\u055e\u0003\u0002\u0002",
    "\u0002\u055d\u054c\u0003\u0002\u0002\u0002\u055d\u054d\u0003\u0002\u0002",
    "\u0002\u055e\u0085\u0003\u0002\u0002\u0002\u055f\u0560\u0007z\u0002",
    "\u0002\u0560\u0561\u0007\u00d6\u0002\u0002\u0561\u0563\u0005\u00c4c",
    "\u0002\u0562\u0564\u0007\u00d6\u0002\u0002\u0563\u0562\u0003\u0002\u0002",
    "\u0002\u0563\u0564\u0003\u0002\u0002\u0002\u0564\u0565\u0003\u0002\u0002",
    "\u0002\u0565\u056a\u0007\u00b4\u0002\u0002\u0566\u0568\u0007\u00d6\u0002",
    "\u0002\u0567\u0566\u0003\u0002\u0002\u0002\u0567\u0568\u0003\u0002\u0002",
    "\u0002\u0568\u0569\u0003\u0002\u0002\u0002\u0569\u056b\u0005\u0082B",
    "\u0002\u056a\u0567\u0003\u0002\u0002\u0002\u056a\u056b\u0003\u0002\u0002",
    "\u0002\u056b\u0087\u0003\u0002\u0002\u0002\u056c\u056d\u0005\u0114\u008b",
    "\u0002\u056d\u056e\u0007\u00d6\u0002\u0002\u056e\u0570\u0003\u0002\u0002",
    "\u0002\u056f\u056c\u0003\u0002\u0002\u0002\u056f\u0570\u0003\u0002\u0002",
    "\u0002\u0570\u0573\u0003\u0002\u0002\u0002\u0571\u0572\u0007\u0097\u0002",
    "\u0002\u0572\u0574\u0007\u00d6\u0002\u0002\u0573\u0571\u0003\u0002\u0002",
    "\u0002\u0573\u0574\u0003\u0002\u0002\u0002\u0574\u0575\u0003\u0002\u0002",
    "\u0002\u0575\u0576\u0007|\u0002\u0002\u0576\u0577\u0007\u00d6\u0002",
    "\u0002\u0577\u0579\u0005\u00fc\u007f\u0002\u0578\u057a\u0005\u0112\u008a",
    "\u0002\u0579\u0578\u0003\u0002\u0002\u0002\u0579\u057a\u0003\u0002\u0002",
    "\u0002\u057a\u057f\u0003\u0002\u0002\u0002\u057b\u057d\u0007\u00d6\u0002",
    "\u0002\u057c\u057b\u0003\u0002\u0002\u0002\u057c\u057d\u0003\u0002\u0002",
    "\u0002\u057d\u057e\u0003\u0002\u0002\u0002\u057e\u0580\u0005\u00f2z",
    "\u0002\u057f\u057c\u0003\u0002\u0002\u0002\u057f\u0580\u0003\u0002\u0002",
    "\u0002\u0580\u0583\u0003\u0002\u0002\u0002\u0581\u0582\u0007\u00d6\u0002",
    "\u0002\u0582\u0584\u0005\u00fe\u0080\u0002\u0583\u0581\u0003\u0002\u0002",
    "\u0002\u0583\u0584\u0003\u0002\u0002\u0002\u0584\u0586\u0003\u0002\u0002",
    "\u0002\u0585\u0587\u0007\u00d4\u0002\u0002\u0586\u0585\u0003\u0002\u0002",
    "\u0002\u0587\u0588\u0003\u0002\u0002\u0002\u0588\u0586\u0003\u0002\u0002",
    "\u0002\u0588\u0589\u0003\u0002\u0002\u0002\u0589\u0590\u0003\u0002\u0002",
    "\u0002\u058a\u058c\u0005\u001a\u000e\u0002\u058b\u058d\u0007\u00d4\u0002",
    "\u0002\u058c\u058b\u0003\u0002\u0002\u0002\u058d\u058e\u0003\u0002\u0002",
    "\u0002\u058e\u058c\u0003\u0002\u0002\u0002\u058e\u058f\u0003\u0002\u0002",
    "\u0002\u058f\u0591\u0003\u0002\u0002\u0002\u0590\u058a\u0003\u0002\u0002",
    "\u0002\u0590\u0591\u0003\u0002\u0002\u0002\u0591\u0592\u0003\u0002\u0002",
    "\u0002\u0592\u0593\u00072\u0002\u0002\u0593\u0089\u0003\u0002\u0002",
    "\u0002\u0594\u0595\u0005\u0114\u008b\u0002\u0595\u0596\u0007\u00d6\u0002",
    "\u0002\u0596\u0598\u0003\u0002\u0002\u0002\u0597\u0594\u0003\u0002\u0002",
    "\u0002\u0597\u0598\u0003\u0002\u0002\u0002\u0598\u059b\u0003\u0002\u0002",
    "\u0002\u0599\u059a\u0007\u0097\u0002\u0002\u059a\u059c\u0007\u00d6\u0002",
    "\u0002\u059b\u0599\u0003\u0002\u0002\u0002\u059b\u059c\u0003\u0002\u0002",
    "\u0002\u059c\u059d\u0003\u0002\u0002\u0002\u059d\u059e\u0007~\u0002",
    "\u0002\u059e\u059f\u0007\u00d6\u0002\u0002\u059f\u05a4\u0005\u00fc\u007f",
    "\u0002\u05a0\u05a2\u0007\u00d6\u0002\u0002\u05a1\u05a0\u0003\u0002\u0002",
    "\u0002\u05a1\u05a2\u0003\u0002\u0002\u0002\u05a2\u05a3\u0003\u0002\u0002",
    "\u0002\u05a3\u05a5\u0005\u00f2z\u0002\u05a4\u05a1\u0003\u0002\u0002",
    "\u0002\u05a4\u05a5\u0003\u0002\u0002\u0002\u05a5\u05a7\u0003\u0002\u0002",
    "\u0002\u05a6\u05a8\u0007\u00d4\u0002\u0002\u05a7\u05a6\u0003\u0002\u0002",
    "\u0002\u05a8\u05a9\u0003\u0002\u0002\u0002\u05a9\u05a7\u0003\u0002\u0002",
    "\u0002\u05a9\u05aa\u0003\u0002\u0002\u0002\u05aa\u05b1\u0003\u0002\u0002",
    "\u0002\u05ab\u05ad\u0005\u001a\u000e\u0002\u05ac\u05ae\u0007\u00d4\u0002",
    "\u0002\u05ad\u05ac\u0003\u0002\u0002\u0002\u05ae\u05af\u0003\u0002\u0002",
    "\u0002\u05af\u05ad\u0003\u0002\u0002\u0002\u05af\u05b0\u0003\u0002\u0002",
    "\u0002\u05b0\u05b2\u0003\u0002\u0002\u0002\u05b1\u05ab\u0003\u0002\u0002",
    "\u0002\u05b1\u05b2\u0003\u0002\u0002\u0002\u05b2\u05b3\u0003\u0002\u0002",
    "\u0002\u05b3\u05b4\u00072\u0002\u0002\u05b4\u008b\u0003\u0002\u0002",
    "\u0002\u05b5\u05b6\u0005\u0114\u008b\u0002\u05b6\u05b7\u0007\u00d6\u0002",
    "\u0002\u05b7\u05b9\u0003\u0002\u0002\u0002\u05b8\u05b5\u0003\u0002\u0002",
    "\u0002\u05b8\u05b9\u0003\u0002\u0002\u0002\u05b9\u05bc\u0003\u0002\u0002",
    "\u0002\u05ba\u05bb\u0007\u0097\u0002\u0002\u05bb\u05bd\u0007\u00d6\u0002",
    "\u0002\u05bc\u05ba\u0003\u0002\u0002\u0002\u05bc\u05bd\u0003\u0002\u0002",
    "\u0002\u05bd\u05be\u0003\u0002\u0002\u0002\u05be\u05bf\u0007}\u0002",
    "\u0002\u05bf\u05c0\u0007\u00d6\u0002\u0002\u05c0\u05c5\u0005\u00fc\u007f",
    "\u0002\u05c1\u05c3\u0007\u00d6\u0002\u0002\u05c2\u05c1\u0003\u0002\u0002",
    "\u0002\u05c2\u05c3\u0003\u0002\u0002\u0002\u05c3\u05c4\u0003\u0002\u0002",
    "\u0002\u05c4\u05c6\u0005\u00f2z\u0002\u05c5\u05c2\u0003\u0002\u0002",
    "\u0002\u05c5\u05c6\u0003\u0002\u0002\u0002\u05c6\u05c8\u0003\u0002\u0002",
    "\u0002\u05c7\u05c9\u0007\u00d4\u0002\u0002\u05c8\u05c7\u0003\u0002\u0002",
    "\u0002\u05c9\u05ca\u0003\u0002\u0002\u0002\u05ca\u05c8\u0003\u0002\u0002",
    "\u0002\u05ca\u05cb\u0003\u0002\u0002\u0002\u05cb\u05d2\u0003\u0002\u0002",
    "\u0002\u05cc\u05ce\u0005\u001a\u000e\u0002\u05cd\u05cf\u0007\u00d4\u0002",
    "\u0002\u05ce\u05cd\u0003\u0002\u0002\u0002\u05cf\u05d0\u0003\u0002\u0002",
    "\u0002\u05d0\u05ce\u0003\u0002\u0002\u0002\u05d0\u05d1\u0003\u0002\u0002",
    "\u0002\u05d1\u05d3\u0003\u0002\u0002\u0002\u05d2\u05cc\u0003\u0002\u0002",
    "\u0002\u05d2\u05d3\u0003\u0002\u0002\u0002\u05d3\u05d4\u0003\u0002\u0002",
    "\u0002\u05d4\u05d5\u00072\u0002\u0002\u05d5\u008d\u0003\u0002\u0002",
    "\u0002\u05d6\u05d7\u0007\u0080\u0002\u0002\u05d7\u05d8\u0007\u00d6\u0002",
    "\u0002\u05d8\u05da\u0005\u00c4c\u0002\u05d9\u05db\u0007\u00d6\u0002",
    "\u0002\u05da\u05d9\u0003\u0002\u0002\u0002\u05da\u05db\u0003\u0002\u0002",
    "\u0002\u05db\u05dc\u0003\u0002\u0002\u0002\u05dc\u05de\u0007\u00b4\u0002",
    "\u0002\u05dd\u05df\u0007\u00d6\u0002\u0002\u05de\u05dd\u0003\u0002\u0002",
    "\u0002\u05de\u05df\u0003\u0002\u0002\u0002\u05df\u05e1\u0003\u0002\u0002",
    "\u0002\u05e0\u05e2\u0005\u00c4c\u0002\u05e1\u05e0\u0003\u0002\u0002",
    "\u0002\u05e1\u05e2\u0003\u0002\u0002\u0002\u05e2\u05e4\u0003\u0002\u0002",
    "\u0002\u05e3\u05e5\u0007\u00d6\u0002\u0002\u05e4\u05e3\u0003\u0002\u0002",
    "\u0002\u05e4\u05e5\u0003\u0002\u0002\u0002\u05e5\u05e6\u0003\u0002\u0002",
    "\u0002\u05e6\u05e8\u0007\u00b4\u0002\u0002\u05e7\u05e9\u0007\u00d6\u0002",
    "\u0002\u05e8\u05e7\u0003\u0002\u0002\u0002\u05e8\u05e9\u0003\u0002\u0002",
    "\u0002\u05e9\u05ea\u0003\u0002\u0002\u0002\u05ea\u05eb\u0005\u00c4c",
    "\u0002\u05eb\u008f\u0003\u0002\u0002\u0002\u05ec\u05ed\u0007\u0083\u0002",
    "\u0002\u05ed\u05ee\u0007\u00d6\u0002\u0002\u05ee\u05fd\u0005\u00fc\u007f",
    "\u0002\u05ef\u05f1\u0007\u00d6\u0002\u0002\u05f0\u05ef\u0003\u0002\u0002",
    "\u0002\u05f0\u05f1\u0003\u0002\u0002\u0002\u05f1\u05f2\u0003\u0002\u0002",
    "\u0002\u05f2\u05f4\u0007\u00be\u0002\u0002\u05f3\u05f5\u0007\u00d6\u0002",
    "\u0002\u05f4\u05f3\u0003\u0002\u0002\u0002\u05f4\u05f5\u0003\u0002\u0002",
    "\u0002\u05f5\u05fa\u0003\u0002\u0002\u0002\u05f6\u05f8\u0005\u00ecw",
    "\u0002\u05f7\u05f9\u0007\u00d6\u0002\u0002\u05f8\u05f7\u0003\u0002\u0002",
    "\u0002\u05f8\u05f9\u0003\u0002\u0002\u0002\u05f9\u05fb\u0003\u0002\u0002",
    "\u0002\u05fa\u05f6\u0003\u0002\u0002\u0002\u05fa\u05fb\u0003\u0002\u0002",
    "\u0002\u05fb\u05fc\u0003\u0002\u0002\u0002\u05fc\u05fe\u0007\u00c8\u0002",
    "\u0002\u05fd\u05f0\u0003\u0002\u0002\u0002\u05fd\u05fe\u0003\u0002\u0002",
    "\u0002\u05fe\u0091\u0003\u0002\u0002\u0002\u05ff\u0602\u0007\u0082\u0002",
    "\u0002\u0600\u0601\u0007\u00d6\u0002\u0002\u0601\u0603\u0005\u00c4c",
    "\u0002\u0602\u0600\u0003\u0002\u0002\u0002\u0602\u0603\u0003\u0002\u0002",
    "\u0002\u0603\u0093\u0003\u0002\u0002\u0002\u0604\u0605\u0007\u0086\u0002",
    "\u0002\u0605\u0608\u0007\u00d6\u0002\u0002\u0606\u0607\u0007y\u0002",
    "\u0002\u0607\u0609\u0007\u00d6\u0002\u0002\u0608\u0606\u0003\u0002\u0002",
    "\u0002\u0608\u0609\u0003\u0002\u0002\u0002\u0609\u060a\u0003\u0002\u0002",
    "\u0002\u060a\u0615\u0005\u0096L\u0002\u060b\u060d\u0007\u00d6\u0002",
    "\u0002\u060c\u060b\u0003\u0002\u0002\u0002\u060c\u060d\u0003\u0002\u0002",
    "\u0002\u060d\u060e\u0003\u0002\u0002\u0002\u060e\u0610\u0007\u00b4\u0002",
    "\u0002\u060f\u0611\u0007\u00d6\u0002\u0002\u0610\u060f\u0003\u0002\u0002",
    "\u0002\u0610\u0611\u0003\u0002\u0002\u0002\u0611\u0612\u0003\u0002\u0002",
    "\u0002\u0612\u0614\u0005\u0096L\u0002\u0613\u060c\u0003\u0002\u0002",
    "\u0002\u0614\u0617\u0003\u0002\u0002\u0002\u0615\u0613\u0003\u0002\u0002",
    "\u0002\u0615\u0616\u0003\u0002\u0002\u0002\u0616\u0095\u0003\u0002\u0002",
    "\u0002\u0617\u0615\u0003\u0002\u0002\u0002\u0618\u061a\u0005\u00e0q",
    "\u0002\u0619\u061b\u0007\u00d6\u0002\u0002\u061a\u0619\u0003\u0002\u0002",
    "\u0002\u061a\u061b\u0003\u0002\u0002\u0002\u061b\u061c\u0003\u0002\u0002",
    "\u0002\u061c\u061e\u0007\u00be\u0002\u0002\u061d\u061f\u0007\u00d6\u0002",
    "\u0002\u061e\u061d\u0003\u0002\u0002\u0002\u061e\u061f\u0003\u0002\u0002",
    "\u0002\u061f\u0620\u0003\u0002\u0002\u0002\u0620\u0622\u0005\u00f8}",
    "\u0002\u0621\u0623\u0007\u00d6\u0002\u0002\u0622\u0621\u0003\u0002\u0002",
    "\u0002\u0622\u0623\u0003\u0002\u0002\u0002\u0623\u0624\u0003\u0002\u0002",
    "\u0002\u0624\u0627\u0007\u00c8\u0002\u0002\u0625\u0626\u0007\u00d6\u0002",
    "\u0002\u0626\u0628\u0005\u00fe\u0080\u0002\u0627\u0625\u0003\u0002\u0002",
    "\u0002\u0627\u0628\u0003\u0002\u0002\u0002\u0628\u0097\u0003\u0002\u0002",
    "\u0002\u0629\u062a\u0007\u0088\u0002\u0002\u062a\u0099\u0003\u0002\u0002",
    "\u0002\u062b\u0631\u0007\u0089\u0002\u0002\u062c\u062f\u0007\u00d6\u0002",
    "\u0002\u062d\u0630\u0007i\u0002\u0002\u062e\u0630\u0005\u00fc\u007f",
    "\u0002\u062f\u062d\u0003\u0002\u0002\u0002\u062f\u062e\u0003\u0002\u0002",
    "\u0002\u0630\u0632\u0003\u0002\u0002\u0002\u0631\u062c\u0003\u0002\u0002",
    "\u0002\u0631\u0632\u0003\u0002\u0002\u0002\u0632\u009b\u0003\u0002\u0002",
    "\u0002\u0633\u0634\u0007\u008a\u0002\u0002\u0634\u009d\u0003\u0002\u0002",
    "\u0002\u0635\u0636\u0007\u008b\u0002\u0002\u0636\u0637\u0007\u00d6\u0002",
    "\u0002\u0637\u0638\u0005\u00c4c\u0002\u0638\u009f\u0003\u0002\u0002",
    "\u0002\u0639\u063a\u0007\u008c\u0002\u0002\u063a\u063b\u0007\u00d6\u0002",
    "\u0002\u063b\u063d\u0005\u00e0q\u0002\u063c\u063e\u0007\u00d6\u0002",
    "\u0002\u063d\u063c\u0003\u0002\u0002\u0002\u063d\u063e\u0003\u0002\u0002",
    "\u0002\u063e\u063f\u0003\u0002\u0002\u0002\u063f\u0641\u0007\u00b8\u0002",
    "\u0002\u0640\u0642\u0007\u00d6\u0002\u0002\u0641\u0640\u0003\u0002\u0002",
    "\u0002\u0641\u0642\u0003\u0002\u0002\u0002\u0642\u0643\u0003\u0002\u0002",
    "\u0002\u0643\u0644\u0005\u00c4c\u0002\u0644\u00a1\u0003\u0002\u0002",
    "\u0002\u0645\u0646\u0007\u008d\u0002\u0002\u0646\u0647\u0007\u00d6\u0002",
    "\u0002\u0647\u0649\u0005\u00c4c\u0002\u0648\u064a\u0007\u00d6\u0002",
    "\u0002\u0649\u0648\u0003\u0002\u0002\u0002\u0649\u064a\u0003\u0002\u0002",
    "\u0002\u064a\u064b\u0003\u0002\u0002\u0002\u064b\u064d\u0007\u00b4\u0002",
    "\u0002\u064c\u064e\u0007\u00d6\u0002\u0002\u064d\u064c\u0003\u0002\u0002",
    "\u0002\u064d\u064e\u0003\u0002\u0002\u0002\u064e\u064f\u0003\u0002\u0002",
    "\u0002\u064f\u0650\u0005\u00c4c\u0002\u0650\u00a3\u0003\u0002\u0002",
    "\u0002\u0651\u0652\u0007\u008e\u0002\u0002\u0652\u0653\u0007\u00d6\u0002",
    "\u0002\u0653\u0655\u0005\u00c4c\u0002\u0654\u0656\u0007\u00d6\u0002",
    "\u0002\u0655\u0654\u0003\u0002\u0002\u0002\u0655\u0656\u0003\u0002\u0002",
    "\u0002\u0656\u0657\u0003\u0002\u0002\u0002\u0657\u0659\u0007\u00b4\u0002",
    "\u0002\u0658\u065a\u0007\u00d6\u0002\u0002\u0659\u0658\u0003\u0002\u0002",
    "\u0002\u0659\u065a\u0003\u0002\u0002\u0002\u065a\u065b\u0003\u0002\u0002",
    "\u0002\u065b\u065d\u0005\u00c4c\u0002\u065c\u065e\u0007\u00d6\u0002",
    "\u0002\u065d\u065c\u0003\u0002\u0002\u0002\u065d\u065e\u0003\u0002\u0002",
    "\u0002\u065e\u065f\u0003\u0002\u0002\u0002\u065f\u0661\u0007\u00b4\u0002",
    "\u0002\u0660\u0662\u0007\u00d6\u0002\u0002\u0661\u0660\u0003\u0002\u0002",
    "\u0002\u0661\u0662\u0003\u0002\u0002\u0002\u0662\u0663\u0003\u0002\u0002",
    "\u0002\u0663\u0665\u0005\u00c4c\u0002\u0664\u0666\u0007\u00d6\u0002",
    "\u0002\u0665\u0664\u0003\u0002\u0002\u0002\u0665\u0666\u0003\u0002\u0002",
    "\u0002\u0666\u0667\u0003\u0002\u0002\u0002\u0667\u0669\u0007\u00b4\u0002",
    "\u0002\u0668\u066a\u0007\u00d6\u0002\u0002\u0669\u0668\u0003\u0002\u0002",
    "\u0002\u0669\u066a\u0003\u0002\u0002\u0002\u066a\u066b\u0003\u0002\u0002",
    "\u0002\u066b\u066c\u0005\u00c4c\u0002\u066c\u00a5\u0003\u0002\u0002",
    "\u0002\u066d\u066e\u0007\u008f\u0002\u0002\u066e\u066f\u0007\u00d6\u0002",
    "\u0002\u066f\u0671\u0005\u00c4c\u0002\u0670\u0672\u0007\u00d6\u0002",
    "\u0002\u0671\u0670\u0003\u0002\u0002\u0002\u0671\u0672\u0003\u0002\u0002",
    "\u0002\u0672\u0673\u0003\u0002\u0002\u0002\u0673\u0675\u0007\u00b4\u0002",
    "\u0002\u0674\u0676\u0007\u00d6\u0002\u0002\u0675\u0674\u0003\u0002\u0002",
    "\u0002\u0675\u0676\u0003\u0002\u0002\u0002\u0676\u0677\u0003\u0002\u0002",
    "\u0002\u0677\u0678\u0005\u00c4c\u0002\u0678\u00a7\u0003\u0002\u0002",
    "\u0002\u0679\u067a\u0007\u0090\u0002\u0002\u067a\u067b\u0007\u00d6\u0002",
    "\u0002\u067b\u067c\u0007\u0013\u0002\u0002\u067c\u067d\u0007\u00d6\u0002",
    "\u0002\u067d\u067f\u0005\u00c4c\u0002\u067e\u0680\u0007\u00d4\u0002",
    "\u0002\u067f\u067e\u0003\u0002\u0002\u0002\u0680\u0681\u0003\u0002\u0002",
    "\u0002\u0681\u067f\u0003\u0002\u0002\u0002\u0681\u0682\u0003\u0002\u0002",
    "\u0002\u0682\u0686\u0003\u0002\u0002\u0002\u0683\u0685\u0005\u00aaV",
    "\u0002\u0684\u0683\u0003\u0002\u0002\u0002\u0685\u0688\u0003\u0002\u0002",
    "\u0002\u0686\u0684\u0003\u0002\u0002\u0002\u0686\u0687\u0003\u0002\u0002",
    "\u0002\u0687\u068a\u0003\u0002\u0002\u0002\u0688\u0686\u0003\u0002\u0002",
    "\u0002\u0689\u068b\u0007\u00d6\u0002\u0002\u068a\u0689\u0003\u0002\u0002",
    "\u0002\u068a\u068b\u0003\u0002\u0002\u0002\u068b\u068c\u0003\u0002\u0002",
    "\u0002\u068c\u068d\u00073\u0002\u0002\u068d\u00a9\u0003\u0002\u0002",
    "\u0002\u068e\u068f\u0007\u0013\u0002\u0002\u068f\u0690\u0007\u00d6\u0002",
    "\u0002\u0690\u0692\u0005\u00acW\u0002\u0691\u0693\u0007\u00d6\u0002",
    "\u0002\u0692\u0691\u0003\u0002\u0002\u0002\u0692\u0693\u0003\u0002\u0002",
    "\u0002\u0693\u06a2\u0003\u0002\u0002\u0002\u0694\u0696\u0007\u00b3\u0002",
    "\u0002\u0695\u0694\u0003\u0002\u0002\u0002\u0695\u0696\u0003\u0002\u0002",
    "\u0002\u0696\u069a\u0003\u0002\u0002\u0002\u0697\u0699\u0007\u00d4\u0002",
    "\u0002\u0698\u0697\u0003\u0002\u0002\u0002\u0699\u069c\u0003\u0002\u0002",
    "\u0002\u069a\u0698\u0003\u0002\u0002\u0002\u069a\u069b\u0003\u0002\u0002",
    "\u0002\u069b\u06a3\u0003\u0002\u0002\u0002\u069c\u069a\u0003\u0002\u0002",
    "\u0002\u069d\u069f\u0007\u00d4\u0002\u0002\u069e\u069d\u0003\u0002\u0002",
    "\u0002\u069f\u06a0\u0003\u0002\u0002\u0002\u06a0\u069e\u0003\u0002\u0002",
    "\u0002\u06a0\u06a1\u0003\u0002\u0002\u0002\u06a1\u06a3\u0003\u0002\u0002",
    "\u0002\u06a2\u0695\u0003\u0002\u0002\u0002\u06a2\u069e\u0003\u0002\u0002",
    "\u0002\u06a3\u06aa\u0003\u0002\u0002\u0002\u06a4\u06a6\u0005\u001a\u000e",
    "\u0002\u06a5\u06a7\u0007\u00d4\u0002\u0002\u06a6\u06a5\u0003\u0002\u0002",
    "\u0002\u06a7\u06a8\u0003\u0002\u0002\u0002\u06a8\u06a6\u0003\u0002\u0002",
    "\u0002\u06a8\u06a9\u0003\u0002\u0002\u0002\u06a9\u06ab\u0003\u0002\u0002",
    "\u0002\u06aa\u06a4\u0003\u0002\u0002\u0002\u06aa\u06ab\u0003\u0002\u0002",
    "\u0002\u06ab\u00ab\u0003\u0002\u0002\u0002\u06ac\u06d8\u0007-\u0002",
    "\u0002\u06ad\u06af\u0007P\u0002\u0002\u06ae\u06b0\u0007\u00d6\u0002",
    "\u0002\u06af\u06ae\u0003\u0002\u0002\u0002\u06af\u06b0\u0003\u0002\u0002",
    "\u0002\u06b0\u06b1\u0003\u0002\u0002\u0002\u06b1\u06b3\u0005\u0104\u0083",
    "\u0002\u06b2\u06b4\u0007\u00d6\u0002\u0002\u06b3\u06b2\u0003\u0002\u0002",
    "\u0002\u06b3\u06b4\u0003\u0002\u0002\u0002\u06b4\u06b5\u0003\u0002\u0002",
    "\u0002\u06b5\u06b6\u0005\u00c4c\u0002\u06b6\u06d8\u0003\u0002\u0002",
    "\u0002\u06b7\u06c2\u0005\u00c4c\u0002\u06b8\u06ba\u0007\u00d6\u0002",
    "\u0002\u06b9\u06b8\u0003\u0002\u0002\u0002\u06b9\u06ba\u0003\u0002\u0002",
    "\u0002\u06ba\u06bb\u0003\u0002\u0002\u0002\u06bb\u06bd\u0007\u00b4\u0002",
    "\u0002\u06bc\u06be\u0007\u00d6\u0002\u0002\u06bd\u06bc\u0003\u0002\u0002",
    "\u0002\u06bd\u06be\u0003\u0002\u0002\u0002\u06be\u06bf\u0003\u0002\u0002",
    "\u0002\u06bf\u06c1\u0005\u00c4c\u0002\u06c0\u06b9\u0003\u0002\u0002",
    "\u0002\u06c1\u06c4\u0003\u0002\u0002\u0002\u06c2\u06c0\u0003\u0002\u0002",
    "\u0002\u06c2\u06c3\u0003\u0002\u0002\u0002\u06c3\u06d8\u0003\u0002\u0002",
    "\u0002\u06c4\u06c2\u0003\u0002\u0002\u0002\u06c5\u06c6\u0007\u00cf\u0002",
    "\u0002\u06c6\u06c7\u0007\u00d6\u0002\u0002\u06c7\u06c8\u0007\u00a0\u0002",
    "\u0002\u06c8\u06c9\u0007\u00d6\u0002\u0002\u06c9\u06d4\u0005\u00c4c",
    "\u0002\u06ca\u06cc\u0007\u00d6\u0002\u0002\u06cb\u06ca\u0003\u0002\u0002",
    "\u0002\u06cb\u06cc\u0003\u0002\u0002\u0002\u06cc\u06cd\u0003\u0002\u0002",
    "\u0002\u06cd\u06cf\u0007\u00b4\u0002\u0002\u06ce\u06d0\u0007\u00d6\u0002",
    "\u0002\u06cf\u06ce\u0003\u0002\u0002\u0002\u06cf\u06d0\u0003\u0002\u0002",
    "\u0002\u06d0\u06d1\u0003\u0002\u0002\u0002\u06d1\u06d3\u0005\u00c4c",
    "\u0002\u06d2\u06cb\u0003\u0002\u0002\u0002\u06d3\u06d6\u0003\u0002\u0002",
    "\u0002\u06d4\u06d2\u0003\u0002\u0002\u0002\u06d4\u06d5\u0003\u0002\u0002",
    "\u0002\u06d5\u06d8\u0003\u0002\u0002\u0002\u06d6\u06d4\u0003\u0002\u0002",
    "\u0002\u06d7\u06ac\u0003\u0002\u0002\u0002\u06d7\u06ad\u0003\u0002\u0002",
    "\u0002\u06d7\u06b7\u0003\u0002\u0002\u0002\u06d7\u06c5\u0003\u0002\u0002",
    "\u0002\u06d8\u00ad\u0003\u0002\u0002\u0002\u06d9\u06da\u0007\u0091\u0002",
    "\u0002\u06da\u06db\u0007\u00d6\u0002\u0002\u06db\u06e4\u0005\u00c4c",
    "\u0002\u06dc\u06de\u0007\u00d6\u0002\u0002\u06dd\u06dc\u0003\u0002\u0002",
    "\u0002\u06dd\u06de\u0003\u0002\u0002\u0002\u06de\u06df\u0003\u0002\u0002",
    "\u0002\u06df\u06e1\u0007\u00b4\u0002\u0002\u06e0\u06e2\u0007\u00d6\u0002",
    "\u0002\u06e1\u06e0\u0003\u0002\u0002\u0002\u06e1\u06e2\u0003\u0002\u0002",
    "\u0002\u06e2\u06e3\u0003\u0002\u0002\u0002\u06e3\u06e5\u0005\u00c4c",
    "\u0002\u06e4\u06dd\u0003\u0002\u0002\u0002\u06e4\u06e5\u0003\u0002\u0002",
    "\u0002\u06e5\u00af\u0003\u0002\u0002\u0002\u06e6\u06e7\u0007\u0093\u0002",
    "\u0002\u06e7\u06e8\u0007\u00d6\u0002\u0002\u06e8\u06ea\u0005\u00c4c",
    "\u0002\u06e9\u06eb\u0007\u00d6\u0002\u0002\u06ea\u06e9\u0003\u0002\u0002",
    "\u0002\u06ea\u06eb\u0003\u0002\u0002\u0002\u06eb\u06ec\u0003\u0002\u0002",
    "\u0002\u06ec\u06ee\u0007\u00b4\u0002\u0002\u06ed\u06ef\u0007\u00d6\u0002",
    "\u0002\u06ee\u06ed\u0003\u0002\u0002\u0002\u06ee\u06ef\u0003\u0002\u0002",
    "\u0002\u06ef\u06f0\u0003\u0002\u0002\u0002\u06f0\u06f1\u0005\u00c4c",
    "\u0002\u06f1\u00b1\u0003\u0002\u0002\u0002\u06f2\u06f3\u0007\u0092\u0002",
    "\u0002\u06f3\u06f4\u0007\u00d6\u0002\u0002\u06f4\u06f6\u0005\u00e0q",
    "\u0002\u06f5\u06f7\u0007\u00d6\u0002\u0002\u06f6\u06f5\u0003\u0002\u0002",
    "\u0002\u06f6\u06f7\u0003\u0002\u0002\u0002\u06f7\u06f8\u0003\u0002\u0002",
    "\u0002\u06f8\u06fa\u0007\u00b8\u0002\u0002\u06f9\u06fb\u0007\u00d6\u0002",
    "\u0002\u06fa\u06f9\u0003\u0002\u0002\u0002\u06fa\u06fb\u0003\u0002\u0002",
    "\u0002\u06fb\u06fc\u0003\u0002\u0002\u0002\u06fc\u06fd\u0005\u00c4c",
    "\u0002\u06fd\u00b3\u0003\u0002\u0002\u0002\u06fe\u06ff\u0007\u0099\u0002",
    "\u0002\u06ff\u00b5\u0003\u0002\u0002\u0002\u0700\u0701\u0005\u0114\u008b",
    "\u0002\u0701\u0702\u0007\u00d6\u0002\u0002\u0702\u0704\u0003\u0002\u0002",
    "\u0002\u0703\u0700\u0003\u0002\u0002\u0002\u0703\u0704\u0003\u0002\u0002",
    "\u0002\u0704\u0707\u0003\u0002\u0002\u0002\u0705\u0706\u0007\u0097\u0002",
    "\u0002\u0706\u0708\u0007\u00d6\u0002\u0002\u0707\u0705\u0003\u0002\u0002",
    "\u0002\u0707\u0708\u0003\u0002\u0002\u0002\u0708\u0709\u0003\u0002\u0002",
    "\u0002\u0709\u070a\u0007\u009b\u0002\u0002\u070a\u070b\u0007\u00d6\u0002",
    "\u0002\u070b\u0710\u0005\u00fc\u007f\u0002\u070c\u070e\u0007\u00d6\u0002",
    "\u0002\u070d\u070c\u0003\u0002\u0002\u0002\u070d\u070e\u0003\u0002\u0002",
    "\u0002\u070e\u070f\u0003\u0002\u0002\u0002\u070f\u0711\u0005\u00f2z",
    "\u0002\u0710\u070d\u0003\u0002\u0002\u0002\u0710\u0711\u0003\u0002\u0002",
    "\u0002\u0711\u0713\u0003\u0002\u0002\u0002\u0712\u0714\u0007\u00d4\u0002",
    "\u0002\u0713\u0712\u0003\u0002\u0002\u0002\u0714\u0715\u0003\u0002\u0002",
    "\u0002\u0715\u0713\u0003\u0002\u0002\u0002\u0715\u0716\u0003\u0002\u0002",
    "\u0002\u0716\u071d\u0003\u0002\u0002\u0002\u0717\u0719\u0005\u001a\u000e",
    "\u0002\u0718\u071a\u0007\u00d4\u0002\u0002\u0719\u0718\u0003\u0002\u0002",
    "\u0002\u071a\u071b\u0003\u0002\u0002\u0002\u071b\u0719\u0003\u0002\u0002",
    "\u0002\u071b\u071c\u0003\u0002\u0002\u0002\u071c\u071e\u0003\u0002\u0002",
    "\u0002\u071d\u0717\u0003\u0002\u0002\u0002\u071d\u071e\u0003\u0002\u0002",
    "\u0002\u071e\u071f\u0003\u0002\u0002\u0002\u071f\u0720\u00074\u0002",
    "\u0002\u0720\u00b7\u0003\u0002\u0002\u0002\u0721\u0723\u0007\u009f\u0002",
    "\u0002\u0722\u0724\u0007\u00d6\u0002\u0002\u0723\u0722\u0003\u0002\u0002",
    "\u0002\u0723\u0724\u0003\u0002\u0002\u0002\u0724\u0725\u0003\u0002\u0002",
    "\u0002\u0725\u0727\u0007\u00b8\u0002\u0002\u0726\u0728\u0007\u00d6\u0002",
    "\u0002\u0727\u0726\u0003\u0002\u0002\u0002\u0727\u0728\u0003\u0002\u0002",
    "\u0002\u0728\u0729\u0003\u0002\u0002\u0002\u0729\u072a\u0005\u00c4c",
    "\u0002\u072a\u00b9\u0003\u0002\u0002\u0002\u072b\u072c\u0005\u0114\u008b",
    "\u0002\u072c\u072d\u0007\u00d6\u0002\u0002\u072d\u072f\u0003\u0002\u0002",
    "\u0002\u072e\u072b\u0003\u0002\u0002\u0002\u072e\u072f\u0003\u0002\u0002",
    "\u0002\u072f\u0730\u0003\u0002\u0002\u0002\u0730\u0731\u0007\u00a2\u0002",
    "\u0002\u0731\u0732\u0007\u00d6\u0002\u0002\u0732\u0734\u0005\u00fc\u007f",
    "\u0002\u0733\u0735\u0007\u00d4\u0002\u0002\u0734\u0733\u0003\u0002\u0002",
    "\u0002\u0735\u0736\u0003\u0002\u0002\u0002\u0736\u0734\u0003\u0002\u0002",
    "\u0002\u0736\u0737\u0003\u0002\u0002\u0002\u0737\u073b\u0003\u0002\u0002",
    "\u0002\u0738\u073a\u0005\u00bc_\u0002\u0739\u0738\u0003\u0002\u0002",
    "\u0002\u073a\u073d\u0003\u0002\u0002\u0002\u073b\u0739\u0003\u0002\u0002",
    "\u0002\u073b\u073c\u0003\u0002\u0002\u0002\u073c\u073e\u0003\u0002\u0002",
    "\u0002\u073d\u073b\u0003\u0002\u0002\u0002\u073e\u073f\u00075\u0002",
    "\u0002\u073f\u00bb\u0003\u0002\u0002\u0002\u0740\u074f\u0005\u00fc\u007f",
    "\u0002\u0741\u0743\u0007\u00d6\u0002\u0002\u0742\u0741\u0003\u0002\u0002",
    "\u0002\u0742\u0743\u0003\u0002\u0002\u0002\u0743\u0744\u0003\u0002\u0002",
    "\u0002\u0744\u0749\u0007\u00be\u0002\u0002\u0745\u0747\u0007\u00d6\u0002",
    "\u0002\u0746\u0745\u0003\u0002\u0002\u0002\u0746\u0747\u0003\u0002\u0002",
    "\u0002\u0747\u0748\u0003\u0002\u0002\u0002\u0748\u074a\u0005\u00f8}",
    "\u0002\u0749\u0746\u0003\u0002\u0002\u0002\u0749\u074a\u0003\u0002\u0002",
    "\u0002\u074a\u074c\u0003\u0002\u0002\u0002\u074b\u074d\u0007\u00d6\u0002",
    "\u0002\u074c\u074b\u0003\u0002\u0002\u0002\u074c\u074d\u0003\u0002\u0002",
    "\u0002\u074d\u074e\u0003\u0002\u0002\u0002\u074e\u0750\u0007\u00c8\u0002",
    "\u0002\u074f\u0742\u0003\u0002\u0002\u0002\u074f\u0750\u0003\u0002\u0002",
    "\u0002\u0750\u0753\u0003\u0002\u0002\u0002\u0751\u0752\u0007\u00d6\u0002",
    "\u0002\u0752\u0754\u0005\u00fe\u0080\u0002\u0753\u0751\u0003\u0002\u0002",
    "\u0002\u0753\u0754\u0003\u0002\u0002\u0002\u0754\u0756\u0003\u0002\u0002",
    "\u0002\u0755\u0757\u0007\u00d4\u0002\u0002\u0756\u0755\u0003\u0002\u0002",
    "\u0002\u0757\u0758\u0003\u0002\u0002\u0002\u0758\u0756\u0003\u0002\u0002",
    "\u0002\u0758\u0759\u0003\u0002\u0002\u0002\u0759\u00bd\u0003\u0002\u0002",
    "\u0002\u075a\u075b\u0007\u00a3\u0002\u0002\u075b\u075c\u0007\u00d6\u0002",
    "\u0002\u075c\u0761\u0005\u00c4c\u0002\u075d\u075e\u0007\u00d6\u0002",
    "\u0002\u075e\u075f\u0007P\u0002\u0002\u075f\u0760\u0007\u00d6\u0002",
    "\u0002\u0760\u0762\u0005\u0110\u0089\u0002\u0761\u075d\u0003\u0002\u0002",
    "\u0002\u0761\u0762\u0003\u0002\u0002\u0002\u0762\u00bf\u0003\u0002\u0002",
    "\u0002\u0763\u0764\u0007\u00a4\u0002\u0002\u0764\u0765\u0007\u00d6\u0002",
    "\u0002\u0765\u0766\u0005\u00c4c\u0002\u0766\u00c1\u0003\u0002\u0002",
    "\u0002\u0767\u0768\u0007\u00a5\u0002\u0002\u0768\u0769\u0007\u00d6\u0002",
    "\u0002\u0769\u0778\u0005\u00c4c\u0002\u076a\u076c\u0007\u00d6\u0002",
    "\u0002\u076b\u076a\u0003\u0002\u0002\u0002\u076b\u076c\u0003\u0002\u0002",
    "\u0002\u076c\u076d\u0003\u0002\u0002\u0002\u076d\u076f\u0007\u00b4\u0002",
    "\u0002\u076e\u0770\u0007\u00d6\u0002\u0002\u076f\u076e\u0003\u0002\u0002",
    "\u0002\u076f\u0770\u0003\u0002\u0002\u0002\u0770\u0771\u0003\u0002\u0002",
    "\u0002\u0771\u0776\u0005\u00c4c\u0002\u0772\u0773\u0007\u00d6\u0002",
    "\u0002\u0773\u0774\u0007\u00a0\u0002\u0002\u0774\u0775\u0007\u00d6\u0002",
    "\u0002\u0775\u0777\u0005\u00c4c\u0002\u0776\u0772\u0003\u0002\u0002",
    "\u0002\u0776\u0777\u0003\u0002\u0002\u0002\u0777\u0779\u0003\u0002\u0002",
    "\u0002\u0778\u076b\u0003\u0002\u0002\u0002\u0778\u0779\u0003\u0002\u0002",
    "\u0002\u0779\u00c3\u0003\u0002\u0002\u0002\u077a\u077b\bc\u0001\u0002",
    "\u077b\u07b1\u0005\u010e\u0088\u0002\u077c\u07b1\u0005\u00e0q\u0002",
    "\u077d\u077f\u0007\u00be\u0002\u0002\u077e\u0780\u0007\u00d6\u0002\u0002",
    "\u077f\u077e\u0003\u0002\u0002\u0002\u077f\u0780\u0003\u0002\u0002\u0002",
    "\u0780\u0781\u0003\u0002\u0002\u0002\u0781\u078c\u0005\u00c4c\u0002",
    "\u0782\u0784\u0007\u00d6\u0002\u0002\u0783\u0782\u0003\u0002\u0002\u0002",
    "\u0783\u0784\u0003\u0002\u0002\u0002\u0784\u0785\u0003\u0002\u0002\u0002",
    "\u0785\u0787\u0007\u00b4\u0002\u0002\u0786\u0788\u0007\u00d6\u0002\u0002",
    "\u0787\u0786\u0003\u0002\u0002\u0002\u0787\u0788\u0003\u0002\u0002\u0002",
    "\u0788\u0789\u0003\u0002\u0002\u0002\u0789\u078b\u0005\u00c4c\u0002",
    "\u078a\u0783\u0003\u0002\u0002\u0002\u078b\u078e\u0003\u0002\u0002\u0002",
    "\u078c\u078a\u0003\u0002\u0002\u0002\u078c\u078d\u0003\u0002\u0002\u0002",
    "\u078d\u078f\u0003\u0002\u0002\u0002\u078e\u078c\u0003\u0002\u0002\u0002",
    "\u078f\u0790\u0007\u00c8\u0002\u0002\u0790\u07b1\u0003\u0002\u0002\u0002",
    "\u0791\u0792\u0007j\u0002\u0002\u0792\u0793\u0007\u00d6\u0002\u0002",
    "\u0793\u07b1\u0005\u00c4c\u001e\u0794\u07b1\u0005\u00be`\u0002\u0795",
    "\u07b1\u0005t;\u0002\u0796\u0797\u0007\u0004\u0002\u0002\u0797\u0798",
    "\u0007\u00d6\u0002\u0002\u0798\u07b1\u0005\u00c4c\u001b\u0799\u079b",
    "\u0005\u00e0q\u0002\u079a\u079c\u0007\u00d6\u0002\u0002\u079b\u079a",
    "\u0003\u0002\u0002\u0002\u079b\u079c\u0003\u0002\u0002\u0002\u079c\u079d",
    "\u0003\u0002\u0002\u0002\u079d\u079f\u0007\u00b1\u0002\u0002\u079e\u07a0",
    "\u0007\u00d6\u0002\u0002\u079f\u079e\u0003\u0002\u0002\u0002\u079f\u07a0",
    "\u0003\u0002\u0002\u0002\u07a0\u07a1\u0003\u0002\u0002\u0002\u07a1\u07a2",
    "\u0005\u00c4c\u001a\u07a2\u07b1\u0003\u0002\u0002\u0002\u07a3\u07a5",
    "\u0007\u00c0\u0002\u0002\u07a4\u07a6\u0007\u00d6\u0002\u0002\u07a5\u07a4",
    "\u0003\u0002\u0002\u0002\u07a5\u07a6\u0003\u0002\u0002\u0002\u07a6\u07a7",
    "\u0003\u0002\u0002\u0002\u07a7\u07b1\u0005\u00c4c\u0010\u07a8\u07aa",
    "\u0007\u00c5\u0002\u0002\u07a9\u07ab\u0007\u00d6\u0002\u0002\u07aa\u07a9",
    "\u0003\u0002\u0002\u0002\u07aa\u07ab\u0003\u0002\u0002\u0002\u07ab\u07ac",
    "\u0003\u0002\u0002\u0002\u07ac\u07b1\u0005\u00c4c\u000f\u07ad\u07ae",
    "\u0007k\u0002\u0002\u07ae\u07af\u0007\u00d6\u0002\u0002\u07af\u07b1",
    "\u0005\u00c4c\u0003\u07b0\u077a\u0003\u0002\u0002\u0002\u07b0\u077c",
    "\u0003\u0002\u0002\u0002\u07b0\u077d\u0003\u0002\u0002\u0002\u07b0\u0791",
    "\u0003\u0002\u0002\u0002\u07b0\u0794\u0003\u0002\u0002\u0002\u07b0\u0795",
    "\u0003\u0002\u0002\u0002\u07b0\u0796\u0003\u0002\u0002\u0002\u07b0\u0799",
    "\u0003\u0002\u0002\u0002\u07b0\u07a3\u0003\u0002\u0002\u0002\u07b0\u07a8",
    "\u0003\u0002\u0002\u0002\u07b0\u07ad\u0003\u0002\u0002\u0002\u07b1\u0850",
    "\u0003\u0002\u0002\u0002\u07b2\u07b3\f\u0019\u0002\u0002\u07b3\u07b4",
    "\u0007\u00d6\u0002\u0002\u07b4\u07b5\u0007P\u0002\u0002\u07b5\u07b6",
    "\u0007\u00d6\u0002\u0002\u07b6\u084f\u0005\u00c4c\u001a\u07b7\u07b8",
    "\f\u0018\u0002\u0002\u07b8\u07b9\u0007\u00d6\u0002\u0002\u07b9\u07ba",
    "\u0007Z\u0002\u0002\u07ba\u07bb\u0007\u00d6\u0002\u0002\u07bb\u084f",
    "\u0005\u00c4c\u0019\u07bc\u07be\f\u0017\u0002\u0002\u07bd\u07bf\u0007",
    "\u00d6\u0002\u0002\u07be\u07bd\u0003\u0002\u0002\u0002\u07be\u07bf\u0003",
    "\u0002\u0002\u0002\u07bf\u07c0\u0003\u0002\u0002\u0002\u07c0\u07c2\u0007",
    "\u00ba\u0002\u0002\u07c1\u07c3\u0007\u00d6\u0002\u0002\u07c2\u07c1\u0003",
    "\u0002\u0002\u0002\u07c2\u07c3\u0003\u0002\u0002\u0002\u07c3\u07c4\u0003",
    "\u0002\u0002\u0002\u07c4\u084f\u0005\u00c4c\u0018\u07c5\u07c7\f\u0016",
    "\u0002\u0002\u07c6\u07c8\u0007\u00d6\u0002\u0002\u07c7\u07c6\u0003\u0002",
    "\u0002\u0002\u07c7\u07c8\u0003\u0002\u0002\u0002\u07c8\u07c9\u0003\u0002",
    "\u0002\u0002\u07c9\u07cb\u0007\u00bd\u0002\u0002\u07ca\u07cc\u0007\u00d6",
    "\u0002\u0002\u07cb\u07ca\u0003\u0002\u0002\u0002\u07cb\u07cc\u0003\u0002",
    "\u0002\u0002\u07cc\u07cd\u0003\u0002\u0002\u0002\u07cd\u084f\u0005\u00c4",
    "c\u0017\u07ce\u07d0\f\u0015\u0002\u0002\u07cf\u07d1\u0007\u00d6\u0002",
    "\u0002\u07d0\u07cf\u0003\u0002\u0002\u0002\u07d0\u07d1\u0003\u0002\u0002",
    "\u0002\u07d1\u07d2\u0003\u0002\u0002\u0002\u07d2\u07d4\u0007\u00bb\u0002",
    "\u0002\u07d3\u07d5\u0007\u00d6\u0002\u0002\u07d4\u07d3\u0003\u0002\u0002",
    "\u0002\u07d4\u07d5\u0003\u0002\u0002\u0002\u07d5\u07d6\u0003\u0002\u0002",
    "\u0002\u07d6\u084f\u0005\u00c4c\u0016\u07d7\u07d9\f\u0014\u0002\u0002",
    "\u07d8\u07da\u0007\u00d6\u0002\u0002\u07d9\u07d8\u0003\u0002\u0002\u0002",
    "\u07d9\u07da\u0003\u0002\u0002\u0002\u07da\u07db\u0003\u0002\u0002\u0002",
    "\u07db\u07dd\u0007\u00bf\u0002\u0002\u07dc\u07de\u0007\u00d6\u0002\u0002",
    "\u07dd\u07dc\u0003\u0002\u0002\u0002\u07dd\u07de\u0003\u0002\u0002\u0002",
    "\u07de\u07df\u0003\u0002\u0002\u0002\u07df\u084f\u0005\u00c4c\u0015",
    "\u07e0\u07e2\f\u0013\u0002\u0002\u07e1\u07e3\u0007\u00d6\u0002\u0002",
    "\u07e2\u07e1\u0003\u0002\u0002\u0002\u07e2\u07e3\u0003\u0002\u0002\u0002",
    "\u07e3\u07e4\u0003\u0002\u0002\u0002\u07e4\u07e6\u0007\u00c3\u0002\u0002",
    "\u07e5\u07e7\u0007\u00d6\u0002\u0002\u07e6\u07e5\u0003\u0002\u0002\u0002",
    "\u07e6\u07e7\u0003\u0002\u0002\u0002\u07e7\u07e8\u0003\u0002\u0002\u0002",
    "\u07e8\u084f\u0005\u00c4c\u0014\u07e9\u07eb\f\u0012\u0002\u0002\u07ea",
    "\u07ec\u0007\u00d6\u0002\u0002\u07eb\u07ea\u0003\u0002\u0002\u0002\u07eb",
    "\u07ec\u0003\u0002\u0002\u0002\u07ec\u07ed\u0003\u0002\u0002\u0002\u07ed",
    "\u07ef\u0007\u00b8\u0002\u0002\u07ee\u07f0\u0007\u00d6\u0002\u0002\u07ef",
    "\u07ee\u0003\u0002\u0002\u0002\u07ef\u07f0\u0003\u0002\u0002\u0002\u07f0",
    "\u07f1\u0003\u0002\u0002\u0002\u07f1\u084f\u0005\u00c4c\u0013\u07f2",
    "\u07f3\f\u0011\u0002\u0002\u07f3\u07f4\u0007\u00d6\u0002\u0002\u07f4",
    "\u07f5\u0007\u00b0\u0002\u0002\u07f5\u07f6\u0007\u00d6\u0002\u0002\u07f6",
    "\u084f\u0005\u00c4c\u0012\u07f7\u07f9\f\u000e\u0002\u0002\u07f8\u07fa",
    "\u0007\u00d6\u0002\u0002\u07f9\u07f8\u0003\u0002\u0002\u0002\u07f9\u07fa",
    "\u0003\u0002\u0002\u0002\u07fa\u07fb\u0003\u0002\u0002\u0002\u07fb\u07fd",
    "\u0007\u00c5\u0002\u0002\u07fc\u07fe\u0007\u00d6\u0002\u0002\u07fd\u07fc",
    "\u0003\u0002\u0002\u0002\u07fd\u07fe\u0003\u0002\u0002\u0002\u07fe\u07ff",
    "\u0003\u0002\u0002\u0002\u07ff\u084f\u0005\u00c4c\u000f\u0800\u0802",
    "\f\r\u0002\u0002\u0801\u0803\u0007\u00d6\u0002\u0002\u0802\u0801\u0003",
    "\u0002\u0002\u0002\u0802\u0803\u0003\u0002\u0002\u0002\u0803\u0804\u0003",
    "\u0002\u0002\u0002\u0804\u0806\u0007g\u0002\u0002\u0805\u0807\u0007",
    "\u00d6\u0002\u0002\u0806\u0805\u0003\u0002\u0002\u0002\u0806\u0807\u0003",
    "\u0002\u0002\u0002\u0807\u0808\u0003\u0002\u0002\u0002\u0808\u084f\u0005",
    "\u00c4c\u000e\u0809\u080b\f\f\u0002\u0002\u080a\u080c\u0007\u00d6\u0002",
    "\u0002\u080b\u080a\u0003\u0002\u0002\u0002\u080b\u080c\u0003\u0002\u0002",
    "\u0002\u080c\u080d\u0003\u0002\u0002\u0002\u080d\u080f\u0007\u00b5\u0002",
    "\u0002\u080e\u0810\u0007\u00d6\u0002\u0002\u080f\u080e\u0003\u0002\u0002",
    "\u0002\u080f\u0810\u0003\u0002\u0002\u0002\u0810\u0811\u0003\u0002\u0002",
    "\u0002\u0811\u084f\u0005\u00c4c\r\u0812\u0814\f\u000b\u0002\u0002\u0813",
    "\u0815\u0007\u00d6\u0002\u0002\u0814\u0813\u0003\u0002\u0002\u0002\u0814",
    "\u0815\u0003\u0002\u0002\u0002\u0815\u0816\u0003\u0002\u0002\u0002\u0816",
    "\u0818\u0007\u00c2\u0002\u0002\u0817\u0819\u0007\u00d6\u0002\u0002\u0818",
    "\u0817\u0003\u0002\u0002\u0002\u0818\u0819\u0003\u0002\u0002\u0002\u0819",
    "\u081a\u0003\u0002\u0002\u0002\u081a\u084f\u0005\u00c4c\f\u081b\u081d",
    "\f\n\u0002\u0002\u081c\u081e\u0007\u00d6\u0002\u0002\u081d\u081c\u0003",
    "\u0002\u0002\u0002\u081d\u081e\u0003\u0002\u0002\u0002\u081e\u081f\u0003",
    "\u0002\u0002\u0002\u081f\u0821\u0007\u00c0\u0002\u0002\u0820\u0822\u0007",
    "\u00d6\u0002\u0002\u0821\u0820\u0003\u0002\u0002\u0002\u0821\u0822\u0003",
    "\u0002\u0002\u0002\u0822\u0823\u0003\u0002\u0002\u0002\u0823\u084f\u0005",
    "\u00c4c\u000b\u0824\u0826\f\t\u0002\u0002\u0825\u0827\u0007\u00d6\u0002",
    "\u0002\u0826\u0825\u0003\u0002\u0002\u0002\u0826\u0827\u0003\u0002\u0002",
    "\u0002\u0827\u0828\u0003\u0002\u0002\u0002\u0828\u082a\u0007\u00c7\u0002",
    "\u0002\u0829\u082b\u0007\u00d6\u0002\u0002\u082a\u0829\u0003\u0002\u0002",
    "\u0002\u082a\u082b\u0003\u0002\u0002\u0002\u082b\u082c\u0003\u0002\u0002",
    "\u0002\u082c\u084f\u0005\u00c4c\n\u082d\u082e\f\b\u0002\u0002\u082e",
    "\u082f\u0007\u00d6\u0002\u0002\u082f\u0830\u0007L\u0002\u0002\u0830",
    "\u0831\u0007\u00d6\u0002\u0002\u0831\u084f\u0005\u00c4c\t\u0832\u0833",
    "\f\u0007\u0002\u0002\u0833\u0834\u0007\u00d6\u0002\u0002\u0834\u0835",
    "\u00079\u0002\u0002\u0835\u0836\u0007\u00d6\u0002\u0002\u0836\u084f",
    "\u0005\u00c4c\b\u0837\u0839\f\u0006\u0002\u0002\u0838\u083a\u0007\u00d6",
    "\u0002\u0002\u0839\u0838\u0003\u0002\u0002\u0002\u0839\u083a\u0003\u0002",
    "\u0002\u0002\u083a\u083b\u0003\u0002\u0002\u0002\u083b\u083d\u0007\u00af",
    "\u0002\u0002\u083c\u083e\u0007\u00d6\u0002\u0002\u083d\u083c\u0003\u0002",
    "\u0002\u0002\u083d\u083e\u0003\u0002\u0002\u0002\u083e\u083f\u0003\u0002",
    "\u0002\u0002\u083f\u084f\u0005\u00c4c\u0007\u0840\u0842\f\u0005\u0002",
    "\u0002\u0841\u0843\u0007\u00d6\u0002\u0002\u0842\u0841\u0003\u0002\u0002",
    "\u0002\u0842\u0843\u0003\u0002\u0002\u0002\u0843\u0844\u0003\u0002\u0002",
    "\u0002\u0844\u0846\u0007v\u0002\u0002\u0845\u0847\u0007\u00d6\u0002",
    "\u0002\u0846\u0845\u0003\u0002\u0002\u0002\u0846\u0847\u0003\u0002\u0002",
    "\u0002\u0847\u0848\u0003\u0002\u0002\u0002\u0848\u084f\u0005\u00c4c",
    "\u0006\u0849\u084a\f\u0004\u0002\u0002\u084a\u084b\u0007\u00d6\u0002",
    "\u0002\u084b\u084c\u0007\u0006\u0002\u0002\u084c\u084d\u0007\u00d6\u0002",
    "\u0002\u084d\u084f\u0005\u00c4c\u0005\u084e\u07b2\u0003\u0002\u0002",
    "\u0002\u084e\u07b7\u0003\u0002\u0002\u0002\u084e\u07bc\u0003\u0002\u0002",
    "\u0002\u084e\u07c5\u0003\u0002\u0002\u0002\u084e\u07ce\u0003\u0002\u0002",
    "\u0002\u084e\u07d7\u0003\u0002\u0002\u0002\u084e\u07e0\u0003\u0002\u0002",
    "\u0002\u084e\u07e9\u0003\u0002\u0002\u0002\u084e\u07f2\u0003\u0002\u0002",
    "\u0002\u084e\u07f7\u0003\u0002\u0002\u0002\u084e\u0800\u0003\u0002\u0002",
    "\u0002\u084e\u0809\u0003\u0002\u0002\u0002\u084e\u0812\u0003\u0002\u0002",
    "\u0002\u084e\u081b\u0003\u0002\u0002\u0002\u084e\u0824\u0003\u0002\u0002",
    "\u0002\u084e\u082d\u0003\u0002\u0002\u0002\u084e\u0832\u0003\u0002\u0002",
    "\u0002\u084e\u0837\u0003\u0002\u0002\u0002\u084e\u0840\u0003\u0002\u0002",
    "\u0002\u084e\u0849\u0003\u0002\u0002\u0002\u084f\u0852\u0003\u0002\u0002",
    "\u0002\u0850\u084e\u0003\u0002\u0002\u0002\u0850\u0851\u0003\u0002\u0002",
    "\u0002\u0851\u00c5\u0003\u0002\u0002\u0002\u0852\u0850\u0003\u0002\u0002",
    "\u0002\u0853\u0857\u0007)\u0002\u0002\u0854\u0857\u0007\u0097\u0002",
    "\u0002\u0855\u0857\u0005\u0114\u008b\u0002\u0856\u0853\u0003\u0002\u0002",
    "\u0002\u0856\u0854\u0003\u0002\u0002\u0002\u0856\u0855\u0003\u0002\u0002",
    "\u0002\u0857\u0858\u0003\u0002\u0002\u0002\u0858\u085b\u0007\u00d6\u0002",
    "\u0002\u0859\u085a\u0007\u00ad\u0002\u0002\u085a\u085c\u0007\u00d6\u0002",
    "\u0002\u085b\u0859\u0003\u0002\u0002\u0002\u085b\u085c\u0003\u0002\u0002",
    "\u0002\u085c\u085d\u0003\u0002\u0002\u0002\u085d\u085e\u0005\u00c8e",
    "\u0002\u085e\u00c7\u0003\u0002\u0002\u0002\u085f\u086a\u0005\u00caf",
    "\u0002\u0860\u0862\u0007\u00d6\u0002\u0002\u0861\u0860\u0003\u0002\u0002",
    "\u0002\u0861\u0862\u0003\u0002\u0002\u0002\u0862\u0863\u0003\u0002\u0002",
    "\u0002\u0863\u0865\u0007\u00b4\u0002\u0002\u0864\u0866\u0007\u00d6\u0002",
    "\u0002\u0865\u0864\u0003\u0002\u0002\u0002\u0865\u0866\u0003\u0002\u0002",
    "\u0002\u0866\u0867\u0003\u0002\u0002\u0002\u0867\u0869\u0005\u00caf",
    "\u0002\u0868\u0861\u0003\u0002\u0002\u0002\u0869\u086c\u0003\u0002\u0002",
    "\u0002\u086a\u0868\u0003\u0002\u0002\u0002\u086a\u086b\u0003\u0002\u0002",
    "\u0002\u086b\u00c9\u0003\u0002\u0002\u0002\u086c\u086a\u0003\u0002\u0002",
    "\u0002\u086d\u087f\u0005\u00fc\u007f\u0002\u086e\u0870\u0007\u00d6\u0002",
    "\u0002\u086f\u086e\u0003\u0002\u0002\u0002\u086f\u0870\u0003\u0002\u0002",
    "\u0002\u0870\u0871\u0003\u0002\u0002\u0002\u0871\u0873\u0007\u00be\u0002",
    "\u0002\u0872\u0874\u0007\u00d6\u0002\u0002\u0873\u0872\u0003\u0002\u0002",
    "\u0002\u0873\u0874\u0003\u0002\u0002\u0002\u0874\u0879\u0003\u0002\u0002",
    "\u0002\u0875\u0877\u0005\u00f8}\u0002\u0876\u0878\u0007\u00d6\u0002",
    "\u0002\u0877\u0876\u0003\u0002\u0002\u0002\u0877\u0878\u0003\u0002\u0002",
    "\u0002\u0878\u087a\u0003\u0002\u0002\u0002\u0879\u0875\u0003\u0002\u0002",
    "\u0002\u0879\u087a\u0003\u0002\u0002\u0002\u087a\u087b\u0003\u0002\u0002",
    "\u0002\u087b\u087d\u0007\u00c8\u0002\u0002\u087c\u087e\u0007\u00d6\u0002",
    "\u0002\u087d\u087c\u0003\u0002\u0002\u0002\u087d\u087e\u0003\u0002\u0002",
    "\u0002\u087e\u0880\u0003\u0002\u0002\u0002\u087f\u086f\u0003\u0002\u0002",
    "\u0002\u087f\u0880\u0003\u0002\u0002\u0002\u0880\u0882\u0003\u0002\u0002",
    "\u0002\u0881\u0883\u0005\u0112\u008a\u0002\u0882\u0881\u0003\u0002\u0002",
    "\u0002\u0882\u0883\u0003\u0002\u0002\u0002\u0883\u0886\u0003\u0002\u0002",
    "\u0002\u0884\u0885\u0007\u00d6\u0002\u0002\u0885\u0887\u0005\u00fe\u0080",
    "\u0002\u0886\u0884\u0003\u0002\u0002\u0002\u0886\u0887\u0003\u0002\u0002",
    "\u0002\u0887\u00cb\u0003\u0002\u0002\u0002\u0888\u0889\u0007\u00aa\u0002",
    "\u0002\u0889\u088a\u0007\u00d6\u0002\u0002\u088a\u088c\u0005\u00c4c",
    "\u0002\u088b\u088d\u0007\u00d4\u0002\u0002\u088c\u088b\u0003\u0002\u0002",
    "\u0002\u088d\u088e\u0003\u0002\u0002\u0002\u088e\u088c\u0003\u0002\u0002",
    "\u0002\u088e\u088f\u0003\u0002\u0002\u0002\u088f\u0895\u0003\u0002\u0002",
    "\u0002\u0890\u0891\u0005\u001a\u000e\u0002\u0891\u0892\u0007\u00d4\u0002",
    "\u0002\u0892\u0894\u0003\u0002\u0002\u0002\u0893\u0890\u0003\u0002\u0002",
    "\u0002\u0894\u0897\u0003\u0002\u0002\u0002\u0895\u0893\u0003\u0002\u0002",
    "\u0002\u0895\u0896\u0003\u0002\u0002\u0002\u0896\u0898\u0003\u0002\u0002",
    "\u0002\u0897\u0895\u0003\u0002\u0002\u0002\u0898\u0899\u0007\u00a9\u0002",
    "\u0002\u0899\u00cd\u0003\u0002\u0002\u0002\u089a\u089b\u0007\u00ab\u0002",
    "\u0002\u089b\u089c\u0007\u00d6\u0002\u0002\u089c\u089e\u0005\u00c4c",
    "\u0002\u089d\u089f\u0007\u00d6\u0002\u0002\u089e\u089d\u0003\u0002\u0002",
    "\u0002\u089e\u089f\u0003\u0002\u0002\u0002\u089f\u08a0\u0003\u0002\u0002",
    "\u0002\u08a0\u08a2\u0007\u00b4\u0002\u0002\u08a1\u08a3\u0007\u00d6\u0002",
    "\u0002\u08a2\u08a1\u0003\u0002\u0002\u0002\u08a2\u08a3\u0003\u0002\u0002",
    "\u0002\u08a3\u08a4\u0003\u0002\u0002\u0002\u08a4\u08a5\u0005\u00c4c",
    "\u0002\u08a5\u00cf\u0003\u0002\u0002\u0002\u08a6\u08a7\u0007\u00ac\u0002",
    "\u0002\u08a7\u08a8\u0007\u00d6\u0002\u0002\u08a8\u08aa\u0005\u00e0q",
    "\u0002\u08a9\u08ab\u0007\u00d4\u0002\u0002\u08aa\u08a9\u0003\u0002\u0002",
    "\u0002\u08ab\u08ac\u0003\u0002\u0002\u0002\u08ac\u08aa\u0003\u0002\u0002",
    "\u0002\u08ac\u08ad\u0003\u0002\u0002\u0002\u08ad\u08b4\u0003\u0002\u0002",
    "\u0002\u08ae\u08b0\u0005\u001a\u000e\u0002\u08af\u08b1\u0007\u00d4\u0002",
    "\u0002\u08b0\u08af\u0003\u0002\u0002\u0002\u08b1\u08b2\u0003\u0002\u0002",
    "\u0002\u08b2\u08b0\u0003\u0002\u0002\u0002\u08b2\u08b3\u0003\u0002\u0002",
    "\u0002\u08b3\u08b5\u0003\u0002\u0002\u0002\u08b4\u08ae\u0003\u0002\u0002",
    "\u0002\u08b4\u08b5\u0003\u0002\u0002\u0002\u08b5\u08b6\u0003\u0002\u0002",
    "\u0002\u08b6\u08b7\u00076\u0002\u0002\u08b7\u00d1\u0003\u0002\u0002",
    "\u0002\u08b8\u08b9\u0007\u00ae\u0002\u0002\u08b9\u08ba\u0007\u00d6\u0002",
    "\u0002\u08ba\u08bc\u0005\u00c4c\u0002\u08bb\u08bd\u0007\u00d6\u0002",
    "\u0002\u08bc\u08bb\u0003\u0002\u0002\u0002\u08bc\u08bd\u0003\u0002\u0002",
    "\u0002\u08bd\u08be\u0003\u0002\u0002\u0002\u08be\u08c3\u0007\u00b4\u0002",
    "\u0002\u08bf\u08c1\u0007\u00d6\u0002\u0002\u08c0\u08bf\u0003\u0002\u0002",
    "\u0002\u08c0\u08c1\u0003\u0002\u0002\u0002\u08c1\u08c2\u0003\u0002\u0002",
    "\u0002\u08c2\u08c4\u0005\u0082B\u0002\u08c3\u08c0\u0003\u0002\u0002",
    "\u0002\u08c3\u08c4\u0003\u0002\u0002\u0002\u08c4\u00d3\u0003\u0002\u0002",
    "\u0002\u08c5\u08c8\u0005\u00d6l\u0002\u08c6\u08c8\u0005\u00d8m\u0002",
    "\u08c7\u08c5\u0003\u0002\u0002\u0002\u08c7\u08c6\u0003\u0002\u0002\u0002",
    "\u08c8\u00d5\u0003\u0002\u0002\u0002\u08c9\u08ca\u0007\u0012\u0002\u0002",
    "\u08ca\u08cb\u0007\u00d6\u0002\u0002\u08cb\u08cd\u0005\u00fc\u007f\u0002",
    "\u08cc\u08ce\u0005\u0112\u008a\u0002\u08cd\u08cc\u0003\u0002\u0002\u0002",
    "\u08cd\u08ce\u0003\u0002\u0002\u0002\u08ce\u08dc\u0003\u0002\u0002\u0002",
    "\u08cf\u08d1\u0007\u00d6\u0002\u0002\u08d0\u08cf\u0003\u0002\u0002\u0002",
    "\u08d0\u08d1\u0003\u0002\u0002\u0002\u08d1\u08d2\u0003\u0002\u0002\u0002",
    "\u08d2\u08d4\u0007\u00be\u0002\u0002\u08d3\u08d5\u0007\u00d6\u0002\u0002",
    "\u08d4\u08d3\u0003\u0002\u0002\u0002\u08d4\u08d5\u0003\u0002\u0002\u0002",
    "\u08d5\u08d6\u0003\u0002\u0002\u0002\u08d6\u08d8\u0005\u00ecw\u0002",
    "\u08d7\u08d9\u0007\u00d6\u0002\u0002\u08d8\u08d7\u0003\u0002\u0002\u0002",
    "\u08d8\u08d9\u0003\u0002\u0002\u0002\u08d9\u08da\u0003\u0002\u0002\u0002",
    "\u08da\u08db\u0007\u00c8\u0002\u0002\u08db\u08dd\u0003\u0002\u0002\u0002",
    "\u08dc\u08d0\u0003\u0002\u0002\u0002\u08dc\u08dd\u0003\u0002\u0002\u0002",
    "\u08dd\u00d7\u0003\u0002\u0002\u0002\u08de\u08df\u0007\u0012\u0002\u0002",
    "\u08df\u08e1\u0007\u00d6\u0002\u0002\u08e0\u08e2\u0005\u00e0q\u0002",
    "\u08e1\u08e0\u0003\u0002\u0002\u0002\u08e1\u08e2\u0003\u0002\u0002\u0002",
    "\u08e2\u08e3\u0003\u0002\u0002\u0002\u08e3\u08e4\u0007\u00b7\u0002\u0002",
    "\u08e4\u08e6\u0005\u00fc\u007f\u0002\u08e5\u08e7\u0005\u0112\u008a\u0002",
    "\u08e6\u08e5\u0003\u0002\u0002\u0002\u08e6\u08e7\u0003\u0002\u0002\u0002",
    "\u08e7\u08f5\u0003\u0002\u0002\u0002\u08e8\u08ea\u0007\u00d6\u0002\u0002",
    "\u08e9\u08e8\u0003\u0002\u0002\u0002\u08e9\u08ea\u0003\u0002\u0002\u0002",
    "\u08ea\u08eb\u0003\u0002\u0002\u0002\u08eb\u08ed\u0007\u00be\u0002\u0002",
    "\u08ec\u08ee\u0007\u00d6\u0002\u0002\u08ed\u08ec\u0003\u0002\u0002\u0002",
    "\u08ed\u08ee\u0003\u0002\u0002\u0002\u08ee\u08ef\u0003\u0002\u0002\u0002",
    "\u08ef\u08f1\u0005\u00ecw\u0002\u08f0\u08f2\u0007\u00d6\u0002\u0002",
    "\u08f1\u08f0\u0003\u0002\u0002\u0002\u08f1\u08f2\u0003\u0002\u0002\u0002",
    "\u08f2\u08f3\u0003\u0002\u0002\u0002\u08f3\u08f4\u0007\u00c8\u0002\u0002",
    "\u08f4\u08f6\u0003\u0002\u0002\u0002\u08f5\u08e9\u0003\u0002\u0002\u0002",
    "\u08f5\u08f6\u0003\u0002\u0002\u0002\u08f6\u00d9\u0003\u0002\u0002\u0002",
    "\u08f7\u08fa\u0005\u00dco\u0002\u08f8\u08fa\u0005\u00dep\u0002\u08f9",
    "\u08f7\u0003\u0002\u0002\u0002\u08f9\u08f8\u0003\u0002\u0002\u0002\u08fa",
    "\u00db\u0003\u0002\u0002\u0002\u08fb\u08fe\u0005\u0102\u0082\u0002\u08fc",
    "\u08fd\u0007\u00d6\u0002\u0002\u08fd\u08ff\u0005\u00ecw\u0002\u08fe",
    "\u08fc\u0003\u0002\u0002\u0002\u08fe\u08ff\u0003\u0002\u0002\u0002\u08ff",
    "\u00dd\u0003\u0002\u0002\u0002\u0900\u0902\u0005\u00e0q\u0002\u0901",
    "\u0900\u0003\u0002\u0002\u0002\u0901\u0902\u0003\u0002\u0002\u0002\u0902",
    "\u0903\u0003\u0002\u0002\u0002\u0903\u0904\u0007\u00b7\u0002\u0002\u0904",
    "\u0906\u0005\u00fc\u007f\u0002\u0905\u0907\u0005\u0112\u008a\u0002\u0906",
    "\u0905\u0003\u0002\u0002\u0002\u0906\u0907\u0003\u0002\u0002\u0002\u0907",
    "\u090a\u0003\u0002\u0002\u0002\u0908\u0909\u0007\u00d6\u0002\u0002\u0909",
    "\u090b\u0005\u00ecw\u0002\u090a\u0908\u0003\u0002\u0002\u0002\u090a",
    "\u090b\u0003\u0002\u0002\u0002\u090b\u090d\u0003\u0002\u0002\u0002\u090c",
    "\u090e\u0005\u00f0y\u0002\u090d\u090c\u0003\u0002\u0002\u0002\u090d",
    "\u090e\u0003\u0002\u0002\u0002\u090e\u00df\u0003\u0002\u0002\u0002\u090f",
    "\u0914\u0005\u00e6t\u0002\u0910\u0914\u0005\u00e2r\u0002\u0911\u0914",
    "\u0005\u00e4s\u0002\u0912\u0914\u0005\u00eav\u0002\u0913\u090f\u0003",
    "\u0002\u0002\u0002\u0913\u0910\u0003\u0002\u0002\u0002\u0913\u0911\u0003",
    "\u0002\u0002\u0002\u0913\u0912\u0003\u0002\u0002\u0002\u0914\u00e1\u0003",
    "\u0002\u0002\u0002\u0915\u0917\u0005\u00fc\u007f\u0002\u0916\u0918\u0005",
    "\u0112\u008a\u0002\u0917\u0916\u0003\u0002\u0002\u0002\u0917\u0918\u0003",
    "\u0002\u0002\u0002\u0918\u091a\u0003\u0002\u0002\u0002\u0919\u091b\u0005",
    "\u00f0y\u0002\u091a\u0919\u0003\u0002\u0002\u0002\u091a\u091b\u0003",
    "\u0002\u0002\u0002\u091b\u00e3\u0003\u0002\u0002\u0002\u091c\u091f\u0005",
    "\u00fc\u007f\u0002\u091d\u091f\u0005\u0100\u0081\u0002\u091e\u091c\u0003",
    "\u0002\u0002\u0002\u091e\u091d\u0003\u0002\u0002\u0002\u091f\u0921\u0003",
    "\u0002\u0002\u0002\u0920\u0922\u0005\u0112\u008a\u0002\u0921\u0920\u0003",
    "\u0002\u0002\u0002\u0921\u0922\u0003\u0002\u0002\u0002\u0922\u0924\u0003",
    "\u0002\u0002\u0002\u0923\u0925\u0007\u00d6\u0002\u0002\u0924\u0923\u0003",
    "\u0002\u0002\u0002\u0924\u0925\u0003\u0002\u0002\u0002\u0925\u0926\u0003",
    "\u0002\u0002\u0002\u0926\u0928\u0007\u00be\u0002\u0002\u0927\u0929\u0007",
    "\u00d6\u0002\u0002\u0928\u0927\u0003\u0002\u0002\u0002\u0928\u0929\u0003",
    "\u0002\u0002\u0002\u0929\u092e\u0003\u0002\u0002\u0002\u092a\u092c\u0005",
    "\u00ecw\u0002\u092b\u092d\u0007\u00d6\u0002\u0002\u092c\u092b\u0003",
    "\u0002\u0002\u0002\u092c\u092d\u0003\u0002\u0002\u0002\u092d\u092f\u0003",
    "\u0002\u0002\u0002\u092e\u092a\u0003\u0002\u0002\u0002\u092e\u092f\u0003",
    "\u0002\u0002\u0002\u092f\u0930\u0003\u0002\u0002\u0002\u0930\u0932\u0007",
    "\u00c8\u0002\u0002\u0931\u0933\u0005\u00f0y\u0002\u0932\u0931\u0003",
    "\u0002\u0002\u0002\u0932\u0933\u0003\u0002\u0002\u0002\u0933\u00e5\u0003",
    "\u0002\u0002\u0002\u0934\u0937\u0005\u00e2r\u0002\u0935\u0937\u0005",
    "\u00e4s\u0002\u0936\u0934\u0003\u0002\u0002\u0002\u0936\u0935\u0003",
    "\u0002\u0002\u0002\u0936\u0937\u0003\u0002\u0002\u0002\u0937\u0939\u0003",
    "\u0002\u0002\u0002\u0938\u093a\u0005\u00e8u\u0002\u0939\u0938\u0003",
    "\u0002\u0002\u0002\u093a\u093b\u0003\u0002\u0002\u0002\u093b\u0939\u0003",
    "\u0002\u0002\u0002\u093b\u093c\u0003\u0002\u0002\u0002\u093c\u093e\u0003",
    "\u0002\u0002\u0002\u093d\u093f\u0005\u00f0y\u0002\u093e\u093d\u0003",
    "\u0002\u0002\u0002\u093e\u093f\u0003\u0002\u0002\u0002\u093f\u00e7\u0003",
    "\u0002\u0002\u0002\u0940\u0943\u0007\u00b7\u0002\u0002\u0941\u0944\u0005",
    "\u00e2r\u0002\u0942\u0944\u0005\u00e4s\u0002\u0943\u0941\u0003\u0002",
    "\u0002\u0002\u0943\u0942\u0003\u0002\u0002\u0002\u0944\u00e9\u0003\u0002",
    "\u0002\u0002\u0945\u0946\u0005\u00f0y\u0002\u0946\u00eb\u0003\u0002",
    "\u0002\u0002\u0947\u0949\u0005\u00eex\u0002\u0948\u0947\u0003\u0002",
    "\u0002\u0002\u0948\u0949\u0003\u0002\u0002\u0002\u0949\u094b\u0003\u0002",
    "\u0002\u0002\u094a\u094c\u0007\u00d6\u0002\u0002\u094b\u094a\u0003\u0002",
    "\u0002\u0002\u094b\u094c\u0003\u0002\u0002\u0002\u094c\u094d\u0003\u0002",
    "\u0002\u0002\u094d\u094f\t\n\u0002\u0002\u094e\u0950\u0007\u00d6\u0002",
    "\u0002\u094f\u094e\u0003\u0002\u0002\u0002\u094f\u0950\u0003\u0002\u0002",
    "\u0002\u0950\u0952\u0003\u0002\u0002\u0002\u0951\u0948\u0003\u0002\u0002",
    "\u0002\u0952\u0955\u0003\u0002\u0002\u0002\u0953\u0951\u0003\u0002\u0002",
    "\u0002\u0953\u0954\u0003\u0002\u0002\u0002\u0954\u0956\u0003\u0002\u0002",
    "\u0002\u0955\u0953\u0003\u0002\u0002\u0002\u0956\u0963\u0005\u00eex",
    "\u0002\u0957\u0959\u0007\u00d6\u0002\u0002\u0958\u0957\u0003\u0002\u0002",
    "\u0002\u0958\u0959\u0003\u0002\u0002\u0002\u0959\u095a\u0003\u0002\u0002",
    "\u0002\u095a\u095c\t\n\u0002\u0002\u095b\u095d\u0007\u00d6\u0002\u0002",
    "\u095c\u095b\u0003\u0002\u0002\u0002\u095c\u095d\u0003\u0002\u0002\u0002",
    "\u095d\u095f\u0003\u0002\u0002\u0002\u095e\u0960\u0005\u00eex\u0002",
    "\u095f\u095e\u0003\u0002\u0002\u0002\u095f\u0960\u0003\u0002\u0002\u0002",
    "\u0960\u0962\u0003\u0002\u0002\u0002\u0961\u0958\u0003\u0002\u0002\u0002",
    "\u0962\u0965\u0003\u0002\u0002\u0002\u0963\u0961\u0003\u0002\u0002\u0002",
    "\u0963\u0964\u0003\u0002\u0002\u0002\u0964\u00ed\u0003\u0002\u0002\u0002",
    "\u0965\u0963\u0003\u0002\u0002\u0002\u0966\u0967\t\f\u0002\u0002\u0967",
    "\u0969\u0007\u00d6\u0002\u0002\u0968\u0966\u0003\u0002\u0002\u0002\u0968",
    "\u0969\u0003\u0002\u0002\u0002\u0969\u096a\u0003\u0002\u0002\u0002\u096a",
    "\u096b\u0005\u00c4c\u0002\u096b\u00ef\u0003\u0002\u0002\u0002\u096c",
    "\u096d\u0007\u00b9\u0002\u0002\u096d\u096f\u0005\u00fc\u007f\u0002\u096e",
    "\u0970\u0005\u0112\u008a\u0002\u096f\u096e\u0003\u0002\u0002\u0002\u096f",
    "\u0970\u0003\u0002\u0002\u0002\u0970\u00f1\u0003\u0002\u0002\u0002\u0971",
    "\u0983\u0007\u00be\u0002\u0002\u0972\u0974\u0007\u00d6\u0002\u0002\u0973",
    "\u0972\u0003\u0002\u0002\u0002\u0973\u0974\u0003\u0002\u0002\u0002\u0974",
    "\u0975\u0003\u0002\u0002\u0002\u0975\u0980\u0005\u00f4{\u0002\u0976",
    "\u0978\u0007\u00d6\u0002\u0002\u0977\u0976\u0003\u0002\u0002\u0002\u0977",
    "\u0978\u0003\u0002\u0002\u0002\u0978\u0979\u0003\u0002\u0002\u0002\u0979",
    "\u097b\u0007\u00b4\u0002\u0002\u097a\u097c\u0007\u00d6\u0002\u0002\u097b",
    "\u097a\u0003\u0002\u0002\u0002\u097b\u097c\u0003\u0002\u0002\u0002\u097c",
    "\u097d\u0003\u0002\u0002\u0002\u097d\u097f\u0005\u00f4{\u0002\u097e",
    "\u0977\u0003\u0002\u0002\u0002\u097f\u0982\u0003\u0002\u0002\u0002\u0980",
    "\u097e\u0003\u0002\u0002\u0002\u0980\u0981\u0003\u0002\u0002\u0002\u0981",
    "\u0984\u0003\u0002\u0002\u0002\u0982\u0980\u0003\u0002\u0002\u0002\u0983",
    "\u0973\u0003\u0002\u0002\u0002\u0983\u0984\u0003\u0002\u0002\u0002\u0984",
    "\u0986\u0003\u0002\u0002\u0002\u0985\u0987\u0007\u00d6\u0002\u0002\u0986",
    "\u0985\u0003\u0002\u0002\u0002\u0986\u0987\u0003\u0002\u0002\u0002\u0987",
    "\u0988\u0003\u0002\u0002\u0002\u0988\u0989\u0007\u00c8\u0002\u0002\u0989",
    "\u00f3\u0003\u0002\u0002\u0002\u098a\u098b\u0007q\u0002\u0002\u098b",
    "\u098d\u0007\u00d6\u0002\u0002\u098c\u098a\u0003\u0002\u0002\u0002\u098c",
    "\u098d\u0003\u0002\u0002\u0002\u098d\u0990\u0003\u0002\u0002\u0002\u098e",
    "\u098f\t\r\u0002\u0002\u098f\u0991\u0007\u00d6\u0002\u0002\u0990\u098e",
    "\u0003\u0002\u0002\u0002\u0990\u0991\u0003\u0002\u0002\u0002\u0991\u0994",
    "\u0003\u0002\u0002\u0002\u0992\u0993\u0007x\u0002\u0002\u0993\u0995",
    "\u0007\u00d6\u0002\u0002\u0994\u0992\u0003\u0002\u0002\u0002\u0994\u0995",
    "\u0003\u0002\u0002\u0002\u0995\u0996\u0003\u0002\u0002\u0002\u0996\u099f",
    "\u0005\u00fc\u007f\u0002\u0997\u0999\u0007\u00d6\u0002\u0002\u0998\u0997",
    "\u0003\u0002\u0002\u0002\u0998\u0999\u0003\u0002\u0002\u0002\u0999\u099a",
    "\u0003\u0002\u0002\u0002\u099a\u099c\u0007\u00be\u0002\u0002\u099b\u099d",
    "\u0007\u00d6\u0002\u0002\u099c\u099b\u0003\u0002\u0002\u0002\u099c\u099d",
    "\u0003\u0002\u0002\u0002\u099d\u099e\u0003\u0002\u0002\u0002\u099e\u09a0",
    "\u0007\u00c8\u0002\u0002\u099f\u0998\u0003\u0002\u0002\u0002\u099f\u09a0",
    "\u0003\u0002\u0002\u0002\u09a0\u09a3\u0003\u0002\u0002\u0002\u09a1\u09a2",
    "\u0007\u00d6\u0002\u0002\u09a2\u09a4\u0005\u00fe\u0080\u0002\u09a3\u09a1",
    "\u0003\u0002\u0002\u0002\u09a3\u09a4\u0003\u0002\u0002\u0002\u09a4\u09a9",
    "\u0003\u0002\u0002\u0002\u09a5\u09a7\u0007\u00d6\u0002\u0002\u09a6\u09a5",
    "\u0003\u0002\u0002\u0002\u09a6\u09a7\u0003\u0002\u0002\u0002\u09a7\u09a8",
    "\u0003\u0002\u0002\u0002\u09a8\u09aa\u0005\u00f6|\u0002\u09a9\u09a6",
    "\u0003\u0002\u0002\u0002\u09a9\u09aa\u0003\u0002\u0002\u0002\u09aa\u00f5",
    "\u0003\u0002\u0002\u0002\u09ab\u09ad\u0007\u00b8\u0002\u0002\u09ac\u09ae",
    "\u0007\u00d6\u0002\u0002\u09ad\u09ac\u0003\u0002\u0002\u0002\u09ad\u09ae",
    "\u0003\u0002\u0002\u0002\u09ae\u09b1\u0003\u0002\u0002\u0002\u09af\u09b2",
    "\u0005\u010e\u0088\u0002\u09b0\u09b2\u0005\u00fc\u007f\u0002\u09b1\u09af",
    "\u0003\u0002\u0002\u0002\u09b1\u09b0\u0003\u0002\u0002\u0002\u09b2\u00f7",
    "\u0003\u0002\u0002\u0002\u09b3\u09be\u0005\u00fa~\u0002\u09b4\u09b6",
    "\u0007\u00d6\u0002\u0002\u09b5\u09b4\u0003\u0002\u0002\u0002\u09b5\u09b6",
    "\u0003\u0002\u0002\u0002\u09b6\u09b7\u0003\u0002\u0002\u0002\u09b7\u09b9",
    "\u0007\u00b4\u0002\u0002\u09b8\u09ba\u0007\u00d6\u0002\u0002\u09b9\u09b8",
    "\u0003\u0002\u0002\u0002\u09b9\u09ba\u0003\u0002\u0002\u0002\u09ba\u09bb",
    "\u0003\u0002\u0002\u0002\u09bb\u09bd\u0005\u00fa~\u0002\u09bc\u09b5",
    "\u0003\u0002\u0002\u0002\u09bd\u09c0\u0003\u0002\u0002\u0002\u09be\u09bc",
    "\u0003\u0002\u0002\u0002\u09be\u09bf\u0003\u0002\u0002\u0002\u09bf\u00f9",
    "\u0003\u0002\u0002\u0002\u09c0\u09be\u0003\u0002\u0002\u0002\u09c1\u09c2",
    "\u0005\u00c4c\u0002\u09c2\u09c3\u0007\u00d6\u0002\u0002\u09c3\u09c4",
    "\u0007\u00a0\u0002\u0002\u09c4\u09c5\u0007\u00d6\u0002\u0002\u09c5\u09c7",
    "\u0003\u0002\u0002\u0002\u09c6\u09c1\u0003\u0002\u0002\u0002\u09c6\u09c7",
    "\u0003\u0002\u0002\u0002\u09c7\u09c8\u0003\u0002\u0002\u0002\u09c8\u09c9",
    "\u0005\u00c4c\u0002\u09c9\u00fb\u0003\u0002\u0002\u0002\u09ca\u09cd",
    "\u0007\u00d2\u0002\u0002\u09cb\u09cd\u0005\u0116\u008c\u0002\u09cc\u09ca",
    "\u0003\u0002\u0002\u0002\u09cc\u09cb\u0003\u0002\u0002\u0002\u09cd\u09ce",
    "\u0003\u0002\u0002\u0002\u09ce\u09cc\u0003\u0002\u0002\u0002\u09ce\u09cf",
    "\u0003\u0002\u0002\u0002\u09cf\u09d9\u0003\u0002\u0002\u0002\u09d0\u09d3",
    "\u0007\u00ca\u0002\u0002\u09d1\u09d4\u0007\u00d2\u0002\u0002\u09d2\u09d4",
    "\u0005\u0116\u008c\u0002\u09d3\u09d1\u0003\u0002\u0002\u0002\u09d3\u09d2",
    "\u0003\u0002\u0002\u0002\u09d4\u09d5\u0003\u0002\u0002\u0002\u09d5\u09d3",
    "\u0003\u0002\u0002\u0002\u09d5\u09d6\u0003\u0002\u0002\u0002\u09d6\u09d7",
    "\u0003\u0002\u0002\u0002\u09d7\u09d9\u0007\u00cb\u0002\u0002\u09d8\u09cc",
    "\u0003\u0002\u0002\u0002\u09d8\u09d0\u0003\u0002\u0002\u0002\u09d9\u00fd",
    "\u0003\u0002\u0002\u0002\u09da\u09db\u0007\n\u0002\u0002\u09db\u09de",
    "\u0007\u00d6\u0002\u0002\u09dc\u09dd\u0007j\u0002\u0002\u09dd\u09df",
    "\u0007\u00d6\u0002\u0002\u09de\u09dc\u0003\u0002\u0002\u0002\u09de\u09df",
    "\u0003\u0002\u0002\u0002\u09df\u09e0\u0003\u0002\u0002\u0002\u09e0\u09e3",
    "\u0005\u0110\u0089\u0002\u09e1\u09e2\u0007\u00d6\u0002\u0002\u09e2\u09e4",
    "\u0005\u0108\u0085\u0002\u09e3\u09e1\u0003\u0002\u0002\u0002\u09e3\u09e4",
    "\u0003\u0002\u0002\u0002\u09e4\u00ff\u0003\u0002\u0002\u0002\u09e5\u09e6",
    "\t\u000e\u0002\u0002\u09e6\u0101\u0003\u0002\u0002\u0002\u09e7\u09ec",
    "\u0007\u00d2\u0002\u0002\u09e8\u09eb\u0005\u0116\u008c\u0002\u09e9\u09eb",
    "\u0007\u00d2\u0002\u0002\u09ea\u09e8\u0003\u0002\u0002\u0002\u09ea\u09e9",
    "\u0003\u0002\u0002\u0002\u09eb\u09ee\u0003\u0002\u0002\u0002\u09ec\u09ea",
    "\u0003\u0002\u0002\u0002\u09ec\u09ed\u0003\u0002\u0002\u0002\u09ed\u09f7",
    "\u0003\u0002\u0002\u0002\u09ee\u09ec\u0003\u0002\u0002\u0002\u09ef\u09f2",
    "\u0005\u0116\u008c\u0002\u09f0\u09f3\u0005\u0116\u008c\u0002\u09f1\u09f3",
    "\u0007\u00d2\u0002\u0002\u09f2\u09f0\u0003\u0002\u0002\u0002\u09f2\u09f1",
    "\u0003\u0002\u0002\u0002\u09f3\u09f4\u0003\u0002\u0002\u0002\u09f4\u09f2",
    "\u0003\u0002\u0002\u0002\u09f4\u09f5\u0003\u0002\u0002\u0002\u09f5\u09f7",
    "\u0003\u0002\u0002\u0002\u09f6\u09e7\u0003\u0002\u0002\u0002\u09f6\u09ef",
    "\u0003\u0002\u0002\u0002\u09f7\u0103\u0003\u0002\u0002\u0002\u09f8\u09f9",
    "\t\u000f\u0002\u0002\u09f9\u0105\u0003\u0002\u0002\u0002\u09fa\u09ff",
    "\u0005\u00fc\u007f\u0002\u09fb\u09fc\u0007\u00b7\u0002\u0002\u09fc\u09fe",
    "\u0005\u00fc\u007f\u0002\u09fd\u09fb\u0003\u0002\u0002\u0002\u09fe\u0a01",
    "\u0003\u0002\u0002\u0002\u09ff\u09fd\u0003\u0002\u0002\u0002\u09ff\u0a00",
    "\u0003\u0002\u0002\u0002\u0a00\u0107\u0003\u0002\u0002\u0002\u0a01\u09ff",
    "\u0003\u0002\u0002\u0002\u0a02\u0a04\u0007\u00c2\u0002\u0002\u0a03\u0a05",
    "\u0007\u00d6\u0002\u0002\u0a04\u0a03\u0003\u0002\u0002\u0002\u0a04\u0a05",
    "\u0003\u0002\u0002\u0002\u0a05\u0a08\u0003\u0002\u0002\u0002\u0a06\u0a09",
    "\u0007\u00cf\u0002\u0002\u0a07\u0a09\u0005\u00fc\u007f\u0002\u0a08\u0a06",
    "\u0003\u0002\u0002\u0002\u0a08\u0a07\u0003\u0002\u0002\u0002\u0a09\u0109",
    "\u0003\u0002\u0002\u0002\u0a0a\u0a13\u0005\u0102\u0082\u0002\u0a0b\u0a0d",
    "\u0007\u00d6\u0002\u0002\u0a0c\u0a0b\u0003\u0002\u0002\u0002\u0a0c\u0a0d",
    "\u0003\u0002\u0002\u0002\u0a0d\u0a0e\u0003\u0002\u0002\u0002\u0a0e\u0a10",
    "\u0007\u00c0\u0002\u0002\u0a0f\u0a11\u0007\u00d6\u0002\u0002\u0a10\u0a0f",
    "\u0003\u0002\u0002\u0002\u0a10\u0a11\u0003\u0002\u0002\u0002\u0a11\u0a12",
    "\u0003\u0002\u0002\u0002\u0a12\u0a14\u0005\u0102\u0082\u0002\u0a13\u0a0c",
    "\u0003\u0002\u0002\u0002\u0a13\u0a14\u0003\u0002\u0002\u0002\u0a14\u010b",
    "\u0003\u0002\u0002\u0002\u0a15\u0a16\u0005\u00fc\u007f\u0002\u0a16\u0a17",
    "\u0007\u00b3\u0002\u0002\u0a17\u010d\u0003\u0002\u0002\u0002\u0a18\u0a19",
    "\t\u0010\u0002\u0002\u0a19\u010f\u0003\u0002\u0002\u0002\u0a1a\u0a1d",
    "\u0005\u0100\u0081\u0002\u0a1b\u0a1d\u0005\u0106\u0084\u0002\u0a1c\u0a1a",
    "\u0003\u0002\u0002\u0002\u0a1c\u0a1b\u0003\u0002\u0002\u0002\u0a1d\u0a26",
    "\u0003\u0002\u0002\u0002\u0a1e\u0a20\u0007\u00d6\u0002\u0002\u0a1f\u0a1e",
    "\u0003\u0002\u0002\u0002\u0a1f\u0a20\u0003\u0002\u0002\u0002\u0a20\u0a21",
    "\u0003\u0002\u0002\u0002\u0a21\u0a23\u0007\u00be\u0002\u0002\u0a22\u0a24",
    "\u0007\u00d6\u0002\u0002\u0a23\u0a22\u0003\u0002\u0002\u0002\u0a23\u0a24",
    "\u0003\u0002\u0002\u0002\u0a24\u0a25\u0003\u0002\u0002\u0002\u0a25\u0a27",
    "\u0007\u00c8\u0002\u0002\u0a26\u0a1f\u0003\u0002\u0002\u0002\u0a26\u0a27",
    "\u0003\u0002\u0002\u0002\u0a27\u0111\u0003\u0002\u0002\u0002\u0a28\u0a29",
    "\t\u0011\u0002\u0002\u0a29\u0113\u0003\u0002\u0002\u0002\u0a2a\u0a2b",
    "\t\u0012\u0002\u0002\u0a2b\u0115\u0003\u0002\u0002\u0002\u0a2c\u0a2d",
    "\t\u0013\u0002\u0002\u0a2d\u0117\u0003\u0002\u0002\u0002\u01bc\u011c",
    "\u0121\u0128\u012a\u012d\u0132\u0136\u013b\u013f\u0144\u0148\u014d\u0151",
    "\u015d\u0162\u0168\u016c\u0170\u0179\u017d\u0183\u0187\u0191\u0197\u019c",
    "\u01aa\u01b2\u01b6\u01ba\u01be\u01c3\u01ca\u01cd\u01d2\u0218\u021e\u0222",
    "\u0225\u0235\u0239\u023e\u0241\u0246\u024c\u0250\u0255\u025a\u025e\u0261",
    "\u0265\u026b\u026f\u0276\u027c\u027f\u0284\u028e\u0291\u0294\u0298\u029e",
    "\u02a2\u02a7\u02ae\u02b2\u02b6\u02ba\u02bd\u02c3\u02c9\u02cb\u02d6\u02dc",
    "\u02de\u02e6\u02ec\u02f4\u02fb\u0303\u0308\u030f\u0313\u0316\u031b\u0321",
    "\u0325\u032a\u0334\u033a\u0344\u0348\u0352\u035b\u0361\u0363\u0368\u036e",
    "\u0372\u0375\u0379\u0384\u0389\u038f\u0391\u0396\u039b\u039f\u03a5\u03a8",
    "\u03ac\u03b1\u03b7\u03b9\u03c1\u03c5\u03c8\u03cb\u03cf\u03e6\u03ec\u03f0",
    "\u03f4\u03fe\u0404\u0406\u0412\u0418\u041a\u0420\u0426\u0428\u0432\u0436",
    "\u043b\u0443\u0447\u044b\u0453\u0457\u0463\u0467\u046e\u0470\u0476\u047a",
    "\u0482\u0486\u0492\u0498\u049a\u04a4\u04aa\u04ac\u04b2\u04b8\u04ba\u04be",
    "\u04c2\u04c6\u04de\u04e8\u04ec\u04f1\u04fc\u0500\u0505\u0513\u0517\u0520",
    "\u0524\u0527\u052b\u052f\u0532\u0536\u053a\u053d\u0541\u0544\u0548\u054a",
    "\u054f\u0553\u0557\u055b\u055d\u0563\u0567\u056a\u056f\u0573\u0579\u057c",
    "\u057f\u0583\u0588\u058e\u0590\u0597\u059b\u05a1\u05a4\u05a9\u05af\u05b1",
    "\u05b8\u05bc\u05c2\u05c5\u05ca\u05d0\u05d2\u05da\u05de\u05e1\u05e4\u05e8",
    "\u05f0\u05f4\u05f8\u05fa\u05fd\u0602\u0608\u060c\u0610\u0615\u061a\u061e",
    "\u0622\u0627\u062f\u0631\u063d\u0641\u0649\u064d\u0655\u0659\u065d\u0661",
    "\u0665\u0669\u0671\u0675\u0681\u0686\u068a\u0692\u0695\u069a\u06a0\u06a2",
    "\u06a8\u06aa\u06af\u06b3\u06b9\u06bd\u06c2\u06cb\u06cf\u06d4\u06d7\u06dd",
    "\u06e1\u06e4\u06ea\u06ee\u06f6\u06fa\u0703\u0707\u070d\u0710\u0715\u071b",
    "\u071d\u0723\u0727\u072e\u0736\u073b\u0742\u0746\u0749\u074c\u074f\u0753",
    "\u0758\u0761\u076b\u076f\u0776\u0778\u077f\u0783\u0787\u078c\u079b\u079f",
    "\u07a5\u07aa\u07b0\u07be\u07c2\u07c7\u07cb\u07d0\u07d4\u07d9\u07dd\u07e2",
    "\u07e6\u07eb\u07ef\u07f9\u07fd\u0802\u0806\u080b\u080f\u0814\u0818\u081d",
    "\u0821\u0826\u082a\u0839\u083d\u0842\u0846\u084e\u0850\u0856\u085b\u0861",
    "\u0865\u086a\u086f\u0873\u0877\u0879\u087d\u087f\u0882\u0886\u088e\u0895",
    "\u089e\u08a2\u08ac\u08b2\u08b4\u08bc\u08c0\u08c3\u08c7\u08cd\u08d0\u08d4",
    "\u08d8\u08dc\u08e1\u08e6\u08e9\u08ed\u08f1\u08f5\u08f9\u08fe\u0901\u0906",
    "\u090a\u090d\u0913\u0917\u091a\u091e\u0921\u0924\u0928\u092c\u092e\u0932",
    "\u0936\u093b\u093e\u0943\u0948\u094b\u094f\u0953\u0958\u095c\u095f\u0963",
    "\u0968\u096f\u0973\u0977\u097b\u0980\u0983\u0986\u098c\u0990\u0994\u0998",
    "\u099c\u099f\u09a3\u09a6\u09a9\u09ad\u09b1\u09b5\u09b9\u09be\u09c6\u09cc",
    "\u09ce\u09d3\u09d5\u09d8\u09de\u09e3\u09ea\u09ec\u09f2\u09f4\u09f6\u09ff",
    "\u0a04\u0a08\u0a0c\u0a10\u0a13\u0a1c\u0a1f\u0a23\u0a26"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, null, null, null, null, null, null, 
                     null, null, null, "'&'", "':='", "'@'", "':'", "','", 
                     null, "'$'", "'.'", "'='", "'!'", "'>='", "'>'", "'#'", 
                     "'<='", "'('", "'<'", "'-'", "'-='", "'*'", "'<>'", 
                     "'%'", "'+'", "'+='", "'^'", "')'", "';'", "'['", "']'" ];

var symbolicNames = [ null, "ACCESS", "ADDRESSOF", "ALIAS", "AND", "ATTRIBUTE", 
                      "APPACTIVATE", "APPEND", "AS", "BEGIN", "BEEP", "BINARY", 
                      "BOOLEAN", "BYVAL", "BYREF", "BYTE", "CALL", "CASE", 
                      "CHDIR", "CHDRIVE", "CLASS", "CLOSE", "COLLECTION", 
                      "CONST", "DATE", "DECLARE", "DEFBOOL", "DEFBYTE", 
                      "DEFDATE", "DEFDBL", "DEFDEC", "DEFCUR", "DEFINT", 
                      "DEFLNG", "DEFOBJ", "DEFSNG", "DEFSTR", "DEFVAR", 
                      "DELETESETTING", "DIM", "DO", "DOUBLE", "EACH", "ELSE", 
                      "ELSEIF", "END_ENUM", "END_FUNCTION", "END_IF", "END_PROPERTY", 
                      "END_SELECT", "END_SUB", "END_TYPE", "END_WITH", "END", 
                      "ENUM", "EQV", "ERASE", "ERROR", "EVENT", "EXIT_DO", 
                      "EXIT_FOR", "EXIT_FUNCTION", "EXIT_PROPERTY", "EXIT_SUB", 
                      "FALSE", "FILECOPY", "FRIEND", "FOR", "FUNCTION", 
                      "GET", "GLOBAL", "GOSUB", "GOTO", "IF", "IMP", "IMPLEMENTS", 
                      "IN", "INPUT", "IS", "INTEGER", "KILL", "LOAD", "LOCK", 
                      "LONG", "LOOP", "LEN", "LET", "LIB", "LIKE", "LINE_INPUT", 
                      "LOCK_READ", "LOCK_WRITE", "LOCK_READ_WRITE", "LSET", 
                      "MACRO_IF", "MACRO_ELSEIF", "MACRO_ELSE", "MACRO_END_IF", 
                      "ME", "MID", "MKDIR", "MOD", "NAME", "NEXT", "NEW", 
                      "NOT", "NOTHING", "NULL", "ON", "ON_ERROR", "OPEN", 
                      "OPTIONAL", "OPTION_BASE", "OPTION_EXPLICIT", "OPTION_COMPARE", 
                      "OPTION_PRIVATE_MODULE", "OR", "OUTPUT", "PARAMARRAY", 
                      "PRESERVE", "PRINT", "PRIVATE", "PROPERTY_GET", "PROPERTY_LET", 
                      "PROPERTY_SET", "PUBLIC", "PUT", "RANDOM", "RANDOMIZE", 
                      "RAISEEVENT", "READ", "READ_WRITE", "REDIM", "REM", 
                      "RESET", "RESUME", "RETURN", "RMDIR", "RSET", "SAVEPICTURE", 
                      "SAVESETTING", "SEEK", "SELECT", "SENDKEYS", "SET", 
                      "SETATTR", "SHARED", "SINGLE", "SPC", "STATIC", "STEP", 
                      "STOP", "STRING", "SUB", "TAB", "TEXT", "THEN", "TIME", 
                      "TO", "TRUE", "TYPE", "TYPEOF", "UNLOAD", "UNLOCK", 
                      "UNTIL", "VARIANT", "VERSION", "WEND", "WHILE", "WIDTH", 
                      "WITH", "WITHEVENTS", "WRITE", "XOR", "AMPERSAND", 
                      "ASSIGN", "AT", "COLON", "COMMA", "DIV", "DOLLAR", 
                      "DOT", "EQ", "EXCLAMATIONMARK", "GEQ", "GT", "HASH", 
                      "LEQ", "LPAREN", "LT", "MINUS", "MINUS_EQ", "MULT", 
                      "NEQ", "PERCENT", "PLUS", "PLUS_EQ", "POW", "RPAREN", 
                      "SEMICOLON", "L_SQUARE_BRACKET", "R_SQUARE_BRACKET", 
                      "STRINGLITERAL", "DATELITERAL", "COLORLITERAL", "INTEGERLITERAL", 
                      "DOUBLELITERAL", "FILENUMBER", "IDENTIFIER", "LINE_CONTINUATION", 
                      "NEWLINE", "COMMENT", "WS" ];

var ruleNames =  [ "startRule", "module", "moduleHeader", "moduleConfig", 
                   "moduleConfigElement", "moduleAttributes", "moduleOptions", 
                   "moduleOption", "moduleBody", "moduleBodyElement", "moduleBlock", 
                   "attributeStmt", "block", "blockStmt", "appactivateStmt", 
                   "beepStmt", "chdirStmt", "chdriveStmt", "closeStmt", 
                   "constStmt", "constSubStmt", "dateStmt", "declareStmt", 
                   "deftypeStmt", "deleteSettingStmt", "doLoopStmt", "endStmt", 
                   "enumerationStmt", "enumerationStmt_Constant", "eraseStmt", 
                   "errorStmt", "eventStmt", "exitStmt", "filecopyStmt", 
                   "forEachStmt", "forNextStmt", "functionStmt", "getStmt", 
                   "goSubStmt", "goToStmt", "ifThenElseStmt", "ifBlockStmt", 
                   "ifConditionStmt", "ifElseIfBlockStmt", "ifElseBlockStmt", 
                   "implementsStmt", "inputStmt", "killStmt", "letStmt", 
                   "lineInputStmt", "loadStmt", "lockStmt", "lsetStmt", 
                   "macroIfThenElseStmt", "macroIfBlockStmt", "macroElseIfBlockStmt", 
                   "macroElseBlockStmt", "midStmt", "mkdirStmt", "nameStmt", 
                   "onErrorStmt", "onGoToStmt", "onGoSubStmt", "openStmt", 
                   "outputList", "outputList_Expression", "printStmt", "propertyGetStmt", 
                   "propertySetStmt", "propertyLetStmt", "putStmt", "raiseEventStmt", 
                   "randomizeStmt", "redimStmt", "redimSubStmt", "resetStmt", 
                   "resumeStmt", "returnStmt", "rmdirStmt", "rsetStmt", 
                   "savepictureStmt", "saveSettingStmt", "seekStmt", "selectCaseStmt", 
                   "sC_Case", "sC_Cond", "sendkeysStmt", "setattrStmt", 
                   "setStmt", "stopStmt", "subStmt", "timeStmt", "typeStmt", 
                   "typeStmt_Element", "typeOfStmt", "unloadStmt", "unlockStmt", 
                   "valueStmt", "variableStmt", "variableListStmt", "variableSubStmt", 
                   "whileWendStmt", "widthStmt", "withStmt", "writeStmt", 
                   "explicitCallStmt", "eCS_ProcedureCall", "eCS_MemberProcedureCall", 
                   "implicitCallStmt_InBlock", "iCS_B_ProcedureCall", "iCS_B_MemberProcedureCall", 
                   "implicitCallStmt_InStmt", "iCS_S_VariableOrProcedureCall", 
                   "iCS_S_ProcedureOrArrayCall", "iCS_S_MembersCall", "iCS_S_MemberCall", 
                   "iCS_S_DictionaryCall", "argsCall", "argCall", "dictionaryCallStmt", 
                   "argList", "arg", "argDefaultValue", "subscripts", "subscript", 
                   "ambiguousIdentifier", "asTypeClause", "baseType", "certainIdentifier", 
                   "comparisonOperator", "complexType", "fieldLength", "letterrange", 
                   "lineLabel", "literal", "type", "typeHint", "visibility", 
                   "ambiguousKeyword" ];

function VisualBasic6Parser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

VisualBasic6Parser.prototype = Object.create(antlr4.Parser.prototype);
VisualBasic6Parser.prototype.constructor = VisualBasic6Parser;

Object.defineProperty(VisualBasic6Parser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

VisualBasic6Parser.EOF = antlr4.Token.EOF;
VisualBasic6Parser.ACCESS = 1;
VisualBasic6Parser.ADDRESSOF = 2;
VisualBasic6Parser.ALIAS = 3;
VisualBasic6Parser.AND = 4;
VisualBasic6Parser.ATTRIBUTE = 5;
VisualBasic6Parser.APPACTIVATE = 6;
VisualBasic6Parser.APPEND = 7;
VisualBasic6Parser.AS = 8;
VisualBasic6Parser.BEGIN = 9;
VisualBasic6Parser.BEEP = 10;
VisualBasic6Parser.BINARY = 11;
VisualBasic6Parser.BOOLEAN = 12;
VisualBasic6Parser.BYVAL = 13;
VisualBasic6Parser.BYREF = 14;
VisualBasic6Parser.BYTE = 15;
VisualBasic6Parser.CALL = 16;
VisualBasic6Parser.CASE = 17;
VisualBasic6Parser.CHDIR = 18;
VisualBasic6Parser.CHDRIVE = 19;
VisualBasic6Parser.CLASS = 20;
VisualBasic6Parser.CLOSE = 21;
VisualBasic6Parser.COLLECTION = 22;
VisualBasic6Parser.CONST = 23;
VisualBasic6Parser.DATE = 24;
VisualBasic6Parser.DECLARE = 25;
VisualBasic6Parser.DEFBOOL = 26;
VisualBasic6Parser.DEFBYTE = 27;
VisualBasic6Parser.DEFDATE = 28;
VisualBasic6Parser.DEFDBL = 29;
VisualBasic6Parser.DEFDEC = 30;
VisualBasic6Parser.DEFCUR = 31;
VisualBasic6Parser.DEFINT = 32;
VisualBasic6Parser.DEFLNG = 33;
VisualBasic6Parser.DEFOBJ = 34;
VisualBasic6Parser.DEFSNG = 35;
VisualBasic6Parser.DEFSTR = 36;
VisualBasic6Parser.DEFVAR = 37;
VisualBasic6Parser.DELETESETTING = 38;
VisualBasic6Parser.DIM = 39;
VisualBasic6Parser.DO = 40;
VisualBasic6Parser.DOUBLE = 41;
VisualBasic6Parser.EACH = 42;
VisualBasic6Parser.ELSE = 43;
VisualBasic6Parser.ELSEIF = 44;
VisualBasic6Parser.END_ENUM = 45;
VisualBasic6Parser.END_FUNCTION = 46;
VisualBasic6Parser.END_IF = 47;
VisualBasic6Parser.END_PROPERTY = 48;
VisualBasic6Parser.END_SELECT = 49;
VisualBasic6Parser.END_SUB = 50;
VisualBasic6Parser.END_TYPE = 51;
VisualBasic6Parser.END_WITH = 52;
VisualBasic6Parser.END = 53;
VisualBasic6Parser.ENUM = 54;
VisualBasic6Parser.EQV = 55;
VisualBasic6Parser.ERASE = 56;
VisualBasic6Parser.ERROR = 57;
VisualBasic6Parser.EVENT = 58;
VisualBasic6Parser.EXIT_DO = 59;
VisualBasic6Parser.EXIT_FOR = 60;
VisualBasic6Parser.EXIT_FUNCTION = 61;
VisualBasic6Parser.EXIT_PROPERTY = 62;
VisualBasic6Parser.EXIT_SUB = 63;
VisualBasic6Parser.FALSE = 64;
VisualBasic6Parser.FILECOPY = 65;
VisualBasic6Parser.FRIEND = 66;
VisualBasic6Parser.FOR = 67;
VisualBasic6Parser.FUNCTION = 68;
VisualBasic6Parser.GET = 69;
VisualBasic6Parser.GLOBAL = 70;
VisualBasic6Parser.GOSUB = 71;
VisualBasic6Parser.GOTO = 72;
VisualBasic6Parser.IF = 73;
VisualBasic6Parser.IMP = 74;
VisualBasic6Parser.IMPLEMENTS = 75;
VisualBasic6Parser.IN = 76;
VisualBasic6Parser.INPUT = 77;
VisualBasic6Parser.IS = 78;
VisualBasic6Parser.INTEGER = 79;
VisualBasic6Parser.KILL = 80;
VisualBasic6Parser.LOAD = 81;
VisualBasic6Parser.LOCK = 82;
VisualBasic6Parser.LONG = 83;
VisualBasic6Parser.LOOP = 84;
VisualBasic6Parser.LEN = 85;
VisualBasic6Parser.LET = 86;
VisualBasic6Parser.LIB = 87;
VisualBasic6Parser.LIKE = 88;
VisualBasic6Parser.LINE_INPUT = 89;
VisualBasic6Parser.LOCK_READ = 90;
VisualBasic6Parser.LOCK_WRITE = 91;
VisualBasic6Parser.LOCK_READ_WRITE = 92;
VisualBasic6Parser.LSET = 93;
VisualBasic6Parser.MACRO_IF = 94;
VisualBasic6Parser.MACRO_ELSEIF = 95;
VisualBasic6Parser.MACRO_ELSE = 96;
VisualBasic6Parser.MACRO_END_IF = 97;
VisualBasic6Parser.ME = 98;
VisualBasic6Parser.MID = 99;
VisualBasic6Parser.MKDIR = 100;
VisualBasic6Parser.MOD = 101;
VisualBasic6Parser.NAME = 102;
VisualBasic6Parser.NEXT = 103;
VisualBasic6Parser.NEW = 104;
VisualBasic6Parser.NOT = 105;
VisualBasic6Parser.NOTHING = 106;
VisualBasic6Parser.NULL = 107;
VisualBasic6Parser.ON = 108;
VisualBasic6Parser.ON_ERROR = 109;
VisualBasic6Parser.OPEN = 110;
VisualBasic6Parser.OPTIONAL = 111;
VisualBasic6Parser.OPTION_BASE = 112;
VisualBasic6Parser.OPTION_EXPLICIT = 113;
VisualBasic6Parser.OPTION_COMPARE = 114;
VisualBasic6Parser.OPTION_PRIVATE_MODULE = 115;
VisualBasic6Parser.OR = 116;
VisualBasic6Parser.OUTPUT = 117;
VisualBasic6Parser.PARAMARRAY = 118;
VisualBasic6Parser.PRESERVE = 119;
VisualBasic6Parser.PRINT = 120;
VisualBasic6Parser.PRIVATE = 121;
VisualBasic6Parser.PROPERTY_GET = 122;
VisualBasic6Parser.PROPERTY_LET = 123;
VisualBasic6Parser.PROPERTY_SET = 124;
VisualBasic6Parser.PUBLIC = 125;
VisualBasic6Parser.PUT = 126;
VisualBasic6Parser.RANDOM = 127;
VisualBasic6Parser.RANDOMIZE = 128;
VisualBasic6Parser.RAISEEVENT = 129;
VisualBasic6Parser.READ = 130;
VisualBasic6Parser.READ_WRITE = 131;
VisualBasic6Parser.REDIM = 132;
VisualBasic6Parser.REM = 133;
VisualBasic6Parser.RESET = 134;
VisualBasic6Parser.RESUME = 135;
VisualBasic6Parser.RETURN = 136;
VisualBasic6Parser.RMDIR = 137;
VisualBasic6Parser.RSET = 138;
VisualBasic6Parser.SAVEPICTURE = 139;
VisualBasic6Parser.SAVESETTING = 140;
VisualBasic6Parser.SEEK = 141;
VisualBasic6Parser.SELECT = 142;
VisualBasic6Parser.SENDKEYS = 143;
VisualBasic6Parser.SET = 144;
VisualBasic6Parser.SETATTR = 145;
VisualBasic6Parser.SHARED = 146;
VisualBasic6Parser.SINGLE = 147;
VisualBasic6Parser.SPC = 148;
VisualBasic6Parser.STATIC = 149;
VisualBasic6Parser.STEP = 150;
VisualBasic6Parser.STOP = 151;
VisualBasic6Parser.STRING = 152;
VisualBasic6Parser.SUB = 153;
VisualBasic6Parser.TAB = 154;
VisualBasic6Parser.TEXT = 155;
VisualBasic6Parser.THEN = 156;
VisualBasic6Parser.TIME = 157;
VisualBasic6Parser.TO = 158;
VisualBasic6Parser.TRUE = 159;
VisualBasic6Parser.TYPE = 160;
VisualBasic6Parser.TYPEOF = 161;
VisualBasic6Parser.UNLOAD = 162;
VisualBasic6Parser.UNLOCK = 163;
VisualBasic6Parser.UNTIL = 164;
VisualBasic6Parser.VARIANT = 165;
VisualBasic6Parser.VERSION = 166;
VisualBasic6Parser.WEND = 167;
VisualBasic6Parser.WHILE = 168;
VisualBasic6Parser.WIDTH = 169;
VisualBasic6Parser.WITH = 170;
VisualBasic6Parser.WITHEVENTS = 171;
VisualBasic6Parser.WRITE = 172;
VisualBasic6Parser.XOR = 173;
VisualBasic6Parser.AMPERSAND = 174;
VisualBasic6Parser.ASSIGN = 175;
VisualBasic6Parser.AT = 176;
VisualBasic6Parser.COLON = 177;
VisualBasic6Parser.COMMA = 178;
VisualBasic6Parser.DIV = 179;
VisualBasic6Parser.DOLLAR = 180;
VisualBasic6Parser.DOT = 181;
VisualBasic6Parser.EQ = 182;
VisualBasic6Parser.EXCLAMATIONMARK = 183;
VisualBasic6Parser.GEQ = 184;
VisualBasic6Parser.GT = 185;
VisualBasic6Parser.HASH = 186;
VisualBasic6Parser.LEQ = 187;
VisualBasic6Parser.LPAREN = 188;
VisualBasic6Parser.LT = 189;
VisualBasic6Parser.MINUS = 190;
VisualBasic6Parser.MINUS_EQ = 191;
VisualBasic6Parser.MULT = 192;
VisualBasic6Parser.NEQ = 193;
VisualBasic6Parser.PERCENT = 194;
VisualBasic6Parser.PLUS = 195;
VisualBasic6Parser.PLUS_EQ = 196;
VisualBasic6Parser.POW = 197;
VisualBasic6Parser.RPAREN = 198;
VisualBasic6Parser.SEMICOLON = 199;
VisualBasic6Parser.L_SQUARE_BRACKET = 200;
VisualBasic6Parser.R_SQUARE_BRACKET = 201;
VisualBasic6Parser.STRINGLITERAL = 202;
VisualBasic6Parser.DATELITERAL = 203;
VisualBasic6Parser.COLORLITERAL = 204;
VisualBasic6Parser.INTEGERLITERAL = 205;
VisualBasic6Parser.DOUBLELITERAL = 206;
VisualBasic6Parser.FILENUMBER = 207;
VisualBasic6Parser.IDENTIFIER = 208;
VisualBasic6Parser.LINE_CONTINUATION = 209;
VisualBasic6Parser.NEWLINE = 210;
VisualBasic6Parser.COMMENT = 211;
VisualBasic6Parser.WS = 212;

VisualBasic6Parser.RULE_startRule = 0;
VisualBasic6Parser.RULE_module = 1;
VisualBasic6Parser.RULE_moduleHeader = 2;
VisualBasic6Parser.RULE_moduleConfig = 3;
VisualBasic6Parser.RULE_moduleConfigElement = 4;
VisualBasic6Parser.RULE_moduleAttributes = 5;
VisualBasic6Parser.RULE_moduleOptions = 6;
VisualBasic6Parser.RULE_moduleOption = 7;
VisualBasic6Parser.RULE_moduleBody = 8;
VisualBasic6Parser.RULE_moduleBodyElement = 9;
VisualBasic6Parser.RULE_moduleBlock = 10;
VisualBasic6Parser.RULE_attributeStmt = 11;
VisualBasic6Parser.RULE_block = 12;
VisualBasic6Parser.RULE_blockStmt = 13;
VisualBasic6Parser.RULE_appactivateStmt = 14;
VisualBasic6Parser.RULE_beepStmt = 15;
VisualBasic6Parser.RULE_chdirStmt = 16;
VisualBasic6Parser.RULE_chdriveStmt = 17;
VisualBasic6Parser.RULE_closeStmt = 18;
VisualBasic6Parser.RULE_constStmt = 19;
VisualBasic6Parser.RULE_constSubStmt = 20;
VisualBasic6Parser.RULE_dateStmt = 21;
VisualBasic6Parser.RULE_declareStmt = 22;
VisualBasic6Parser.RULE_deftypeStmt = 23;
VisualBasic6Parser.RULE_deleteSettingStmt = 24;
VisualBasic6Parser.RULE_doLoopStmt = 25;
VisualBasic6Parser.RULE_endStmt = 26;
VisualBasic6Parser.RULE_enumerationStmt = 27;
VisualBasic6Parser.RULE_enumerationStmt_Constant = 28;
VisualBasic6Parser.RULE_eraseStmt = 29;
VisualBasic6Parser.RULE_errorStmt = 30;
VisualBasic6Parser.RULE_eventStmt = 31;
VisualBasic6Parser.RULE_exitStmt = 32;
VisualBasic6Parser.RULE_filecopyStmt = 33;
VisualBasic6Parser.RULE_forEachStmt = 34;
VisualBasic6Parser.RULE_forNextStmt = 35;
VisualBasic6Parser.RULE_functionStmt = 36;
VisualBasic6Parser.RULE_getStmt = 37;
VisualBasic6Parser.RULE_goSubStmt = 38;
VisualBasic6Parser.RULE_goToStmt = 39;
VisualBasic6Parser.RULE_ifThenElseStmt = 40;
VisualBasic6Parser.RULE_ifBlockStmt = 41;
VisualBasic6Parser.RULE_ifConditionStmt = 42;
VisualBasic6Parser.RULE_ifElseIfBlockStmt = 43;
VisualBasic6Parser.RULE_ifElseBlockStmt = 44;
VisualBasic6Parser.RULE_implementsStmt = 45;
VisualBasic6Parser.RULE_inputStmt = 46;
VisualBasic6Parser.RULE_killStmt = 47;
VisualBasic6Parser.RULE_letStmt = 48;
VisualBasic6Parser.RULE_lineInputStmt = 49;
VisualBasic6Parser.RULE_loadStmt = 50;
VisualBasic6Parser.RULE_lockStmt = 51;
VisualBasic6Parser.RULE_lsetStmt = 52;
VisualBasic6Parser.RULE_macroIfThenElseStmt = 53;
VisualBasic6Parser.RULE_macroIfBlockStmt = 54;
VisualBasic6Parser.RULE_macroElseIfBlockStmt = 55;
VisualBasic6Parser.RULE_macroElseBlockStmt = 56;
VisualBasic6Parser.RULE_midStmt = 57;
VisualBasic6Parser.RULE_mkdirStmt = 58;
VisualBasic6Parser.RULE_nameStmt = 59;
VisualBasic6Parser.RULE_onErrorStmt = 60;
VisualBasic6Parser.RULE_onGoToStmt = 61;
VisualBasic6Parser.RULE_onGoSubStmt = 62;
VisualBasic6Parser.RULE_openStmt = 63;
VisualBasic6Parser.RULE_outputList = 64;
VisualBasic6Parser.RULE_outputList_Expression = 65;
VisualBasic6Parser.RULE_printStmt = 66;
VisualBasic6Parser.RULE_propertyGetStmt = 67;
VisualBasic6Parser.RULE_propertySetStmt = 68;
VisualBasic6Parser.RULE_propertyLetStmt = 69;
VisualBasic6Parser.RULE_putStmt = 70;
VisualBasic6Parser.RULE_raiseEventStmt = 71;
VisualBasic6Parser.RULE_randomizeStmt = 72;
VisualBasic6Parser.RULE_redimStmt = 73;
VisualBasic6Parser.RULE_redimSubStmt = 74;
VisualBasic6Parser.RULE_resetStmt = 75;
VisualBasic6Parser.RULE_resumeStmt = 76;
VisualBasic6Parser.RULE_returnStmt = 77;
VisualBasic6Parser.RULE_rmdirStmt = 78;
VisualBasic6Parser.RULE_rsetStmt = 79;
VisualBasic6Parser.RULE_savepictureStmt = 80;
VisualBasic6Parser.RULE_saveSettingStmt = 81;
VisualBasic6Parser.RULE_seekStmt = 82;
VisualBasic6Parser.RULE_selectCaseStmt = 83;
VisualBasic6Parser.RULE_sC_Case = 84;
VisualBasic6Parser.RULE_sC_Cond = 85;
VisualBasic6Parser.RULE_sendkeysStmt = 86;
VisualBasic6Parser.RULE_setattrStmt = 87;
VisualBasic6Parser.RULE_setStmt = 88;
VisualBasic6Parser.RULE_stopStmt = 89;
VisualBasic6Parser.RULE_subStmt = 90;
VisualBasic6Parser.RULE_timeStmt = 91;
VisualBasic6Parser.RULE_typeStmt = 92;
VisualBasic6Parser.RULE_typeStmt_Element = 93;
VisualBasic6Parser.RULE_typeOfStmt = 94;
VisualBasic6Parser.RULE_unloadStmt = 95;
VisualBasic6Parser.RULE_unlockStmt = 96;
VisualBasic6Parser.RULE_valueStmt = 97;
VisualBasic6Parser.RULE_variableStmt = 98;
VisualBasic6Parser.RULE_variableListStmt = 99;
VisualBasic6Parser.RULE_variableSubStmt = 100;
VisualBasic6Parser.RULE_whileWendStmt = 101;
VisualBasic6Parser.RULE_widthStmt = 102;
VisualBasic6Parser.RULE_withStmt = 103;
VisualBasic6Parser.RULE_writeStmt = 104;
VisualBasic6Parser.RULE_explicitCallStmt = 105;
VisualBasic6Parser.RULE_eCS_ProcedureCall = 106;
VisualBasic6Parser.RULE_eCS_MemberProcedureCall = 107;
VisualBasic6Parser.RULE_implicitCallStmt_InBlock = 108;
VisualBasic6Parser.RULE_iCS_B_ProcedureCall = 109;
VisualBasic6Parser.RULE_iCS_B_MemberProcedureCall = 110;
VisualBasic6Parser.RULE_implicitCallStmt_InStmt = 111;
VisualBasic6Parser.RULE_iCS_S_VariableOrProcedureCall = 112;
VisualBasic6Parser.RULE_iCS_S_ProcedureOrArrayCall = 113;
VisualBasic6Parser.RULE_iCS_S_MembersCall = 114;
VisualBasic6Parser.RULE_iCS_S_MemberCall = 115;
VisualBasic6Parser.RULE_iCS_S_DictionaryCall = 116;
VisualBasic6Parser.RULE_argsCall = 117;
VisualBasic6Parser.RULE_argCall = 118;
VisualBasic6Parser.RULE_dictionaryCallStmt = 119;
VisualBasic6Parser.RULE_argList = 120;
VisualBasic6Parser.RULE_arg = 121;
VisualBasic6Parser.RULE_argDefaultValue = 122;
VisualBasic6Parser.RULE_subscripts = 123;
VisualBasic6Parser.RULE_subscript = 124;
VisualBasic6Parser.RULE_ambiguousIdentifier = 125;
VisualBasic6Parser.RULE_asTypeClause = 126;
VisualBasic6Parser.RULE_baseType = 127;
VisualBasic6Parser.RULE_certainIdentifier = 128;
VisualBasic6Parser.RULE_comparisonOperator = 129;
VisualBasic6Parser.RULE_complexType = 130;
VisualBasic6Parser.RULE_fieldLength = 131;
VisualBasic6Parser.RULE_letterrange = 132;
VisualBasic6Parser.RULE_lineLabel = 133;
VisualBasic6Parser.RULE_literal = 134;
VisualBasic6Parser.RULE_type = 135;
VisualBasic6Parser.RULE_typeHint = 136;
VisualBasic6Parser.RULE_visibility = 137;
VisualBasic6Parser.RULE_ambiguousKeyword = 138;

function StartRuleContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_startRule;
    return this;
}

StartRuleContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StartRuleContext.prototype.constructor = StartRuleContext;

StartRuleContext.prototype.module = function() {
    return this.getTypedRuleContext(ModuleContext,0);
};

StartRuleContext.prototype.EOF = function() {
    return this.getToken(VisualBasic6Parser.EOF, 0);
};




VisualBasic6Parser.StartRuleContext = StartRuleContext;

VisualBasic6Parser.prototype.startRule = function() {

    var localctx = new StartRuleContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, VisualBasic6Parser.RULE_startRule);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 278;
        this.module();
        this.state = 279;
        this.match(VisualBasic6Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_module;
    return this;
}

ModuleContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleContext.prototype.constructor = ModuleContext;

ModuleContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ModuleContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


ModuleContext.prototype.moduleHeader = function() {
    return this.getTypedRuleContext(ModuleHeaderContext,0);
};

ModuleContext.prototype.moduleConfig = function() {
    return this.getTypedRuleContext(ModuleConfigContext,0);
};

ModuleContext.prototype.moduleAttributes = function() {
    return this.getTypedRuleContext(ModuleAttributesContext,0);
};

ModuleContext.prototype.moduleOptions = function() {
    return this.getTypedRuleContext(ModuleOptionsContext,0);
};

ModuleContext.prototype.moduleBody = function() {
    return this.getTypedRuleContext(ModuleBodyContext,0);
};




VisualBasic6Parser.ModuleContext = ModuleContext;

VisualBasic6Parser.prototype.module = function() {

    var localctx = new ModuleContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, VisualBasic6Parser.RULE_module);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 282;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,0,this._ctx);
        if(la_===1) {
            this.state = 281;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 287;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,1,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 284;
                this.match(VisualBasic6Parser.NEWLINE); 
            }
            this.state = 289;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,1,this._ctx);
        }

        this.state = 296;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,3,this._ctx);
        if(la_===1) {
            this.state = 290;
            this.moduleHeader();
            this.state = 292; 
            this._errHandler.sync(this);
            var _alt = 1;
            do {
            	switch (_alt) {
            	case 1:
            		this.state = 291;
            		this.match(VisualBasic6Parser.NEWLINE);
            		break;
            	default:
            		throw new antlr4.error.NoViableAltException(this);
            	}
            	this.state = 294; 
            	this._errHandler.sync(this);
            	_alt = this._interp.adaptivePredict(this._input,2, this._ctx);
            } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );

        }
        this.state = 299;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,4,this._ctx);
        if(la_===1) {
            this.state = 298;
            this.moduleConfig();

        }
        this.state = 304;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,5,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 301;
                this.match(VisualBasic6Parser.NEWLINE); 
            }
            this.state = 306;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,5,this._ctx);
        }

        this.state = 308;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,6,this._ctx);
        if(la_===1) {
            this.state = 307;
            this.moduleAttributes();

        }
        this.state = 313;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,7,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 310;
                this.match(VisualBasic6Parser.NEWLINE); 
            }
            this.state = 315;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,7,this._ctx);
        }

        this.state = 317;
        _la = this._input.LA(1);
        if(((((_la - 112)) & ~0x1f) == 0 && ((1 << (_la - 112)) & ((1 << (VisualBasic6Parser.OPTION_BASE - 112)) | (1 << (VisualBasic6Parser.OPTION_EXPLICIT - 112)) | (1 << (VisualBasic6Parser.OPTION_COMPARE - 112)) | (1 << (VisualBasic6Parser.OPTION_PRIVATE_MODULE - 112)))) !== 0)) {
            this.state = 316;
            this.moduleOptions();
        }

        this.state = 322;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,9,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 319;
                this.match(VisualBasic6Parser.NEWLINE); 
            }
            this.state = 324;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,9,this._ctx);
        }

        this.state = 326;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PROPERTY_GET - 98)) | (1 << (VisualBasic6Parser.PROPERTY_LET - 98)) | (1 << (VisualBasic6Parser.PROPERTY_SET - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 325;
            this.moduleBody();
        }

        this.state = 331;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===VisualBasic6Parser.NEWLINE) {
            this.state = 328;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 333;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 335;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 334;
            this.match(VisualBasic6Parser.WS);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleHeaderContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_moduleHeader;
    return this;
}

ModuleHeaderContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleHeaderContext.prototype.constructor = ModuleHeaderContext;

ModuleHeaderContext.prototype.VERSION = function() {
    return this.getToken(VisualBasic6Parser.VERSION, 0);
};

ModuleHeaderContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ModuleHeaderContext.prototype.DOUBLELITERAL = function() {
    return this.getToken(VisualBasic6Parser.DOUBLELITERAL, 0);
};

ModuleHeaderContext.prototype.CLASS = function() {
    return this.getToken(VisualBasic6Parser.CLASS, 0);
};




VisualBasic6Parser.ModuleHeaderContext = ModuleHeaderContext;

VisualBasic6Parser.prototype.moduleHeader = function() {

    var localctx = new ModuleHeaderContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, VisualBasic6Parser.RULE_moduleHeader);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 337;
        this.match(VisualBasic6Parser.VERSION);
        this.state = 338;
        this.match(VisualBasic6Parser.WS);
        this.state = 339;
        this.match(VisualBasic6Parser.DOUBLELITERAL);
        this.state = 340;
        this.match(VisualBasic6Parser.WS);
        this.state = 341;
        this.match(VisualBasic6Parser.CLASS);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleConfigContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_moduleConfig;
    return this;
}

ModuleConfigContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleConfigContext.prototype.constructor = ModuleConfigContext;

ModuleConfigContext.prototype.BEGIN = function() {
    return this.getToken(VisualBasic6Parser.BEGIN, 0);
};

ModuleConfigContext.prototype.END = function() {
    return this.getToken(VisualBasic6Parser.END, 0);
};

ModuleConfigContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


ModuleConfigContext.prototype.moduleConfigElement = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModuleConfigElementContext);
    } else {
        return this.getTypedRuleContext(ModuleConfigElementContext,i);
    }
};




VisualBasic6Parser.ModuleConfigContext = ModuleConfigContext;

VisualBasic6Parser.prototype.moduleConfig = function() {

    var localctx = new ModuleConfigContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, VisualBasic6Parser.RULE_moduleConfig);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 343;
        this.match(VisualBasic6Parser.BEGIN);
        this.state = 345; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 344;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 347; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 350; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 349;
        		this.moduleConfigElement();
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 352; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,14, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
        this.state = 354;
        this.match(VisualBasic6Parser.END);
        this.state = 356; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 355;
        		this.match(VisualBasic6Parser.NEWLINE);
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 358; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,15, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleConfigElementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_moduleConfigElement;
    return this;
}

ModuleConfigElementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleConfigElementContext.prototype.constructor = ModuleConfigElementContext;

ModuleConfigElementContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

ModuleConfigElementContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

ModuleConfigElementContext.prototype.literal = function() {
    return this.getTypedRuleContext(LiteralContext,0);
};

ModuleConfigElementContext.prototype.NEWLINE = function() {
    return this.getToken(VisualBasic6Parser.NEWLINE, 0);
};

ModuleConfigElementContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.ModuleConfigElementContext = ModuleConfigElementContext;

VisualBasic6Parser.prototype.moduleConfigElement = function() {

    var localctx = new ModuleConfigElementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, VisualBasic6Parser.RULE_moduleConfigElement);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 360;
        this.ambiguousIdentifier();
        this.state = 362;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 361;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 364;
        this.match(VisualBasic6Parser.EQ);
        this.state = 366;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 365;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 368;
        this.literal();
        this.state = 369;
        this.match(VisualBasic6Parser.NEWLINE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleAttributesContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_moduleAttributes;
    return this;
}

ModuleAttributesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleAttributesContext.prototype.constructor = ModuleAttributesContext;

ModuleAttributesContext.prototype.attributeStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AttributeStmtContext);
    } else {
        return this.getTypedRuleContext(AttributeStmtContext,i);
    }
};

ModuleAttributesContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};





VisualBasic6Parser.ModuleAttributesContext = ModuleAttributesContext;

VisualBasic6Parser.prototype.moduleAttributes = function() {

    var localctx = new ModuleAttributesContext(this, this._ctx, this.state);
    this.enterRule(localctx, 10, VisualBasic6Parser.RULE_moduleAttributes);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 377; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 371;
        		this.attributeStmt();
        		this.state = 373; 
        		this._errHandler.sync(this);
        		var _alt = 1;
        		do {
        			switch (_alt) {
        			case 1:
        				this.state = 372;
        				this.match(VisualBasic6Parser.NEWLINE);
        				break;
        			default:
        				throw new antlr4.error.NoViableAltException(this);
        			}
        			this.state = 375; 
        			this._errHandler.sync(this);
        			_alt = this._interp.adaptivePredict(this._input,18, this._ctx);
        		} while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 379; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,19, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleOptionsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_moduleOptions;
    return this;
}

ModuleOptionsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleOptionsContext.prototype.constructor = ModuleOptionsContext;

ModuleOptionsContext.prototype.moduleOption = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModuleOptionContext);
    } else {
        return this.getTypedRuleContext(ModuleOptionContext,i);
    }
};

ModuleOptionsContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};





VisualBasic6Parser.ModuleOptionsContext = ModuleOptionsContext;

VisualBasic6Parser.prototype.moduleOptions = function() {

    var localctx = new ModuleOptionsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, VisualBasic6Parser.RULE_moduleOptions);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 387; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 381;
            this.moduleOption();
            this.state = 383; 
            this._errHandler.sync(this);
            var _alt = 1;
            do {
            	switch (_alt) {
            	case 1:
            		this.state = 382;
            		this.match(VisualBasic6Parser.NEWLINE);
            		break;
            	default:
            		throw new antlr4.error.NoViableAltException(this);
            	}
            	this.state = 385; 
            	this._errHandler.sync(this);
            	_alt = this._interp.adaptivePredict(this._input,20, this._ctx);
            } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
            this.state = 389; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(((((_la - 112)) & ~0x1f) == 0 && ((1 << (_la - 112)) & ((1 << (VisualBasic6Parser.OPTION_BASE - 112)) | (1 << (VisualBasic6Parser.OPTION_EXPLICIT - 112)) | (1 << (VisualBasic6Parser.OPTION_COMPARE - 112)) | (1 << (VisualBasic6Parser.OPTION_PRIVATE_MODULE - 112)))) !== 0));
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleOptionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_moduleOption;
    return this;
}

ModuleOptionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleOptionContext.prototype.constructor = ModuleOptionContext;


 
ModuleOptionContext.prototype.copyFrom = function(ctx) {
    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);
};


function OptionExplicitStmtContext(parser, ctx) {
	ModuleOptionContext.call(this, parser);
    ModuleOptionContext.prototype.copyFrom.call(this, ctx);
    return this;
}

OptionExplicitStmtContext.prototype = Object.create(ModuleOptionContext.prototype);
OptionExplicitStmtContext.prototype.constructor = OptionExplicitStmtContext;

VisualBasic6Parser.OptionExplicitStmtContext = OptionExplicitStmtContext;

OptionExplicitStmtContext.prototype.OPTION_EXPLICIT = function() {
    return this.getToken(VisualBasic6Parser.OPTION_EXPLICIT, 0);
};

function OptionBaseStmtContext(parser, ctx) {
	ModuleOptionContext.call(this, parser);
    ModuleOptionContext.prototype.copyFrom.call(this, ctx);
    return this;
}

OptionBaseStmtContext.prototype = Object.create(ModuleOptionContext.prototype);
OptionBaseStmtContext.prototype.constructor = OptionBaseStmtContext;

VisualBasic6Parser.OptionBaseStmtContext = OptionBaseStmtContext;

OptionBaseStmtContext.prototype.OPTION_BASE = function() {
    return this.getToken(VisualBasic6Parser.OPTION_BASE, 0);
};

OptionBaseStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

OptionBaseStmtContext.prototype.INTEGERLITERAL = function() {
    return this.getToken(VisualBasic6Parser.INTEGERLITERAL, 0);
};

function OptionPrivateModuleStmtContext(parser, ctx) {
	ModuleOptionContext.call(this, parser);
    ModuleOptionContext.prototype.copyFrom.call(this, ctx);
    return this;
}

OptionPrivateModuleStmtContext.prototype = Object.create(ModuleOptionContext.prototype);
OptionPrivateModuleStmtContext.prototype.constructor = OptionPrivateModuleStmtContext;

VisualBasic6Parser.OptionPrivateModuleStmtContext = OptionPrivateModuleStmtContext;

OptionPrivateModuleStmtContext.prototype.OPTION_PRIVATE_MODULE = function() {
    return this.getToken(VisualBasic6Parser.OPTION_PRIVATE_MODULE, 0);
};

function OptionCompareStmtContext(parser, ctx) {
	ModuleOptionContext.call(this, parser);
    ModuleOptionContext.prototype.copyFrom.call(this, ctx);
    return this;
}

OptionCompareStmtContext.prototype = Object.create(ModuleOptionContext.prototype);
OptionCompareStmtContext.prototype.constructor = OptionCompareStmtContext;

VisualBasic6Parser.OptionCompareStmtContext = OptionCompareStmtContext;

OptionCompareStmtContext.prototype.OPTION_COMPARE = function() {
    return this.getToken(VisualBasic6Parser.OPTION_COMPARE, 0);
};

OptionCompareStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

OptionCompareStmtContext.prototype.BINARY = function() {
    return this.getToken(VisualBasic6Parser.BINARY, 0);
};

OptionCompareStmtContext.prototype.TEXT = function() {
    return this.getToken(VisualBasic6Parser.TEXT, 0);
};


VisualBasic6Parser.ModuleOptionContext = ModuleOptionContext;

VisualBasic6Parser.prototype.moduleOption = function() {

    var localctx = new ModuleOptionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, VisualBasic6Parser.RULE_moduleOption);
    var _la = 0; // Token type
    try {
        this.state = 399;
        switch(this._input.LA(1)) {
        case VisualBasic6Parser.OPTION_BASE:
            localctx = new OptionBaseStmtContext(this, localctx);
            this.enterOuterAlt(localctx, 1);
            this.state = 391;
            this.match(VisualBasic6Parser.OPTION_BASE);
            this.state = 392;
            this.match(VisualBasic6Parser.WS);
            this.state = 393;
            this.match(VisualBasic6Parser.INTEGERLITERAL);
            break;
        case VisualBasic6Parser.OPTION_COMPARE:
            localctx = new OptionCompareStmtContext(this, localctx);
            this.enterOuterAlt(localctx, 2);
            this.state = 394;
            this.match(VisualBasic6Parser.OPTION_COMPARE);
            this.state = 395;
            this.match(VisualBasic6Parser.WS);
            this.state = 396;
            _la = this._input.LA(1);
            if(!(_la===VisualBasic6Parser.BINARY || _la===VisualBasic6Parser.TEXT)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
            break;
        case VisualBasic6Parser.OPTION_EXPLICIT:
            localctx = new OptionExplicitStmtContext(this, localctx);
            this.enterOuterAlt(localctx, 3);
            this.state = 397;
            this.match(VisualBasic6Parser.OPTION_EXPLICIT);
            break;
        case VisualBasic6Parser.OPTION_PRIVATE_MODULE:
            localctx = new OptionPrivateModuleStmtContext(this, localctx);
            this.enterOuterAlt(localctx, 4);
            this.state = 398;
            this.match(VisualBasic6Parser.OPTION_PRIVATE_MODULE);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleBodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_moduleBody;
    return this;
}

ModuleBodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleBodyContext.prototype.constructor = ModuleBodyContext;

ModuleBodyContext.prototype.moduleBodyElement = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ModuleBodyElementContext);
    } else {
        return this.getTypedRuleContext(ModuleBodyElementContext,i);
    }
};

ModuleBodyContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};





VisualBasic6Parser.ModuleBodyContext = ModuleBodyContext;

VisualBasic6Parser.prototype.moduleBody = function() {

    var localctx = new ModuleBodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, VisualBasic6Parser.RULE_moduleBody);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 401;
        this.moduleBodyElement();
        this.state = 410;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,24,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 403; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 402;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 405; 
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while(_la===VisualBasic6Parser.NEWLINE);
                this.state = 407;
                this.moduleBodyElement(); 
            }
            this.state = 412;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,24,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleBodyElementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_moduleBodyElement;
    return this;
}

ModuleBodyElementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleBodyElementContext.prototype.constructor = ModuleBodyElementContext;

ModuleBodyElementContext.prototype.moduleBlock = function() {
    return this.getTypedRuleContext(ModuleBlockContext,0);
};

ModuleBodyElementContext.prototype.declareStmt = function() {
    return this.getTypedRuleContext(DeclareStmtContext,0);
};

ModuleBodyElementContext.prototype.enumerationStmt = function() {
    return this.getTypedRuleContext(EnumerationStmtContext,0);
};

ModuleBodyElementContext.prototype.eventStmt = function() {
    return this.getTypedRuleContext(EventStmtContext,0);
};

ModuleBodyElementContext.prototype.functionStmt = function() {
    return this.getTypedRuleContext(FunctionStmtContext,0);
};

ModuleBodyElementContext.prototype.macroIfThenElseStmt = function() {
    return this.getTypedRuleContext(MacroIfThenElseStmtContext,0);
};

ModuleBodyElementContext.prototype.propertyGetStmt = function() {
    return this.getTypedRuleContext(PropertyGetStmtContext,0);
};

ModuleBodyElementContext.prototype.propertySetStmt = function() {
    return this.getTypedRuleContext(PropertySetStmtContext,0);
};

ModuleBodyElementContext.prototype.propertyLetStmt = function() {
    return this.getTypedRuleContext(PropertyLetStmtContext,0);
};

ModuleBodyElementContext.prototype.subStmt = function() {
    return this.getTypedRuleContext(SubStmtContext,0);
};

ModuleBodyElementContext.prototype.typeStmt = function() {
    return this.getTypedRuleContext(TypeStmtContext,0);
};




VisualBasic6Parser.ModuleBodyElementContext = ModuleBodyElementContext;

VisualBasic6Parser.prototype.moduleBodyElement = function() {

    var localctx = new ModuleBodyElementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, VisualBasic6Parser.RULE_moduleBodyElement);
    try {
        this.state = 424;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,25,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 413;
            this.moduleBlock();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 414;
            this.declareStmt();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 415;
            this.enumerationStmt();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 416;
            this.eventStmt();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 417;
            this.functionStmt();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 418;
            this.macroIfThenElseStmt();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 419;
            this.propertyGetStmt();
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 420;
            this.propertySetStmt();
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 421;
            this.propertyLetStmt();
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 422;
            this.subStmt();
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 423;
            this.typeStmt();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ModuleBlockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_moduleBlock;
    return this;
}

ModuleBlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ModuleBlockContext.prototype.constructor = ModuleBlockContext;

ModuleBlockContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.ModuleBlockContext = ModuleBlockContext;

VisualBasic6Parser.prototype.moduleBlock = function() {

    var localctx = new ModuleBlockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 20, VisualBasic6Parser.RULE_moduleBlock);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 426;
        this.block();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributeStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_attributeStmt;
    return this;
}

AttributeStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributeStmtContext.prototype.constructor = AttributeStmtContext;

AttributeStmtContext.prototype.ATTRIBUTE = function() {
    return this.getToken(VisualBasic6Parser.ATTRIBUTE, 0);
};

AttributeStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


AttributeStmtContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

AttributeStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

AttributeStmtContext.prototype.literal = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(LiteralContext);
    } else {
        return this.getTypedRuleContext(LiteralContext,i);
    }
};

AttributeStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.AttributeStmtContext = AttributeStmtContext;

VisualBasic6Parser.prototype.attributeStmt = function() {

    var localctx = new AttributeStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, VisualBasic6Parser.RULE_attributeStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 428;
        this.match(VisualBasic6Parser.ATTRIBUTE);
        this.state = 429;
        this.match(VisualBasic6Parser.WS);
        this.state = 430;
        this.implicitCallStmt_InStmt();
        this.state = 432;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 431;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 434;
        this.match(VisualBasic6Parser.EQ);
        this.state = 436;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 435;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 438;
        this.literal();
        this.state = 449;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,30,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 440;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 439;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 442;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 444;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 443;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 446;
                this.literal(); 
            }
            this.state = 451;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,30,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BlockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_block;
    return this;
}

BlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BlockContext.prototype.constructor = BlockContext;

BlockContext.prototype.blockStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(BlockStmtContext);
    } else {
        return this.getTypedRuleContext(BlockStmtContext,i);
    }
};

BlockContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


BlockContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.BlockContext = BlockContext;

VisualBasic6Parser.prototype.block = function() {

    var localctx = new BlockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, VisualBasic6Parser.RULE_block);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 452;
        this.blockStmt();
        this.state = 464;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,33,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 454; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 453;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 456; 
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while(_la===VisualBasic6Parser.NEWLINE);
                this.state = 459;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 458;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 461;
                this.blockStmt(); 
            }
            this.state = 466;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,33,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BlockStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_blockStmt;
    return this;
}

BlockStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BlockStmtContext.prototype.constructor = BlockStmtContext;

BlockStmtContext.prototype.appactivateStmt = function() {
    return this.getTypedRuleContext(AppactivateStmtContext,0);
};

BlockStmtContext.prototype.attributeStmt = function() {
    return this.getTypedRuleContext(AttributeStmtContext,0);
};

BlockStmtContext.prototype.beepStmt = function() {
    return this.getTypedRuleContext(BeepStmtContext,0);
};

BlockStmtContext.prototype.chdirStmt = function() {
    return this.getTypedRuleContext(ChdirStmtContext,0);
};

BlockStmtContext.prototype.chdriveStmt = function() {
    return this.getTypedRuleContext(ChdriveStmtContext,0);
};

BlockStmtContext.prototype.closeStmt = function() {
    return this.getTypedRuleContext(CloseStmtContext,0);
};

BlockStmtContext.prototype.constStmt = function() {
    return this.getTypedRuleContext(ConstStmtContext,0);
};

BlockStmtContext.prototype.dateStmt = function() {
    return this.getTypedRuleContext(DateStmtContext,0);
};

BlockStmtContext.prototype.deleteSettingStmt = function() {
    return this.getTypedRuleContext(DeleteSettingStmtContext,0);
};

BlockStmtContext.prototype.deftypeStmt = function() {
    return this.getTypedRuleContext(DeftypeStmtContext,0);
};

BlockStmtContext.prototype.doLoopStmt = function() {
    return this.getTypedRuleContext(DoLoopStmtContext,0);
};

BlockStmtContext.prototype.endStmt = function() {
    return this.getTypedRuleContext(EndStmtContext,0);
};

BlockStmtContext.prototype.eraseStmt = function() {
    return this.getTypedRuleContext(EraseStmtContext,0);
};

BlockStmtContext.prototype.errorStmt = function() {
    return this.getTypedRuleContext(ErrorStmtContext,0);
};

BlockStmtContext.prototype.exitStmt = function() {
    return this.getTypedRuleContext(ExitStmtContext,0);
};

BlockStmtContext.prototype.explicitCallStmt = function() {
    return this.getTypedRuleContext(ExplicitCallStmtContext,0);
};

BlockStmtContext.prototype.filecopyStmt = function() {
    return this.getTypedRuleContext(FilecopyStmtContext,0);
};

BlockStmtContext.prototype.forEachStmt = function() {
    return this.getTypedRuleContext(ForEachStmtContext,0);
};

BlockStmtContext.prototype.forNextStmt = function() {
    return this.getTypedRuleContext(ForNextStmtContext,0);
};

BlockStmtContext.prototype.getStmt = function() {
    return this.getTypedRuleContext(GetStmtContext,0);
};

BlockStmtContext.prototype.goSubStmt = function() {
    return this.getTypedRuleContext(GoSubStmtContext,0);
};

BlockStmtContext.prototype.goToStmt = function() {
    return this.getTypedRuleContext(GoToStmtContext,0);
};

BlockStmtContext.prototype.ifThenElseStmt = function() {
    return this.getTypedRuleContext(IfThenElseStmtContext,0);
};

BlockStmtContext.prototype.implementsStmt = function() {
    return this.getTypedRuleContext(ImplementsStmtContext,0);
};

BlockStmtContext.prototype.inputStmt = function() {
    return this.getTypedRuleContext(InputStmtContext,0);
};

BlockStmtContext.prototype.killStmt = function() {
    return this.getTypedRuleContext(KillStmtContext,0);
};

BlockStmtContext.prototype.letStmt = function() {
    return this.getTypedRuleContext(LetStmtContext,0);
};

BlockStmtContext.prototype.lineInputStmt = function() {
    return this.getTypedRuleContext(LineInputStmtContext,0);
};

BlockStmtContext.prototype.lineLabel = function() {
    return this.getTypedRuleContext(LineLabelContext,0);
};

BlockStmtContext.prototype.loadStmt = function() {
    return this.getTypedRuleContext(LoadStmtContext,0);
};

BlockStmtContext.prototype.lockStmt = function() {
    return this.getTypedRuleContext(LockStmtContext,0);
};

BlockStmtContext.prototype.lsetStmt = function() {
    return this.getTypedRuleContext(LsetStmtContext,0);
};

BlockStmtContext.prototype.macroIfThenElseStmt = function() {
    return this.getTypedRuleContext(MacroIfThenElseStmtContext,0);
};

BlockStmtContext.prototype.midStmt = function() {
    return this.getTypedRuleContext(MidStmtContext,0);
};

BlockStmtContext.prototype.mkdirStmt = function() {
    return this.getTypedRuleContext(MkdirStmtContext,0);
};

BlockStmtContext.prototype.nameStmt = function() {
    return this.getTypedRuleContext(NameStmtContext,0);
};

BlockStmtContext.prototype.onErrorStmt = function() {
    return this.getTypedRuleContext(OnErrorStmtContext,0);
};

BlockStmtContext.prototype.onGoToStmt = function() {
    return this.getTypedRuleContext(OnGoToStmtContext,0);
};

BlockStmtContext.prototype.onGoSubStmt = function() {
    return this.getTypedRuleContext(OnGoSubStmtContext,0);
};

BlockStmtContext.prototype.openStmt = function() {
    return this.getTypedRuleContext(OpenStmtContext,0);
};

BlockStmtContext.prototype.printStmt = function() {
    return this.getTypedRuleContext(PrintStmtContext,0);
};

BlockStmtContext.prototype.putStmt = function() {
    return this.getTypedRuleContext(PutStmtContext,0);
};

BlockStmtContext.prototype.raiseEventStmt = function() {
    return this.getTypedRuleContext(RaiseEventStmtContext,0);
};

BlockStmtContext.prototype.randomizeStmt = function() {
    return this.getTypedRuleContext(RandomizeStmtContext,0);
};

BlockStmtContext.prototype.redimStmt = function() {
    return this.getTypedRuleContext(RedimStmtContext,0);
};

BlockStmtContext.prototype.resetStmt = function() {
    return this.getTypedRuleContext(ResetStmtContext,0);
};

BlockStmtContext.prototype.resumeStmt = function() {
    return this.getTypedRuleContext(ResumeStmtContext,0);
};

BlockStmtContext.prototype.returnStmt = function() {
    return this.getTypedRuleContext(ReturnStmtContext,0);
};

BlockStmtContext.prototype.rmdirStmt = function() {
    return this.getTypedRuleContext(RmdirStmtContext,0);
};

BlockStmtContext.prototype.rsetStmt = function() {
    return this.getTypedRuleContext(RsetStmtContext,0);
};

BlockStmtContext.prototype.savepictureStmt = function() {
    return this.getTypedRuleContext(SavepictureStmtContext,0);
};

BlockStmtContext.prototype.saveSettingStmt = function() {
    return this.getTypedRuleContext(SaveSettingStmtContext,0);
};

BlockStmtContext.prototype.seekStmt = function() {
    return this.getTypedRuleContext(SeekStmtContext,0);
};

BlockStmtContext.prototype.selectCaseStmt = function() {
    return this.getTypedRuleContext(SelectCaseStmtContext,0);
};

BlockStmtContext.prototype.sendkeysStmt = function() {
    return this.getTypedRuleContext(SendkeysStmtContext,0);
};

BlockStmtContext.prototype.setattrStmt = function() {
    return this.getTypedRuleContext(SetattrStmtContext,0);
};

BlockStmtContext.prototype.setStmt = function() {
    return this.getTypedRuleContext(SetStmtContext,0);
};

BlockStmtContext.prototype.stopStmt = function() {
    return this.getTypedRuleContext(StopStmtContext,0);
};

BlockStmtContext.prototype.timeStmt = function() {
    return this.getTypedRuleContext(TimeStmtContext,0);
};

BlockStmtContext.prototype.unloadStmt = function() {
    return this.getTypedRuleContext(UnloadStmtContext,0);
};

BlockStmtContext.prototype.unlockStmt = function() {
    return this.getTypedRuleContext(UnlockStmtContext,0);
};

BlockStmtContext.prototype.variableStmt = function() {
    return this.getTypedRuleContext(VariableStmtContext,0);
};

BlockStmtContext.prototype.whileWendStmt = function() {
    return this.getTypedRuleContext(WhileWendStmtContext,0);
};

BlockStmtContext.prototype.widthStmt = function() {
    return this.getTypedRuleContext(WidthStmtContext,0);
};

BlockStmtContext.prototype.withStmt = function() {
    return this.getTypedRuleContext(WithStmtContext,0);
};

BlockStmtContext.prototype.writeStmt = function() {
    return this.getTypedRuleContext(WriteStmtContext,0);
};

BlockStmtContext.prototype.implicitCallStmt_InBlock = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InBlockContext,0);
};




VisualBasic6Parser.BlockStmtContext = BlockStmtContext;

VisualBasic6Parser.prototype.blockStmt = function() {

    var localctx = new BlockStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, VisualBasic6Parser.RULE_blockStmt);
    try {
        this.state = 534;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,34,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 467;
            this.appactivateStmt();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 468;
            this.attributeStmt();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 469;
            this.beepStmt();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 470;
            this.chdirStmt();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 471;
            this.chdriveStmt();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 472;
            this.closeStmt();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 473;
            this.constStmt();
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 474;
            this.dateStmt();
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 475;
            this.deleteSettingStmt();
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 476;
            this.deftypeStmt();
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 477;
            this.doLoopStmt();
            break;

        case 12:
            this.enterOuterAlt(localctx, 12);
            this.state = 478;
            this.endStmt();
            break;

        case 13:
            this.enterOuterAlt(localctx, 13);
            this.state = 479;
            this.eraseStmt();
            break;

        case 14:
            this.enterOuterAlt(localctx, 14);
            this.state = 480;
            this.errorStmt();
            break;

        case 15:
            this.enterOuterAlt(localctx, 15);
            this.state = 481;
            this.exitStmt();
            break;

        case 16:
            this.enterOuterAlt(localctx, 16);
            this.state = 482;
            this.explicitCallStmt();
            break;

        case 17:
            this.enterOuterAlt(localctx, 17);
            this.state = 483;
            this.filecopyStmt();
            break;

        case 18:
            this.enterOuterAlt(localctx, 18);
            this.state = 484;
            this.forEachStmt();
            break;

        case 19:
            this.enterOuterAlt(localctx, 19);
            this.state = 485;
            this.forNextStmt();
            break;

        case 20:
            this.enterOuterAlt(localctx, 20);
            this.state = 486;
            this.getStmt();
            break;

        case 21:
            this.enterOuterAlt(localctx, 21);
            this.state = 487;
            this.goSubStmt();
            break;

        case 22:
            this.enterOuterAlt(localctx, 22);
            this.state = 488;
            this.goToStmt();
            break;

        case 23:
            this.enterOuterAlt(localctx, 23);
            this.state = 489;
            this.ifThenElseStmt();
            break;

        case 24:
            this.enterOuterAlt(localctx, 24);
            this.state = 490;
            this.implementsStmt();
            break;

        case 25:
            this.enterOuterAlt(localctx, 25);
            this.state = 491;
            this.inputStmt();
            break;

        case 26:
            this.enterOuterAlt(localctx, 26);
            this.state = 492;
            this.killStmt();
            break;

        case 27:
            this.enterOuterAlt(localctx, 27);
            this.state = 493;
            this.letStmt();
            break;

        case 28:
            this.enterOuterAlt(localctx, 28);
            this.state = 494;
            this.lineInputStmt();
            break;

        case 29:
            this.enterOuterAlt(localctx, 29);
            this.state = 495;
            this.lineLabel();
            break;

        case 30:
            this.enterOuterAlt(localctx, 30);
            this.state = 496;
            this.loadStmt();
            break;

        case 31:
            this.enterOuterAlt(localctx, 31);
            this.state = 497;
            this.lockStmt();
            break;

        case 32:
            this.enterOuterAlt(localctx, 32);
            this.state = 498;
            this.lsetStmt();
            break;

        case 33:
            this.enterOuterAlt(localctx, 33);
            this.state = 499;
            this.macroIfThenElseStmt();
            break;

        case 34:
            this.enterOuterAlt(localctx, 34);
            this.state = 500;
            this.midStmt();
            break;

        case 35:
            this.enterOuterAlt(localctx, 35);
            this.state = 501;
            this.mkdirStmt();
            break;

        case 36:
            this.enterOuterAlt(localctx, 36);
            this.state = 502;
            this.nameStmt();
            break;

        case 37:
            this.enterOuterAlt(localctx, 37);
            this.state = 503;
            this.onErrorStmt();
            break;

        case 38:
            this.enterOuterAlt(localctx, 38);
            this.state = 504;
            this.onGoToStmt();
            break;

        case 39:
            this.enterOuterAlt(localctx, 39);
            this.state = 505;
            this.onGoSubStmt();
            break;

        case 40:
            this.enterOuterAlt(localctx, 40);
            this.state = 506;
            this.openStmt();
            break;

        case 41:
            this.enterOuterAlt(localctx, 41);
            this.state = 507;
            this.printStmt();
            break;

        case 42:
            this.enterOuterAlt(localctx, 42);
            this.state = 508;
            this.putStmt();
            break;

        case 43:
            this.enterOuterAlt(localctx, 43);
            this.state = 509;
            this.raiseEventStmt();
            break;

        case 44:
            this.enterOuterAlt(localctx, 44);
            this.state = 510;
            this.randomizeStmt();
            break;

        case 45:
            this.enterOuterAlt(localctx, 45);
            this.state = 511;
            this.redimStmt();
            break;

        case 46:
            this.enterOuterAlt(localctx, 46);
            this.state = 512;
            this.resetStmt();
            break;

        case 47:
            this.enterOuterAlt(localctx, 47);
            this.state = 513;
            this.resumeStmt();
            break;

        case 48:
            this.enterOuterAlt(localctx, 48);
            this.state = 514;
            this.returnStmt();
            break;

        case 49:
            this.enterOuterAlt(localctx, 49);
            this.state = 515;
            this.rmdirStmt();
            break;

        case 50:
            this.enterOuterAlt(localctx, 50);
            this.state = 516;
            this.rsetStmt();
            break;

        case 51:
            this.enterOuterAlt(localctx, 51);
            this.state = 517;
            this.savepictureStmt();
            break;

        case 52:
            this.enterOuterAlt(localctx, 52);
            this.state = 518;
            this.saveSettingStmt();
            break;

        case 53:
            this.enterOuterAlt(localctx, 53);
            this.state = 519;
            this.seekStmt();
            break;

        case 54:
            this.enterOuterAlt(localctx, 54);
            this.state = 520;
            this.selectCaseStmt();
            break;

        case 55:
            this.enterOuterAlt(localctx, 55);
            this.state = 521;
            this.sendkeysStmt();
            break;

        case 56:
            this.enterOuterAlt(localctx, 56);
            this.state = 522;
            this.setattrStmt();
            break;

        case 57:
            this.enterOuterAlt(localctx, 57);
            this.state = 523;
            this.setStmt();
            break;

        case 58:
            this.enterOuterAlt(localctx, 58);
            this.state = 524;
            this.stopStmt();
            break;

        case 59:
            this.enterOuterAlt(localctx, 59);
            this.state = 525;
            this.timeStmt();
            break;

        case 60:
            this.enterOuterAlt(localctx, 60);
            this.state = 526;
            this.unloadStmt();
            break;

        case 61:
            this.enterOuterAlt(localctx, 61);
            this.state = 527;
            this.unlockStmt();
            break;

        case 62:
            this.enterOuterAlt(localctx, 62);
            this.state = 528;
            this.variableStmt();
            break;

        case 63:
            this.enterOuterAlt(localctx, 63);
            this.state = 529;
            this.whileWendStmt();
            break;

        case 64:
            this.enterOuterAlt(localctx, 64);
            this.state = 530;
            this.widthStmt();
            break;

        case 65:
            this.enterOuterAlt(localctx, 65);
            this.state = 531;
            this.withStmt();
            break;

        case 66:
            this.enterOuterAlt(localctx, 66);
            this.state = 532;
            this.writeStmt();
            break;

        case 67:
            this.enterOuterAlt(localctx, 67);
            this.state = 533;
            this.implicitCallStmt_InBlock();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AppactivateStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_appactivateStmt;
    return this;
}

AppactivateStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AppactivateStmtContext.prototype.constructor = AppactivateStmtContext;

AppactivateStmtContext.prototype.APPACTIVATE = function() {
    return this.getToken(VisualBasic6Parser.APPACTIVATE, 0);
};

AppactivateStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


AppactivateStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

AppactivateStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};




VisualBasic6Parser.AppactivateStmtContext = AppactivateStmtContext;

VisualBasic6Parser.prototype.appactivateStmt = function() {

    var localctx = new AppactivateStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, VisualBasic6Parser.RULE_appactivateStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 536;
        this.match(VisualBasic6Parser.APPACTIVATE);
        this.state = 537;
        this.match(VisualBasic6Parser.WS);
        this.state = 538;
        this.valueStmt(0);
        this.state = 547;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,37,this._ctx);
        if(la_===1) {
            this.state = 540;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 539;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 542;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 544;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 543;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 546;
            this.valueStmt(0);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BeepStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_beepStmt;
    return this;
}

BeepStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BeepStmtContext.prototype.constructor = BeepStmtContext;

BeepStmtContext.prototype.BEEP = function() {
    return this.getToken(VisualBasic6Parser.BEEP, 0);
};




VisualBasic6Parser.BeepStmtContext = BeepStmtContext;

VisualBasic6Parser.prototype.beepStmt = function() {

    var localctx = new BeepStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 30, VisualBasic6Parser.RULE_beepStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 549;
        this.match(VisualBasic6Parser.BEEP);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ChdirStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_chdirStmt;
    return this;
}

ChdirStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ChdirStmtContext.prototype.constructor = ChdirStmtContext;

ChdirStmtContext.prototype.CHDIR = function() {
    return this.getToken(VisualBasic6Parser.CHDIR, 0);
};

ChdirStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

ChdirStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.ChdirStmtContext = ChdirStmtContext;

VisualBasic6Parser.prototype.chdirStmt = function() {

    var localctx = new ChdirStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, VisualBasic6Parser.RULE_chdirStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 551;
        this.match(VisualBasic6Parser.CHDIR);
        this.state = 552;
        this.match(VisualBasic6Parser.WS);
        this.state = 553;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ChdriveStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_chdriveStmt;
    return this;
}

ChdriveStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ChdriveStmtContext.prototype.constructor = ChdriveStmtContext;

ChdriveStmtContext.prototype.CHDRIVE = function() {
    return this.getToken(VisualBasic6Parser.CHDRIVE, 0);
};

ChdriveStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

ChdriveStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.ChdriveStmtContext = ChdriveStmtContext;

VisualBasic6Parser.prototype.chdriveStmt = function() {

    var localctx = new ChdriveStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, VisualBasic6Parser.RULE_chdriveStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 555;
        this.match(VisualBasic6Parser.CHDRIVE);
        this.state = 556;
        this.match(VisualBasic6Parser.WS);
        this.state = 557;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CloseStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_closeStmt;
    return this;
}

CloseStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CloseStmtContext.prototype.constructor = CloseStmtContext;

CloseStmtContext.prototype.CLOSE = function() {
    return this.getToken(VisualBasic6Parser.CLOSE, 0);
};

CloseStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


CloseStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

CloseStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.CloseStmtContext = CloseStmtContext;

VisualBasic6Parser.prototype.closeStmt = function() {

    var localctx = new CloseStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, VisualBasic6Parser.RULE_closeStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 559;
        this.match(VisualBasic6Parser.CLOSE);
        this.state = 575;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,41,this._ctx);
        if(la_===1) {
            this.state = 560;
            this.match(VisualBasic6Parser.WS);
            this.state = 561;
            this.valueStmt(0);
            this.state = 572;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,40,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 563;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 562;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 565;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 567;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 566;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 569;
                    this.valueStmt(0); 
                }
                this.state = 574;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,40,this._ctx);
            }


        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConstStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_constStmt;
    return this;
}

ConstStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstStmtContext.prototype.constructor = ConstStmtContext;

ConstStmtContext.prototype.CONST = function() {
    return this.getToken(VisualBasic6Parser.CONST, 0);
};

ConstStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ConstStmtContext.prototype.constSubStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ConstSubStmtContext);
    } else {
        return this.getTypedRuleContext(ConstSubStmtContext,i);
    }
};

ConstStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

ConstStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.ConstStmtContext = ConstStmtContext;

VisualBasic6Parser.prototype.constStmt = function() {

    var localctx = new ConstStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, VisualBasic6Parser.RULE_constStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 580;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 577;
            this.visibility();
            this.state = 578;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 582;
        this.match(VisualBasic6Parser.CONST);
        this.state = 583;
        this.match(VisualBasic6Parser.WS);
        this.state = 584;
        this.constSubStmt();
        this.state = 595;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,45,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 586;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 585;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 588;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 590;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 589;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 592;
                this.constSubStmt(); 
            }
            this.state = 597;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,45,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConstSubStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_constSubStmt;
    return this;
}

ConstSubStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstSubStmtContext.prototype.constructor = ConstSubStmtContext;

ConstSubStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

ConstSubStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

ConstSubStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

ConstSubStmtContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

ConstSubStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ConstSubStmtContext.prototype.asTypeClause = function() {
    return this.getTypedRuleContext(AsTypeClauseContext,0);
};




VisualBasic6Parser.ConstSubStmtContext = ConstSubStmtContext;

VisualBasic6Parser.prototype.constSubStmt = function() {

    var localctx = new ConstSubStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, VisualBasic6Parser.RULE_constSubStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 598;
        this.ambiguousIdentifier();
        this.state = 600;
        _la = this._input.LA(1);
        if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
            this.state = 599;
            this.typeHint();
        }

        this.state = 604;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,47,this._ctx);
        if(la_===1) {
            this.state = 602;
            this.match(VisualBasic6Parser.WS);
            this.state = 603;
            this.asTypeClause();

        }
        this.state = 607;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 606;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 609;
        this.match(VisualBasic6Parser.EQ);
        this.state = 611;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 610;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 613;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DateStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_dateStmt;
    return this;
}

DateStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DateStmtContext.prototype.constructor = DateStmtContext;

DateStmtContext.prototype.DATE = function() {
    return this.getToken(VisualBasic6Parser.DATE, 0);
};

DateStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

DateStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

DateStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.DateStmtContext = DateStmtContext;

VisualBasic6Parser.prototype.dateStmt = function() {

    var localctx = new DateStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, VisualBasic6Parser.RULE_dateStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 615;
        this.match(VisualBasic6Parser.DATE);
        this.state = 617;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 616;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 619;
        this.match(VisualBasic6Parser.EQ);
        this.state = 621;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 620;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 623;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeclareStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_declareStmt;
    return this;
}

DeclareStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeclareStmtContext.prototype.constructor = DeclareStmtContext;

DeclareStmtContext.prototype.DECLARE = function() {
    return this.getToken(VisualBasic6Parser.DECLARE, 0);
};

DeclareStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


DeclareStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

DeclareStmtContext.prototype.LIB = function() {
    return this.getToken(VisualBasic6Parser.LIB, 0);
};

DeclareStmtContext.prototype.STRINGLITERAL = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.STRINGLITERAL);
    } else {
        return this.getToken(VisualBasic6Parser.STRINGLITERAL, i);
    }
};


DeclareStmtContext.prototype.FUNCTION = function() {
    return this.getToken(VisualBasic6Parser.FUNCTION, 0);
};

DeclareStmtContext.prototype.SUB = function() {
    return this.getToken(VisualBasic6Parser.SUB, 0);
};

DeclareStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

DeclareStmtContext.prototype.typeHint = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeHintContext);
    } else {
        return this.getTypedRuleContext(TypeHintContext,i);
    }
};

DeclareStmtContext.prototype.ALIAS = function() {
    return this.getToken(VisualBasic6Parser.ALIAS, 0);
};

DeclareStmtContext.prototype.argList = function() {
    return this.getTypedRuleContext(ArgListContext,0);
};

DeclareStmtContext.prototype.asTypeClause = function() {
    return this.getTypedRuleContext(AsTypeClauseContext,0);
};




VisualBasic6Parser.DeclareStmtContext = DeclareStmtContext;

VisualBasic6Parser.prototype.declareStmt = function() {

    var localctx = new DeclareStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, VisualBasic6Parser.RULE_declareStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 628;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 625;
            this.visibility();
            this.state = 626;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 630;
        this.match(VisualBasic6Parser.DECLARE);
        this.state = 631;
        this.match(VisualBasic6Parser.WS);
        this.state = 637;
        switch(this._input.LA(1)) {
        case VisualBasic6Parser.FUNCTION:
            this.state = 632;
            this.match(VisualBasic6Parser.FUNCTION);
            this.state = 634;
            _la = this._input.LA(1);
            if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
                this.state = 633;
                this.typeHint();
            }

            break;
        case VisualBasic6Parser.SUB:
            this.state = 636;
            this.match(VisualBasic6Parser.SUB);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 639;
        this.match(VisualBasic6Parser.WS);
        this.state = 640;
        this.ambiguousIdentifier();
        this.state = 642;
        _la = this._input.LA(1);
        if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
            this.state = 641;
            this.typeHint();
        }

        this.state = 644;
        this.match(VisualBasic6Parser.WS);
        this.state = 645;
        this.match(VisualBasic6Parser.LIB);
        this.state = 646;
        this.match(VisualBasic6Parser.WS);
        this.state = 647;
        this.match(VisualBasic6Parser.STRINGLITERAL);
        this.state = 652;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,56,this._ctx);
        if(la_===1) {
            this.state = 648;
            this.match(VisualBasic6Parser.WS);
            this.state = 649;
            this.match(VisualBasic6Parser.ALIAS);
            this.state = 650;
            this.match(VisualBasic6Parser.WS);
            this.state = 651;
            this.match(VisualBasic6Parser.STRINGLITERAL);

        }
        this.state = 658;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,58,this._ctx);
        if(la_===1) {
            this.state = 655;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 654;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 657;
            this.argList();

        }
        this.state = 662;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,59,this._ctx);
        if(la_===1) {
            this.state = 660;
            this.match(VisualBasic6Parser.WS);
            this.state = 661;
            this.asTypeClause();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeftypeStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_deftypeStmt;
    return this;
}

DeftypeStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeftypeStmtContext.prototype.constructor = DeftypeStmtContext;

DeftypeStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


DeftypeStmtContext.prototype.letterrange = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(LetterrangeContext);
    } else {
        return this.getTypedRuleContext(LetterrangeContext,i);
    }
};

DeftypeStmtContext.prototype.DEFBOOL = function() {
    return this.getToken(VisualBasic6Parser.DEFBOOL, 0);
};

DeftypeStmtContext.prototype.DEFBYTE = function() {
    return this.getToken(VisualBasic6Parser.DEFBYTE, 0);
};

DeftypeStmtContext.prototype.DEFINT = function() {
    return this.getToken(VisualBasic6Parser.DEFINT, 0);
};

DeftypeStmtContext.prototype.DEFLNG = function() {
    return this.getToken(VisualBasic6Parser.DEFLNG, 0);
};

DeftypeStmtContext.prototype.DEFCUR = function() {
    return this.getToken(VisualBasic6Parser.DEFCUR, 0);
};

DeftypeStmtContext.prototype.DEFSNG = function() {
    return this.getToken(VisualBasic6Parser.DEFSNG, 0);
};

DeftypeStmtContext.prototype.DEFDBL = function() {
    return this.getToken(VisualBasic6Parser.DEFDBL, 0);
};

DeftypeStmtContext.prototype.DEFDEC = function() {
    return this.getToken(VisualBasic6Parser.DEFDEC, 0);
};

DeftypeStmtContext.prototype.DEFDATE = function() {
    return this.getToken(VisualBasic6Parser.DEFDATE, 0);
};

DeftypeStmtContext.prototype.DEFSTR = function() {
    return this.getToken(VisualBasic6Parser.DEFSTR, 0);
};

DeftypeStmtContext.prototype.DEFOBJ = function() {
    return this.getToken(VisualBasic6Parser.DEFOBJ, 0);
};

DeftypeStmtContext.prototype.DEFVAR = function() {
    return this.getToken(VisualBasic6Parser.DEFVAR, 0);
};

DeftypeStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.DeftypeStmtContext = DeftypeStmtContext;

VisualBasic6Parser.prototype.deftypeStmt = function() {

    var localctx = new DeftypeStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, VisualBasic6Parser.RULE_deftypeStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 664;
        _la = this._input.LA(1);
        if(!(((((_la - 26)) & ~0x1f) == 0 && ((1 << (_la - 26)) & ((1 << (VisualBasic6Parser.DEFBOOL - 26)) | (1 << (VisualBasic6Parser.DEFBYTE - 26)) | (1 << (VisualBasic6Parser.DEFDATE - 26)) | (1 << (VisualBasic6Parser.DEFDBL - 26)) | (1 << (VisualBasic6Parser.DEFDEC - 26)) | (1 << (VisualBasic6Parser.DEFCUR - 26)) | (1 << (VisualBasic6Parser.DEFINT - 26)) | (1 << (VisualBasic6Parser.DEFLNG - 26)) | (1 << (VisualBasic6Parser.DEFOBJ - 26)) | (1 << (VisualBasic6Parser.DEFSNG - 26)) | (1 << (VisualBasic6Parser.DEFSTR - 26)) | (1 << (VisualBasic6Parser.DEFVAR - 26)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
        this.state = 665;
        this.match(VisualBasic6Parser.WS);
        this.state = 666;
        this.letterrange();
        this.state = 677;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,62,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 668;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 667;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 670;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 672;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 671;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 674;
                this.letterrange(); 
            }
            this.state = 679;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,62,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeleteSettingStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_deleteSettingStmt;
    return this;
}

DeleteSettingStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeleteSettingStmtContext.prototype.constructor = DeleteSettingStmtContext;

DeleteSettingStmtContext.prototype.DELETESETTING = function() {
    return this.getToken(VisualBasic6Parser.DELETESETTING, 0);
};

DeleteSettingStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


DeleteSettingStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

DeleteSettingStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.DeleteSettingStmtContext = DeleteSettingStmtContext;

VisualBasic6Parser.prototype.deleteSettingStmt = function() {

    var localctx = new DeleteSettingStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 48, VisualBasic6Parser.RULE_deleteSettingStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 680;
        this.match(VisualBasic6Parser.DELETESETTING);
        this.state = 681;
        this.match(VisualBasic6Parser.WS);
        this.state = 682;
        this.valueStmt(0);
        this.state = 684;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 683;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 686;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 688;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 687;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 690;
        this.valueStmt(0);
        this.state = 699;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,67,this._ctx);
        if(la_===1) {
            this.state = 692;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 691;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 694;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 696;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 695;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 698;
            this.valueStmt(0);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DoLoopStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_doLoopStmt;
    return this;
}

DoLoopStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DoLoopStmtContext.prototype.constructor = DoLoopStmtContext;

DoLoopStmtContext.prototype.DO = function() {
    return this.getToken(VisualBasic6Parser.DO, 0);
};

DoLoopStmtContext.prototype.LOOP = function() {
    return this.getToken(VisualBasic6Parser.LOOP, 0);
};

DoLoopStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


DoLoopStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

DoLoopStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


DoLoopStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

DoLoopStmtContext.prototype.WHILE = function() {
    return this.getToken(VisualBasic6Parser.WHILE, 0);
};

DoLoopStmtContext.prototype.UNTIL = function() {
    return this.getToken(VisualBasic6Parser.UNTIL, 0);
};




VisualBasic6Parser.DoLoopStmtContext = DoLoopStmtContext;

VisualBasic6Parser.prototype.doLoopStmt = function() {

    var localctx = new DoLoopStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, VisualBasic6Parser.RULE_doLoopStmt);
    var _la = 0; // Token type
    try {
        this.state = 754;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,76,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 701;
            this.match(VisualBasic6Parser.DO);
            this.state = 703; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 702;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 705; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
            this.state = 713;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,70,this._ctx);
            if(la_===1) {
                this.state = 707;
                this.block();
                this.state = 709; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 708;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 711; 
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while(_la===VisualBasic6Parser.NEWLINE);

            }
            this.state = 715;
            this.match(VisualBasic6Parser.LOOP);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 716;
            this.match(VisualBasic6Parser.DO);
            this.state = 717;
            this.match(VisualBasic6Parser.WS);
            this.state = 718;
            _la = this._input.LA(1);
            if(!(_la===VisualBasic6Parser.UNTIL || _la===VisualBasic6Parser.WHILE)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
            this.state = 719;
            this.match(VisualBasic6Parser.WS);
            this.state = 720;
            this.valueStmt(0);
            this.state = 722; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 721;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 724; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
            this.state = 732;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,73,this._ctx);
            if(la_===1) {
                this.state = 726;
                this.block();
                this.state = 728; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
                do {
                    this.state = 727;
                    this.match(VisualBasic6Parser.NEWLINE);
                    this.state = 730; 
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                } while(_la===VisualBasic6Parser.NEWLINE);

            }
            this.state = 734;
            this.match(VisualBasic6Parser.LOOP);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 736;
            this.match(VisualBasic6Parser.DO);
            this.state = 738; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 737;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 740; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);

            this.state = 742;
            this.block();
            this.state = 744; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 743;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 746; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
            this.state = 748;
            this.match(VisualBasic6Parser.LOOP);
            this.state = 749;
            this.match(VisualBasic6Parser.WS);
            this.state = 750;
            _la = this._input.LA(1);
            if(!(_la===VisualBasic6Parser.UNTIL || _la===VisualBasic6Parser.WHILE)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
            this.state = 751;
            this.match(VisualBasic6Parser.WS);
            this.state = 752;
            this.valueStmt(0);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EndStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_endStmt;
    return this;
}

EndStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EndStmtContext.prototype.constructor = EndStmtContext;

EndStmtContext.prototype.END = function() {
    return this.getToken(VisualBasic6Parser.END, 0);
};




VisualBasic6Parser.EndStmtContext = EndStmtContext;

VisualBasic6Parser.prototype.endStmt = function() {

    var localctx = new EndStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, VisualBasic6Parser.RULE_endStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 756;
        this.match(VisualBasic6Parser.END);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumerationStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_enumerationStmt;
    return this;
}

EnumerationStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumerationStmtContext.prototype.constructor = EnumerationStmtContext;

EnumerationStmtContext.prototype.ENUM = function() {
    return this.getToken(VisualBasic6Parser.ENUM, 0);
};

EnumerationStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


EnumerationStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

EnumerationStmtContext.prototype.END_ENUM = function() {
    return this.getToken(VisualBasic6Parser.END_ENUM, 0);
};

EnumerationStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

EnumerationStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


EnumerationStmtContext.prototype.enumerationStmt_Constant = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(EnumerationStmt_ConstantContext);
    } else {
        return this.getTypedRuleContext(EnumerationStmt_ConstantContext,i);
    }
};




VisualBasic6Parser.EnumerationStmtContext = EnumerationStmtContext;

VisualBasic6Parser.prototype.enumerationStmt = function() {

    var localctx = new EnumerationStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, VisualBasic6Parser.RULE_enumerationStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 761;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 758;
            this.visibility();
            this.state = 759;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 763;
        this.match(VisualBasic6Parser.ENUM);
        this.state = 764;
        this.match(VisualBasic6Parser.WS);
        this.state = 765;
        this.ambiguousIdentifier();
        this.state = 767; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 766;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 769; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 774;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 771;
            this.enumerationStmt_Constant();
            this.state = 776;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 777;
        this.match(VisualBasic6Parser.END_ENUM);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumerationStmt_ConstantContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_enumerationStmt_Constant;
    return this;
}

EnumerationStmt_ConstantContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumerationStmt_ConstantContext.prototype.constructor = EnumerationStmt_ConstantContext;

EnumerationStmt_ConstantContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

EnumerationStmt_ConstantContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

EnumerationStmt_ConstantContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

EnumerationStmt_ConstantContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


EnumerationStmt_ConstantContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.EnumerationStmt_ConstantContext = EnumerationStmt_ConstantContext;

VisualBasic6Parser.prototype.enumerationStmt_Constant = function() {

    var localctx = new EnumerationStmt_ConstantContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, VisualBasic6Parser.RULE_enumerationStmt_Constant);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 779;
        this.ambiguousIdentifier();
        this.state = 788;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.EQ || _la===VisualBasic6Parser.WS) {
            this.state = 781;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 780;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 783;
            this.match(VisualBasic6Parser.EQ);
            this.state = 785;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 784;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 787;
            this.valueStmt(0);
        }

        this.state = 791; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 790;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 793; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EraseStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_eraseStmt;
    return this;
}

EraseStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EraseStmtContext.prototype.constructor = EraseStmtContext;

EraseStmtContext.prototype.ERASE = function() {
    return this.getToken(VisualBasic6Parser.ERASE, 0);
};

EraseStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


EraseStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

EraseStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.EraseStmtContext = EraseStmtContext;

VisualBasic6Parser.prototype.eraseStmt = function() {

    var localctx = new EraseStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 58, VisualBasic6Parser.RULE_eraseStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 795;
        this.match(VisualBasic6Parser.ERASE);
        this.state = 796;
        this.match(VisualBasic6Parser.WS);
        this.state = 797;
        this.valueStmt(0);
        this.state = 808;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,86,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 799;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 798;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 801;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 803;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 802;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 805;
                this.valueStmt(0); 
            }
            this.state = 810;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,86,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ErrorStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_errorStmt;
    return this;
}

ErrorStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ErrorStmtContext.prototype.constructor = ErrorStmtContext;

ErrorStmtContext.prototype.ERROR = function() {
    return this.getToken(VisualBasic6Parser.ERROR, 0);
};

ErrorStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

ErrorStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.ErrorStmtContext = ErrorStmtContext;

VisualBasic6Parser.prototype.errorStmt = function() {

    var localctx = new ErrorStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 60, VisualBasic6Parser.RULE_errorStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 811;
        this.match(VisualBasic6Parser.ERROR);
        this.state = 812;
        this.match(VisualBasic6Parser.WS);
        this.state = 813;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EventStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_eventStmt;
    return this;
}

EventStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EventStmtContext.prototype.constructor = EventStmtContext;

EventStmtContext.prototype.EVENT = function() {
    return this.getToken(VisualBasic6Parser.EVENT, 0);
};

EventStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


EventStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

EventStmtContext.prototype.argList = function() {
    return this.getTypedRuleContext(ArgListContext,0);
};

EventStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};




VisualBasic6Parser.EventStmtContext = EventStmtContext;

VisualBasic6Parser.prototype.eventStmt = function() {

    var localctx = new EventStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 62, VisualBasic6Parser.RULE_eventStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 818;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 815;
            this.visibility();
            this.state = 816;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 820;
        this.match(VisualBasic6Parser.EVENT);
        this.state = 821;
        this.match(VisualBasic6Parser.WS);
        this.state = 822;
        this.ambiguousIdentifier();
        this.state = 824;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 823;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 826;
        this.argList();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExitStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_exitStmt;
    return this;
}

ExitStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExitStmtContext.prototype.constructor = ExitStmtContext;

ExitStmtContext.prototype.EXIT_DO = function() {
    return this.getToken(VisualBasic6Parser.EXIT_DO, 0);
};

ExitStmtContext.prototype.EXIT_FOR = function() {
    return this.getToken(VisualBasic6Parser.EXIT_FOR, 0);
};

ExitStmtContext.prototype.EXIT_FUNCTION = function() {
    return this.getToken(VisualBasic6Parser.EXIT_FUNCTION, 0);
};

ExitStmtContext.prototype.EXIT_PROPERTY = function() {
    return this.getToken(VisualBasic6Parser.EXIT_PROPERTY, 0);
};

ExitStmtContext.prototype.EXIT_SUB = function() {
    return this.getToken(VisualBasic6Parser.EXIT_SUB, 0);
};




VisualBasic6Parser.ExitStmtContext = ExitStmtContext;

VisualBasic6Parser.prototype.exitStmt = function() {

    var localctx = new ExitStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 64, VisualBasic6Parser.RULE_exitStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 828;
        _la = this._input.LA(1);
        if(!(((((_la - 59)) & ~0x1f) == 0 && ((1 << (_la - 59)) & ((1 << (VisualBasic6Parser.EXIT_DO - 59)) | (1 << (VisualBasic6Parser.EXIT_FOR - 59)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 59)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 59)) | (1 << (VisualBasic6Parser.EXIT_SUB - 59)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FilecopyStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_filecopyStmt;
    return this;
}

FilecopyStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FilecopyStmtContext.prototype.constructor = FilecopyStmtContext;

FilecopyStmtContext.prototype.FILECOPY = function() {
    return this.getToken(VisualBasic6Parser.FILECOPY, 0);
};

FilecopyStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


FilecopyStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

FilecopyStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};




VisualBasic6Parser.FilecopyStmtContext = FilecopyStmtContext;

VisualBasic6Parser.prototype.filecopyStmt = function() {

    var localctx = new FilecopyStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 66, VisualBasic6Parser.RULE_filecopyStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 830;
        this.match(VisualBasic6Parser.FILECOPY);
        this.state = 831;
        this.match(VisualBasic6Parser.WS);
        this.state = 832;
        this.valueStmt(0);
        this.state = 834;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 833;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 836;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 838;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 837;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 840;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ForEachStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_forEachStmt;
    return this;
}

ForEachStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ForEachStmtContext.prototype.constructor = ForEachStmtContext;

ForEachStmtContext.prototype.FOR = function() {
    return this.getToken(VisualBasic6Parser.FOR, 0);
};

ForEachStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ForEachStmtContext.prototype.EACH = function() {
    return this.getToken(VisualBasic6Parser.EACH, 0);
};

ForEachStmtContext.prototype.ambiguousIdentifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AmbiguousIdentifierContext);
    } else {
        return this.getTypedRuleContext(AmbiguousIdentifierContext,i);
    }
};

ForEachStmtContext.prototype.IN = function() {
    return this.getToken(VisualBasic6Parser.IN, 0);
};

ForEachStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

ForEachStmtContext.prototype.NEXT = function() {
    return this.getToken(VisualBasic6Parser.NEXT, 0);
};

ForEachStmtContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

ForEachStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


ForEachStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.ForEachStmtContext = ForEachStmtContext;

VisualBasic6Parser.prototype.forEachStmt = function() {

    var localctx = new ForEachStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 68, VisualBasic6Parser.RULE_forEachStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 842;
        this.match(VisualBasic6Parser.FOR);
        this.state = 843;
        this.match(VisualBasic6Parser.WS);
        this.state = 844;
        this.match(VisualBasic6Parser.EACH);
        this.state = 845;
        this.match(VisualBasic6Parser.WS);
        this.state = 846;
        this.ambiguousIdentifier();
        this.state = 848;
        _la = this._input.LA(1);
        if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
            this.state = 847;
            this.typeHint();
        }

        this.state = 850;
        this.match(VisualBasic6Parser.WS);
        this.state = 851;
        this.match(VisualBasic6Parser.IN);
        this.state = 852;
        this.match(VisualBasic6Parser.WS);
        this.state = 853;
        this.valueStmt(0);
        this.state = 855; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 854;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 857; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 865;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,94,this._ctx);
        if(la_===1) {
            this.state = 859;
            this.block();
            this.state = 861; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 860;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 863; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);

        }
        this.state = 867;
        this.match(VisualBasic6Parser.NEXT);
        this.state = 870;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,95,this._ctx);
        if(la_===1) {
            this.state = 868;
            this.match(VisualBasic6Parser.WS);
            this.state = 869;
            this.ambiguousIdentifier();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ForNextStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_forNextStmt;
    return this;
}

ForNextStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ForNextStmtContext.prototype.constructor = ForNextStmtContext;

ForNextStmtContext.prototype.FOR = function() {
    return this.getToken(VisualBasic6Parser.FOR, 0);
};

ForNextStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ForNextStmtContext.prototype.ambiguousIdentifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AmbiguousIdentifierContext);
    } else {
        return this.getTypedRuleContext(AmbiguousIdentifierContext,i);
    }
};

ForNextStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

ForNextStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

ForNextStmtContext.prototype.TO = function() {
    return this.getToken(VisualBasic6Parser.TO, 0);
};

ForNextStmtContext.prototype.NEXT = function() {
    return this.getToken(VisualBasic6Parser.NEXT, 0);
};

ForNextStmtContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

ForNextStmtContext.prototype.asTypeClause = function() {
    return this.getTypedRuleContext(AsTypeClauseContext,0);
};

ForNextStmtContext.prototype.STEP = function() {
    return this.getToken(VisualBasic6Parser.STEP, 0);
};

ForNextStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


ForNextStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.ForNextStmtContext = ForNextStmtContext;

VisualBasic6Parser.prototype.forNextStmt = function() {

    var localctx = new ForNextStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 70, VisualBasic6Parser.RULE_forNextStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 872;
        this.match(VisualBasic6Parser.FOR);
        this.state = 873;
        this.match(VisualBasic6Parser.WS);
        this.state = 874;
        this.ambiguousIdentifier();
        this.state = 876;
        _la = this._input.LA(1);
        if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
            this.state = 875;
            this.typeHint();
        }

        this.state = 880;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,97,this._ctx);
        if(la_===1) {
            this.state = 878;
            this.match(VisualBasic6Parser.WS);
            this.state = 879;
            this.asTypeClause();

        }
        this.state = 883;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 882;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 885;
        this.match(VisualBasic6Parser.EQ);
        this.state = 887;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 886;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 889;
        this.valueStmt(0);
        this.state = 890;
        this.match(VisualBasic6Parser.WS);
        this.state = 891;
        this.match(VisualBasic6Parser.TO);
        this.state = 892;
        this.match(VisualBasic6Parser.WS);
        this.state = 893;
        this.valueStmt(0);
        this.state = 898;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 894;
            this.match(VisualBasic6Parser.WS);
            this.state = 895;
            this.match(VisualBasic6Parser.STEP);
            this.state = 896;
            this.match(VisualBasic6Parser.WS);
            this.state = 897;
            this.valueStmt(0);
        }

        this.state = 901; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 900;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 903; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 911;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,103,this._ctx);
        if(la_===1) {
            this.state = 905;
            this.block();
            this.state = 907; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 906;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 909; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);

        }
        this.state = 913;
        this.match(VisualBasic6Parser.NEXT);
        this.state = 916;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,104,this._ctx);
        if(la_===1) {
            this.state = 914;
            this.match(VisualBasic6Parser.WS);
            this.state = 915;
            this.ambiguousIdentifier();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FunctionStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_functionStmt;
    return this;
}

FunctionStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunctionStmtContext.prototype.constructor = FunctionStmtContext;

FunctionStmtContext.prototype.FUNCTION = function() {
    return this.getToken(VisualBasic6Parser.FUNCTION, 0);
};

FunctionStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


FunctionStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

FunctionStmtContext.prototype.END_FUNCTION = function() {
    return this.getToken(VisualBasic6Parser.END_FUNCTION, 0);
};

FunctionStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

FunctionStmtContext.prototype.STATIC = function() {
    return this.getToken(VisualBasic6Parser.STATIC, 0);
};

FunctionStmtContext.prototype.argList = function() {
    return this.getTypedRuleContext(ArgListContext,0);
};

FunctionStmtContext.prototype.asTypeClause = function() {
    return this.getTypedRuleContext(AsTypeClauseContext,0);
};

FunctionStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


FunctionStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.FunctionStmtContext = FunctionStmtContext;

VisualBasic6Parser.prototype.functionStmt = function() {

    var localctx = new FunctionStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 72, VisualBasic6Parser.RULE_functionStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 921;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 918;
            this.visibility();
            this.state = 919;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 925;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.STATIC) {
            this.state = 923;
            this.match(VisualBasic6Parser.STATIC);
            this.state = 924;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 927;
        this.match(VisualBasic6Parser.FUNCTION);
        this.state = 928;
        this.match(VisualBasic6Parser.WS);
        this.state = 929;
        this.ambiguousIdentifier();
        this.state = 934;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,108,this._ctx);
        if(la_===1) {
            this.state = 931;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 930;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 933;
            this.argList();

        }
        this.state = 938;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 936;
            this.match(VisualBasic6Parser.WS);
            this.state = 937;
            this.asTypeClause();
        }

        this.state = 941; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 940;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 943; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 951;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 945;
            this.block();
            this.state = 947; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 946;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 949; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

        this.state = 953;
        this.match(VisualBasic6Parser.END_FUNCTION);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function GetStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_getStmt;
    return this;
}

GetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GetStmtContext.prototype.constructor = GetStmtContext;

GetStmtContext.prototype.GET = function() {
    return this.getToken(VisualBasic6Parser.GET, 0);
};

GetStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


GetStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

GetStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.GetStmtContext = GetStmtContext;

VisualBasic6Parser.prototype.getStmt = function() {

    var localctx = new GetStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 74, VisualBasic6Parser.RULE_getStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 955;
        this.match(VisualBasic6Parser.GET);
        this.state = 956;
        this.match(VisualBasic6Parser.WS);
        this.state = 957;
        this.valueStmt(0);
        this.state = 959;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 958;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 961;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 963;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,114,this._ctx);
        if(la_===1) {
            this.state = 962;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 966;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)) | (1 << (VisualBasic6Parser.LPAREN - 162)) | (1 << (VisualBasic6Parser.MINUS - 162)))) !== 0) || ((((_la - 195)) & ~0x1f) == 0 && ((1 << (_la - 195)) & ((1 << (VisualBasic6Parser.PLUS - 195)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 195)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 195)) | (1 << (VisualBasic6Parser.DATELITERAL - 195)) | (1 << (VisualBasic6Parser.COLORLITERAL - 195)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 195)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 195)) | (1 << (VisualBasic6Parser.FILENUMBER - 195)) | (1 << (VisualBasic6Parser.IDENTIFIER - 195)))) !== 0)) {
            this.state = 965;
            this.valueStmt(0);
        }

        this.state = 969;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 968;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 971;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 973;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 972;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 975;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function GoSubStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_goSubStmt;
    return this;
}

GoSubStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GoSubStmtContext.prototype.constructor = GoSubStmtContext;

GoSubStmtContext.prototype.GOSUB = function() {
    return this.getToken(VisualBasic6Parser.GOSUB, 0);
};

GoSubStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

GoSubStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.GoSubStmtContext = GoSubStmtContext;

VisualBasic6Parser.prototype.goSubStmt = function() {

    var localctx = new GoSubStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 76, VisualBasic6Parser.RULE_goSubStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 977;
        this.match(VisualBasic6Parser.GOSUB);
        this.state = 978;
        this.match(VisualBasic6Parser.WS);
        this.state = 979;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function GoToStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_goToStmt;
    return this;
}

GoToStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
GoToStmtContext.prototype.constructor = GoToStmtContext;

GoToStmtContext.prototype.GOTO = function() {
    return this.getToken(VisualBasic6Parser.GOTO, 0);
};

GoToStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

GoToStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.GoToStmtContext = GoToStmtContext;

VisualBasic6Parser.prototype.goToStmt = function() {

    var localctx = new GoToStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 78, VisualBasic6Parser.RULE_goToStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 981;
        this.match(VisualBasic6Parser.GOTO);
        this.state = 982;
        this.match(VisualBasic6Parser.WS);
        this.state = 983;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IfThenElseStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_ifThenElseStmt;
    return this;
}

IfThenElseStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IfThenElseStmtContext.prototype.constructor = IfThenElseStmtContext;


 
IfThenElseStmtContext.prototype.copyFrom = function(ctx) {
    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);
};


function BlockIfThenElseContext(parser, ctx) {
	IfThenElseStmtContext.call(this, parser);
    IfThenElseStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

BlockIfThenElseContext.prototype = Object.create(IfThenElseStmtContext.prototype);
BlockIfThenElseContext.prototype.constructor = BlockIfThenElseContext;

VisualBasic6Parser.BlockIfThenElseContext = BlockIfThenElseContext;

BlockIfThenElseContext.prototype.ifBlockStmt = function() {
    return this.getTypedRuleContext(IfBlockStmtContext,0);
};

BlockIfThenElseContext.prototype.END_IF = function() {
    return this.getToken(VisualBasic6Parser.END_IF, 0);
};

BlockIfThenElseContext.prototype.ifElseIfBlockStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(IfElseIfBlockStmtContext);
    } else {
        return this.getTypedRuleContext(IfElseIfBlockStmtContext,i);
    }
};

BlockIfThenElseContext.prototype.ifElseBlockStmt = function() {
    return this.getTypedRuleContext(IfElseBlockStmtContext,0);
};

function InlineIfThenElseContext(parser, ctx) {
	IfThenElseStmtContext.call(this, parser);
    IfThenElseStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

InlineIfThenElseContext.prototype = Object.create(IfThenElseStmtContext.prototype);
InlineIfThenElseContext.prototype.constructor = InlineIfThenElseContext;

VisualBasic6Parser.InlineIfThenElseContext = InlineIfThenElseContext;

InlineIfThenElseContext.prototype.IF = function() {
    return this.getToken(VisualBasic6Parser.IF, 0);
};

InlineIfThenElseContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


InlineIfThenElseContext.prototype.ifConditionStmt = function() {
    return this.getTypedRuleContext(IfConditionStmtContext,0);
};

InlineIfThenElseContext.prototype.THEN = function() {
    return this.getToken(VisualBasic6Parser.THEN, 0);
};

InlineIfThenElseContext.prototype.blockStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(BlockStmtContext);
    } else {
        return this.getTypedRuleContext(BlockStmtContext,i);
    }
};

InlineIfThenElseContext.prototype.ELSE = function() {
    return this.getToken(VisualBasic6Parser.ELSE, 0);
};


VisualBasic6Parser.IfThenElseStmtContext = IfThenElseStmtContext;

VisualBasic6Parser.prototype.ifThenElseStmt = function() {

    var localctx = new IfThenElseStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, VisualBasic6Parser.RULE_ifThenElseStmt);
    var _la = 0; // Token type
    try {
        this.state = 1010;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,121,this._ctx);
        switch(la_) {
        case 1:
            localctx = new InlineIfThenElseContext(this, localctx);
            this.enterOuterAlt(localctx, 1);
            this.state = 985;
            this.match(VisualBasic6Parser.IF);
            this.state = 986;
            this.match(VisualBasic6Parser.WS);
            this.state = 987;
            this.ifConditionStmt();
            this.state = 988;
            this.match(VisualBasic6Parser.WS);
            this.state = 989;
            this.match(VisualBasic6Parser.THEN);
            this.state = 990;
            this.match(VisualBasic6Parser.WS);
            this.state = 991;
            this.blockStmt();
            this.state = 996;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,118,this._ctx);
            if(la_===1) {
                this.state = 992;
                this.match(VisualBasic6Parser.WS);
                this.state = 993;
                this.match(VisualBasic6Parser.ELSE);
                this.state = 994;
                this.match(VisualBasic6Parser.WS);
                this.state = 995;
                this.blockStmt();

            }
            break;

        case 2:
            localctx = new BlockIfThenElseContext(this, localctx);
            this.enterOuterAlt(localctx, 2);
            this.state = 998;
            this.ifBlockStmt();
            this.state = 1002;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===VisualBasic6Parser.ELSEIF) {
                this.state = 999;
                this.ifElseIfBlockStmt();
                this.state = 1004;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1006;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.ELSE) {
                this.state = 1005;
                this.ifElseBlockStmt();
            }

            this.state = 1008;
            this.match(VisualBasic6Parser.END_IF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IfBlockStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_ifBlockStmt;
    return this;
}

IfBlockStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IfBlockStmtContext.prototype.constructor = IfBlockStmtContext;

IfBlockStmtContext.prototype.IF = function() {
    return this.getToken(VisualBasic6Parser.IF, 0);
};

IfBlockStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


IfBlockStmtContext.prototype.ifConditionStmt = function() {
    return this.getTypedRuleContext(IfConditionStmtContext,0);
};

IfBlockStmtContext.prototype.THEN = function() {
    return this.getToken(VisualBasic6Parser.THEN, 0);
};

IfBlockStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


IfBlockStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.IfBlockStmtContext = IfBlockStmtContext;

VisualBasic6Parser.prototype.ifBlockStmt = function() {

    var localctx = new IfBlockStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, VisualBasic6Parser.RULE_ifBlockStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1012;
        this.match(VisualBasic6Parser.IF);
        this.state = 1013;
        this.match(VisualBasic6Parser.WS);
        this.state = 1014;
        this.ifConditionStmt();
        this.state = 1015;
        this.match(VisualBasic6Parser.WS);
        this.state = 1016;
        this.match(VisualBasic6Parser.THEN);
        this.state = 1018; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1017;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1020; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1028;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,124,this._ctx);
        if(la_===1) {
            this.state = 1022;
            this.block();
            this.state = 1024; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1023;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1026; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IfConditionStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_ifConditionStmt;
    return this;
}

IfConditionStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IfConditionStmtContext.prototype.constructor = IfConditionStmtContext;

IfConditionStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.IfConditionStmtContext = IfConditionStmtContext;

VisualBasic6Parser.prototype.ifConditionStmt = function() {

    var localctx = new IfConditionStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, VisualBasic6Parser.RULE_ifConditionStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1030;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IfElseIfBlockStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_ifElseIfBlockStmt;
    return this;
}

IfElseIfBlockStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IfElseIfBlockStmtContext.prototype.constructor = IfElseIfBlockStmtContext;

IfElseIfBlockStmtContext.prototype.ELSEIF = function() {
    return this.getToken(VisualBasic6Parser.ELSEIF, 0);
};

IfElseIfBlockStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


IfElseIfBlockStmtContext.prototype.ifConditionStmt = function() {
    return this.getTypedRuleContext(IfConditionStmtContext,0);
};

IfElseIfBlockStmtContext.prototype.THEN = function() {
    return this.getToken(VisualBasic6Parser.THEN, 0);
};

IfElseIfBlockStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


IfElseIfBlockStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.IfElseIfBlockStmtContext = IfElseIfBlockStmtContext;

VisualBasic6Parser.prototype.ifElseIfBlockStmt = function() {

    var localctx = new IfElseIfBlockStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 86, VisualBasic6Parser.RULE_ifElseIfBlockStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1032;
        this.match(VisualBasic6Parser.ELSEIF);
        this.state = 1033;
        this.match(VisualBasic6Parser.WS);
        this.state = 1034;
        this.ifConditionStmt();
        this.state = 1035;
        this.match(VisualBasic6Parser.WS);
        this.state = 1036;
        this.match(VisualBasic6Parser.THEN);
        this.state = 1038; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1037;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1040; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1048;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,127,this._ctx);
        if(la_===1) {
            this.state = 1042;
            this.block();
            this.state = 1044; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1043;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1046; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IfElseBlockStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_ifElseBlockStmt;
    return this;
}

IfElseBlockStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IfElseBlockStmtContext.prototype.constructor = IfElseBlockStmtContext;

IfElseBlockStmtContext.prototype.ELSE = function() {
    return this.getToken(VisualBasic6Parser.ELSE, 0);
};

IfElseBlockStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


IfElseBlockStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.IfElseBlockStmtContext = IfElseBlockStmtContext;

VisualBasic6Parser.prototype.ifElseBlockStmt = function() {

    var localctx = new IfElseBlockStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 88, VisualBasic6Parser.RULE_ifElseBlockStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1050;
        this.match(VisualBasic6Parser.ELSE);
        this.state = 1052; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1051;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1054; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1062;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 1056;
            this.block();
            this.state = 1058; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1057;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1060; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ImplementsStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_implementsStmt;
    return this;
}

ImplementsStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ImplementsStmtContext.prototype.constructor = ImplementsStmtContext;

ImplementsStmtContext.prototype.IMPLEMENTS = function() {
    return this.getToken(VisualBasic6Parser.IMPLEMENTS, 0);
};

ImplementsStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

ImplementsStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};




VisualBasic6Parser.ImplementsStmtContext = ImplementsStmtContext;

VisualBasic6Parser.prototype.implementsStmt = function() {

    var localctx = new ImplementsStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, VisualBasic6Parser.RULE_implementsStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1064;
        this.match(VisualBasic6Parser.IMPLEMENTS);
        this.state = 1065;
        this.match(VisualBasic6Parser.WS);
        this.state = 1066;
        this.ambiguousIdentifier();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InputStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_inputStmt;
    return this;
}

InputStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InputStmtContext.prototype.constructor = InputStmtContext;

InputStmtContext.prototype.INPUT = function() {
    return this.getToken(VisualBasic6Parser.INPUT, 0);
};

InputStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


InputStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

InputStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.InputStmtContext = InputStmtContext;

VisualBasic6Parser.prototype.inputStmt = function() {

    var localctx = new InputStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 92, VisualBasic6Parser.RULE_inputStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1068;
        this.match(VisualBasic6Parser.INPUT);
        this.state = 1069;
        this.match(VisualBasic6Parser.WS);
        this.state = 1070;
        this.valueStmt(0);
        this.state = 1079; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 1072;
        		_la = this._input.LA(1);
        		if(_la===VisualBasic6Parser.WS) {
        		    this.state = 1071;
        		    this.match(VisualBasic6Parser.WS);
        		}

        		this.state = 1074;
        		this.match(VisualBasic6Parser.COMMA);
        		this.state = 1076;
        		_la = this._input.LA(1);
        		if(_la===VisualBasic6Parser.WS) {
        		    this.state = 1075;
        		    this.match(VisualBasic6Parser.WS);
        		}

        		this.state = 1078;
        		this.valueStmt(0);
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 1081; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,133, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function KillStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_killStmt;
    return this;
}

KillStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
KillStmtContext.prototype.constructor = KillStmtContext;

KillStmtContext.prototype.KILL = function() {
    return this.getToken(VisualBasic6Parser.KILL, 0);
};

KillStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

KillStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.KillStmtContext = KillStmtContext;

VisualBasic6Parser.prototype.killStmt = function() {

    var localctx = new KillStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 94, VisualBasic6Parser.RULE_killStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1083;
        this.match(VisualBasic6Parser.KILL);
        this.state = 1084;
        this.match(VisualBasic6Parser.WS);
        this.state = 1085;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LetStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_letStmt;
    return this;
}

LetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LetStmtContext.prototype.constructor = LetStmtContext;

LetStmtContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

LetStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

LetStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

LetStmtContext.prototype.PLUS_EQ = function() {
    return this.getToken(VisualBasic6Parser.PLUS_EQ, 0);
};

LetStmtContext.prototype.MINUS_EQ = function() {
    return this.getToken(VisualBasic6Parser.MINUS_EQ, 0);
};

LetStmtContext.prototype.LET = function() {
    return this.getToken(VisualBasic6Parser.LET, 0);
};

LetStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.LetStmtContext = LetStmtContext;

VisualBasic6Parser.prototype.letStmt = function() {

    var localctx = new LetStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, VisualBasic6Parser.RULE_letStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1089;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,134,this._ctx);
        if(la_===1) {
            this.state = 1087;
            this.match(VisualBasic6Parser.LET);
            this.state = 1088;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 1091;
        this.implicitCallStmt_InStmt();
        this.state = 1093;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1092;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1095;
        _la = this._input.LA(1);
        if(!(((((_la - 182)) & ~0x1f) == 0 && ((1 << (_la - 182)) & ((1 << (VisualBasic6Parser.EQ - 182)) | (1 << (VisualBasic6Parser.MINUS_EQ - 182)) | (1 << (VisualBasic6Parser.PLUS_EQ - 182)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
        this.state = 1097;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1096;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1099;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LineInputStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_lineInputStmt;
    return this;
}

LineInputStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LineInputStmtContext.prototype.constructor = LineInputStmtContext;

LineInputStmtContext.prototype.LINE_INPUT = function() {
    return this.getToken(VisualBasic6Parser.LINE_INPUT, 0);
};

LineInputStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


LineInputStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

LineInputStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};




VisualBasic6Parser.LineInputStmtContext = LineInputStmtContext;

VisualBasic6Parser.prototype.lineInputStmt = function() {

    var localctx = new LineInputStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 98, VisualBasic6Parser.RULE_lineInputStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1101;
        this.match(VisualBasic6Parser.LINE_INPUT);
        this.state = 1102;
        this.match(VisualBasic6Parser.WS);
        this.state = 1103;
        this.valueStmt(0);
        this.state = 1105;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1104;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1107;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1109;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1108;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1111;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LoadStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_loadStmt;
    return this;
}

LoadStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LoadStmtContext.prototype.constructor = LoadStmtContext;

LoadStmtContext.prototype.LOAD = function() {
    return this.getToken(VisualBasic6Parser.LOAD, 0);
};

LoadStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

LoadStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.LoadStmtContext = LoadStmtContext;

VisualBasic6Parser.prototype.loadStmt = function() {

    var localctx = new LoadStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, VisualBasic6Parser.RULE_loadStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1113;
        this.match(VisualBasic6Parser.LOAD);
        this.state = 1114;
        this.match(VisualBasic6Parser.WS);
        this.state = 1115;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LockStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_lockStmt;
    return this;
}

LockStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LockStmtContext.prototype.constructor = LockStmtContext;

LockStmtContext.prototype.LOCK = function() {
    return this.getToken(VisualBasic6Parser.LOCK, 0);
};

LockStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


LockStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

LockStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};

LockStmtContext.prototype.TO = function() {
    return this.getToken(VisualBasic6Parser.TO, 0);
};




VisualBasic6Parser.LockStmtContext = LockStmtContext;

VisualBasic6Parser.prototype.lockStmt = function() {

    var localctx = new LockStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, VisualBasic6Parser.RULE_lockStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1117;
        this.match(VisualBasic6Parser.LOCK);
        this.state = 1118;
        this.match(VisualBasic6Parser.WS);
        this.state = 1119;
        this.valueStmt(0);
        this.state = 1134;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,142,this._ctx);
        if(la_===1) {
            this.state = 1121;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1120;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1123;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1125;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1124;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1127;
            this.valueStmt(0);
            this.state = 1132;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,141,this._ctx);
            if(la_===1) {
                this.state = 1128;
                this.match(VisualBasic6Parser.WS);
                this.state = 1129;
                this.match(VisualBasic6Parser.TO);
                this.state = 1130;
                this.match(VisualBasic6Parser.WS);
                this.state = 1131;
                this.valueStmt(0);

            }

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LsetStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_lsetStmt;
    return this;
}

LsetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LsetStmtContext.prototype.constructor = LsetStmtContext;

LsetStmtContext.prototype.LSET = function() {
    return this.getToken(VisualBasic6Parser.LSET, 0);
};

LsetStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


LsetStmtContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

LsetStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

LsetStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.LsetStmtContext = LsetStmtContext;

VisualBasic6Parser.prototype.lsetStmt = function() {

    var localctx = new LsetStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, VisualBasic6Parser.RULE_lsetStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1136;
        this.match(VisualBasic6Parser.LSET);
        this.state = 1137;
        this.match(VisualBasic6Parser.WS);
        this.state = 1138;
        this.implicitCallStmt_InStmt();
        this.state = 1140;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1139;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1142;
        this.match(VisualBasic6Parser.EQ);
        this.state = 1144;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1143;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1146;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MacroIfThenElseStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_macroIfThenElseStmt;
    return this;
}

MacroIfThenElseStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MacroIfThenElseStmtContext.prototype.constructor = MacroIfThenElseStmtContext;

MacroIfThenElseStmtContext.prototype.macroIfBlockStmt = function() {
    return this.getTypedRuleContext(MacroIfBlockStmtContext,0);
};

MacroIfThenElseStmtContext.prototype.MACRO_END_IF = function() {
    return this.getToken(VisualBasic6Parser.MACRO_END_IF, 0);
};

MacroIfThenElseStmtContext.prototype.macroElseIfBlockStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(MacroElseIfBlockStmtContext);
    } else {
        return this.getTypedRuleContext(MacroElseIfBlockStmtContext,i);
    }
};

MacroIfThenElseStmtContext.prototype.macroElseBlockStmt = function() {
    return this.getTypedRuleContext(MacroElseBlockStmtContext,0);
};




VisualBasic6Parser.MacroIfThenElseStmtContext = MacroIfThenElseStmtContext;

VisualBasic6Parser.prototype.macroIfThenElseStmt = function() {

    var localctx = new MacroIfThenElseStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, VisualBasic6Parser.RULE_macroIfThenElseStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1148;
        this.macroIfBlockStmt();
        this.state = 1152;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===VisualBasic6Parser.MACRO_ELSEIF) {
            this.state = 1149;
            this.macroElseIfBlockStmt();
            this.state = 1154;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1156;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.MACRO_ELSE) {
            this.state = 1155;
            this.macroElseBlockStmt();
        }

        this.state = 1158;
        this.match(VisualBasic6Parser.MACRO_END_IF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MacroIfBlockStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_macroIfBlockStmt;
    return this;
}

MacroIfBlockStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MacroIfBlockStmtContext.prototype.constructor = MacroIfBlockStmtContext;

MacroIfBlockStmtContext.prototype.MACRO_IF = function() {
    return this.getToken(VisualBasic6Parser.MACRO_IF, 0);
};

MacroIfBlockStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


MacroIfBlockStmtContext.prototype.ifConditionStmt = function() {
    return this.getTypedRuleContext(IfConditionStmtContext,0);
};

MacroIfBlockStmtContext.prototype.THEN = function() {
    return this.getToken(VisualBasic6Parser.THEN, 0);
};

MacroIfBlockStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


MacroIfBlockStmtContext.prototype.moduleBody = function() {
    return this.getTypedRuleContext(ModuleBodyContext,0);
};




VisualBasic6Parser.MacroIfBlockStmtContext = MacroIfBlockStmtContext;

VisualBasic6Parser.prototype.macroIfBlockStmt = function() {

    var localctx = new MacroIfBlockStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, VisualBasic6Parser.RULE_macroIfBlockStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1160;
        this.match(VisualBasic6Parser.MACRO_IF);
        this.state = 1161;
        this.match(VisualBasic6Parser.WS);
        this.state = 1162;
        this.ifConditionStmt();
        this.state = 1163;
        this.match(VisualBasic6Parser.WS);
        this.state = 1164;
        this.match(VisualBasic6Parser.THEN);
        this.state = 1166; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1165;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1168; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1176;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PROPERTY_GET - 98)) | (1 << (VisualBasic6Parser.PROPERTY_LET - 98)) | (1 << (VisualBasic6Parser.PROPERTY_SET - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 1170;
            this.moduleBody();
            this.state = 1172; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1171;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1174; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MacroElseIfBlockStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_macroElseIfBlockStmt;
    return this;
}

MacroElseIfBlockStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MacroElseIfBlockStmtContext.prototype.constructor = MacroElseIfBlockStmtContext;

MacroElseIfBlockStmtContext.prototype.MACRO_ELSEIF = function() {
    return this.getToken(VisualBasic6Parser.MACRO_ELSEIF, 0);
};

MacroElseIfBlockStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


MacroElseIfBlockStmtContext.prototype.ifConditionStmt = function() {
    return this.getTypedRuleContext(IfConditionStmtContext,0);
};

MacroElseIfBlockStmtContext.prototype.THEN = function() {
    return this.getToken(VisualBasic6Parser.THEN, 0);
};

MacroElseIfBlockStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


MacroElseIfBlockStmtContext.prototype.moduleBody = function() {
    return this.getTypedRuleContext(ModuleBodyContext,0);
};




VisualBasic6Parser.MacroElseIfBlockStmtContext = MacroElseIfBlockStmtContext;

VisualBasic6Parser.prototype.macroElseIfBlockStmt = function() {

    var localctx = new MacroElseIfBlockStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, VisualBasic6Parser.RULE_macroElseIfBlockStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1178;
        this.match(VisualBasic6Parser.MACRO_ELSEIF);
        this.state = 1179;
        this.match(VisualBasic6Parser.WS);
        this.state = 1180;
        this.ifConditionStmt();
        this.state = 1181;
        this.match(VisualBasic6Parser.WS);
        this.state = 1182;
        this.match(VisualBasic6Parser.THEN);
        this.state = 1184; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1183;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1186; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1194;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PROPERTY_GET - 98)) | (1 << (VisualBasic6Parser.PROPERTY_LET - 98)) | (1 << (VisualBasic6Parser.PROPERTY_SET - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 1188;
            this.moduleBody();
            this.state = 1190; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1189;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1192; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MacroElseBlockStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_macroElseBlockStmt;
    return this;
}

MacroElseBlockStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MacroElseBlockStmtContext.prototype.constructor = MacroElseBlockStmtContext;

MacroElseBlockStmtContext.prototype.MACRO_ELSE = function() {
    return this.getToken(VisualBasic6Parser.MACRO_ELSE, 0);
};

MacroElseBlockStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


MacroElseBlockStmtContext.prototype.moduleBody = function() {
    return this.getTypedRuleContext(ModuleBodyContext,0);
};




VisualBasic6Parser.MacroElseBlockStmtContext = MacroElseBlockStmtContext;

VisualBasic6Parser.prototype.macroElseBlockStmt = function() {

    var localctx = new MacroElseBlockStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, VisualBasic6Parser.RULE_macroElseBlockStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1196;
        this.match(VisualBasic6Parser.MACRO_ELSE);
        this.state = 1198; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1197;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1200; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1208;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PROPERTY_GET - 98)) | (1 << (VisualBasic6Parser.PROPERTY_LET - 98)) | (1 << (VisualBasic6Parser.PROPERTY_SET - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 1202;
            this.moduleBody();
            this.state = 1204; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1203;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1206; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MidStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_midStmt;
    return this;
}

MidStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MidStmtContext.prototype.constructor = MidStmtContext;

MidStmtContext.prototype.MID = function() {
    return this.getToken(VisualBasic6Parser.MID, 0);
};

MidStmtContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

MidStmtContext.prototype.argsCall = function() {
    return this.getTypedRuleContext(ArgsCallContext,0);
};

MidStmtContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

MidStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.MidStmtContext = MidStmtContext;

VisualBasic6Parser.prototype.midStmt = function() {

    var localctx = new MidStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, VisualBasic6Parser.RULE_midStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1210;
        this.match(VisualBasic6Parser.MID);
        this.state = 1212;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1211;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1214;
        this.match(VisualBasic6Parser.LPAREN);
        this.state = 1216;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,157,this._ctx);
        if(la_===1) {
            this.state = 1215;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 1218;
        this.argsCall();
        this.state = 1220;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1219;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1222;
        this.match(VisualBasic6Parser.RPAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MkdirStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_mkdirStmt;
    return this;
}

MkdirStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MkdirStmtContext.prototype.constructor = MkdirStmtContext;

MkdirStmtContext.prototype.MKDIR = function() {
    return this.getToken(VisualBasic6Parser.MKDIR, 0);
};

MkdirStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

MkdirStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.MkdirStmtContext = MkdirStmtContext;

VisualBasic6Parser.prototype.mkdirStmt = function() {

    var localctx = new MkdirStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 116, VisualBasic6Parser.RULE_mkdirStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1224;
        this.match(VisualBasic6Parser.MKDIR);
        this.state = 1225;
        this.match(VisualBasic6Parser.WS);
        this.state = 1226;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NameStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_nameStmt;
    return this;
}

NameStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NameStmtContext.prototype.constructor = NameStmtContext;

NameStmtContext.prototype.NAME = function() {
    return this.getToken(VisualBasic6Parser.NAME, 0);
};

NameStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


NameStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

NameStmtContext.prototype.AS = function() {
    return this.getToken(VisualBasic6Parser.AS, 0);
};




VisualBasic6Parser.NameStmtContext = NameStmtContext;

VisualBasic6Parser.prototype.nameStmt = function() {

    var localctx = new NameStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, VisualBasic6Parser.RULE_nameStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1228;
        this.match(VisualBasic6Parser.NAME);
        this.state = 1229;
        this.match(VisualBasic6Parser.WS);
        this.state = 1230;
        this.valueStmt(0);
        this.state = 1231;
        this.match(VisualBasic6Parser.WS);
        this.state = 1232;
        this.match(VisualBasic6Parser.AS);
        this.state = 1233;
        this.match(VisualBasic6Parser.WS);
        this.state = 1234;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OnErrorStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_onErrorStmt;
    return this;
}

OnErrorStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OnErrorStmtContext.prototype.constructor = OnErrorStmtContext;

OnErrorStmtContext.prototype.ON_ERROR = function() {
    return this.getToken(VisualBasic6Parser.ON_ERROR, 0);
};

OnErrorStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


OnErrorStmtContext.prototype.GOTO = function() {
    return this.getToken(VisualBasic6Parser.GOTO, 0);
};

OnErrorStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

OnErrorStmtContext.prototype.RESUME = function() {
    return this.getToken(VisualBasic6Parser.RESUME, 0);
};

OnErrorStmtContext.prototype.NEXT = function() {
    return this.getToken(VisualBasic6Parser.NEXT, 0);
};




VisualBasic6Parser.OnErrorStmtContext = OnErrorStmtContext;

VisualBasic6Parser.prototype.onErrorStmt = function() {

    var localctx = new OnErrorStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, VisualBasic6Parser.RULE_onErrorStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1236;
        this.match(VisualBasic6Parser.ON_ERROR);
        this.state = 1237;
        this.match(VisualBasic6Parser.WS);
        this.state = 1244;
        switch(this._input.LA(1)) {
        case VisualBasic6Parser.GOTO:
            this.state = 1238;
            this.match(VisualBasic6Parser.GOTO);
            this.state = 1239;
            this.match(VisualBasic6Parser.WS);
            this.state = 1240;
            this.valueStmt(0);
            break;
        case VisualBasic6Parser.RESUME:
            this.state = 1241;
            this.match(VisualBasic6Parser.RESUME);
            this.state = 1242;
            this.match(VisualBasic6Parser.WS);
            this.state = 1243;
            this.match(VisualBasic6Parser.NEXT);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OnGoToStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_onGoToStmt;
    return this;
}

OnGoToStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OnGoToStmtContext.prototype.constructor = OnGoToStmtContext;

OnGoToStmtContext.prototype.ON = function() {
    return this.getToken(VisualBasic6Parser.ON, 0);
};

OnGoToStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


OnGoToStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

OnGoToStmtContext.prototype.GOTO = function() {
    return this.getToken(VisualBasic6Parser.GOTO, 0);
};

OnGoToStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.OnGoToStmtContext = OnGoToStmtContext;

VisualBasic6Parser.prototype.onGoToStmt = function() {

    var localctx = new OnGoToStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 122, VisualBasic6Parser.RULE_onGoToStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1246;
        this.match(VisualBasic6Parser.ON);
        this.state = 1247;
        this.match(VisualBasic6Parser.WS);
        this.state = 1248;
        this.valueStmt(0);
        this.state = 1249;
        this.match(VisualBasic6Parser.WS);
        this.state = 1250;
        this.match(VisualBasic6Parser.GOTO);
        this.state = 1251;
        this.match(VisualBasic6Parser.WS);
        this.state = 1252;
        this.valueStmt(0);
        this.state = 1263;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,162,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1254;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1253;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1256;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 1258;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1257;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1260;
                this.valueStmt(0); 
            }
            this.state = 1265;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,162,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OnGoSubStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_onGoSubStmt;
    return this;
}

OnGoSubStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OnGoSubStmtContext.prototype.constructor = OnGoSubStmtContext;

OnGoSubStmtContext.prototype.ON = function() {
    return this.getToken(VisualBasic6Parser.ON, 0);
};

OnGoSubStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


OnGoSubStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

OnGoSubStmtContext.prototype.GOSUB = function() {
    return this.getToken(VisualBasic6Parser.GOSUB, 0);
};

OnGoSubStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.OnGoSubStmtContext = OnGoSubStmtContext;

VisualBasic6Parser.prototype.onGoSubStmt = function() {

    var localctx = new OnGoSubStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 124, VisualBasic6Parser.RULE_onGoSubStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1266;
        this.match(VisualBasic6Parser.ON);
        this.state = 1267;
        this.match(VisualBasic6Parser.WS);
        this.state = 1268;
        this.valueStmt(0);
        this.state = 1269;
        this.match(VisualBasic6Parser.WS);
        this.state = 1270;
        this.match(VisualBasic6Parser.GOSUB);
        this.state = 1271;
        this.match(VisualBasic6Parser.WS);
        this.state = 1272;
        this.valueStmt(0);
        this.state = 1283;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,165,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1274;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1273;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1276;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 1278;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1277;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1280;
                this.valueStmt(0); 
            }
            this.state = 1285;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,165,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OpenStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_openStmt;
    return this;
}

OpenStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OpenStmtContext.prototype.constructor = OpenStmtContext;

OpenStmtContext.prototype.OPEN = function() {
    return this.getToken(VisualBasic6Parser.OPEN, 0);
};

OpenStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


OpenStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

OpenStmtContext.prototype.FOR = function() {
    return this.getToken(VisualBasic6Parser.FOR, 0);
};

OpenStmtContext.prototype.AS = function() {
    return this.getToken(VisualBasic6Parser.AS, 0);
};

OpenStmtContext.prototype.APPEND = function() {
    return this.getToken(VisualBasic6Parser.APPEND, 0);
};

OpenStmtContext.prototype.BINARY = function() {
    return this.getToken(VisualBasic6Parser.BINARY, 0);
};

OpenStmtContext.prototype.INPUT = function() {
    return this.getToken(VisualBasic6Parser.INPUT, 0);
};

OpenStmtContext.prototype.OUTPUT = function() {
    return this.getToken(VisualBasic6Parser.OUTPUT, 0);
};

OpenStmtContext.prototype.RANDOM = function() {
    return this.getToken(VisualBasic6Parser.RANDOM, 0);
};

OpenStmtContext.prototype.ACCESS = function() {
    return this.getToken(VisualBasic6Parser.ACCESS, 0);
};

OpenStmtContext.prototype.LEN = function() {
    return this.getToken(VisualBasic6Parser.LEN, 0);
};

OpenStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

OpenStmtContext.prototype.READ = function() {
    return this.getToken(VisualBasic6Parser.READ, 0);
};

OpenStmtContext.prototype.WRITE = function() {
    return this.getToken(VisualBasic6Parser.WRITE, 0);
};

OpenStmtContext.prototype.READ_WRITE = function() {
    return this.getToken(VisualBasic6Parser.READ_WRITE, 0);
};

OpenStmtContext.prototype.SHARED = function() {
    return this.getToken(VisualBasic6Parser.SHARED, 0);
};

OpenStmtContext.prototype.LOCK_READ = function() {
    return this.getToken(VisualBasic6Parser.LOCK_READ, 0);
};

OpenStmtContext.prototype.LOCK_WRITE = function() {
    return this.getToken(VisualBasic6Parser.LOCK_WRITE, 0);
};

OpenStmtContext.prototype.LOCK_READ_WRITE = function() {
    return this.getToken(VisualBasic6Parser.LOCK_READ_WRITE, 0);
};




VisualBasic6Parser.OpenStmtContext = OpenStmtContext;

VisualBasic6Parser.prototype.openStmt = function() {

    var localctx = new OpenStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 126, VisualBasic6Parser.RULE_openStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1286;
        this.match(VisualBasic6Parser.OPEN);
        this.state = 1287;
        this.match(VisualBasic6Parser.WS);
        this.state = 1288;
        this.valueStmt(0);
        this.state = 1289;
        this.match(VisualBasic6Parser.WS);
        this.state = 1290;
        this.match(VisualBasic6Parser.FOR);
        this.state = 1291;
        this.match(VisualBasic6Parser.WS);
        this.state = 1292;
        _la = this._input.LA(1);
        if(!(_la===VisualBasic6Parser.APPEND || _la===VisualBasic6Parser.BINARY || _la===VisualBasic6Parser.INPUT || _la===VisualBasic6Parser.OUTPUT || _la===VisualBasic6Parser.RANDOM)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
        this.state = 1297;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,166,this._ctx);
        if(la_===1) {
            this.state = 1293;
            this.match(VisualBasic6Parser.WS);
            this.state = 1294;
            this.match(VisualBasic6Parser.ACCESS);
            this.state = 1295;
            this.match(VisualBasic6Parser.WS);
            this.state = 1296;
            _la = this._input.LA(1);
            if(!(_la===VisualBasic6Parser.READ || _la===VisualBasic6Parser.READ_WRITE || _la===VisualBasic6Parser.WRITE)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }

        }
        this.state = 1301;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,167,this._ctx);
        if(la_===1) {
            this.state = 1299;
            this.match(VisualBasic6Parser.WS);
            this.state = 1300;
            _la = this._input.LA(1);
            if(!(((((_la - 90)) & ~0x1f) == 0 && ((1 << (_la - 90)) & ((1 << (VisualBasic6Parser.LOCK_READ - 90)) | (1 << (VisualBasic6Parser.LOCK_WRITE - 90)) | (1 << (VisualBasic6Parser.LOCK_READ_WRITE - 90)))) !== 0) || _la===VisualBasic6Parser.SHARED)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }

        }
        this.state = 1303;
        this.match(VisualBasic6Parser.WS);
        this.state = 1304;
        this.match(VisualBasic6Parser.AS);
        this.state = 1305;
        this.match(VisualBasic6Parser.WS);
        this.state = 1306;
        this.valueStmt(0);
        this.state = 1317;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,170,this._ctx);
        if(la_===1) {
            this.state = 1307;
            this.match(VisualBasic6Parser.WS);
            this.state = 1308;
            this.match(VisualBasic6Parser.LEN);
            this.state = 1310;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1309;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1312;
            this.match(VisualBasic6Parser.EQ);
            this.state = 1314;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1313;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1316;
            this.valueStmt(0);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OutputListContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_outputList;
    return this;
}

OutputListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OutputListContext.prototype.constructor = OutputListContext;

OutputListContext.prototype.outputList_Expression = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(OutputList_ExpressionContext);
    } else {
        return this.getTypedRuleContext(OutputList_ExpressionContext,i);
    }
};

OutputListContext.prototype.SEMICOLON = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.SEMICOLON);
    } else {
        return this.getToken(VisualBasic6Parser.SEMICOLON, i);
    }
};


OutputListContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};


OutputListContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.OutputListContext = OutputListContext;

VisualBasic6Parser.prototype.outputList = function() {

    var localctx = new OutputListContext(this, this._ctx, this.state);
    this.enterRule(localctx, 128, VisualBasic6Parser.RULE_outputList);
    var _la = 0; // Token type
    try {
        this.state = 1352;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,180,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1319;
            this.outputList_Expression();
            this.state = 1332;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,174,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 1321;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1320;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 1323;
                    _la = this._input.LA(1);
                    if(!(_la===VisualBasic6Parser.COMMA || _la===VisualBasic6Parser.SEMICOLON)) {
                    this._errHandler.recoverInline(this);
                    }
                    else {
                        this.consume();
                    }
                    this.state = 1325;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input,172,this._ctx);
                    if(la_===1) {
                        this.state = 1324;
                        this.match(VisualBasic6Parser.WS);

                    }
                    this.state = 1328;
                    _la = this._input.LA(1);
                    if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)) | (1 << (VisualBasic6Parser.LPAREN - 162)) | (1 << (VisualBasic6Parser.MINUS - 162)))) !== 0) || ((((_la - 195)) & ~0x1f) == 0 && ((1 << (_la - 195)) & ((1 << (VisualBasic6Parser.PLUS - 195)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 195)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 195)) | (1 << (VisualBasic6Parser.DATELITERAL - 195)) | (1 << (VisualBasic6Parser.COLORLITERAL - 195)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 195)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 195)) | (1 << (VisualBasic6Parser.FILENUMBER - 195)) | (1 << (VisualBasic6Parser.IDENTIFIER - 195)))) !== 0)) {
                        this.state = 1327;
                        this.outputList_Expression();
                    }
             
                }
                this.state = 1334;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,174,this._ctx);
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1336;
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)) | (1 << (VisualBasic6Parser.LPAREN - 162)) | (1 << (VisualBasic6Parser.MINUS - 162)))) !== 0) || ((((_la - 195)) & ~0x1f) == 0 && ((1 << (_la - 195)) & ((1 << (VisualBasic6Parser.PLUS - 195)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 195)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 195)) | (1 << (VisualBasic6Parser.DATELITERAL - 195)) | (1 << (VisualBasic6Parser.COLORLITERAL - 195)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 195)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 195)) | (1 << (VisualBasic6Parser.FILENUMBER - 195)) | (1 << (VisualBasic6Parser.IDENTIFIER - 195)))) !== 0)) {
                this.state = 1335;
                this.outputList_Expression();
            }

            this.state = 1348; 
            this._errHandler.sync(this);
            var _alt = 1;
            do {
            	switch (_alt) {
            	case 1:
            		this.state = 1339;
            		_la = this._input.LA(1);
            		if(_la===VisualBasic6Parser.WS) {
            		    this.state = 1338;
            		    this.match(VisualBasic6Parser.WS);
            		}

            		this.state = 1341;
            		_la = this._input.LA(1);
            		if(!(_la===VisualBasic6Parser.COMMA || _la===VisualBasic6Parser.SEMICOLON)) {
            		this._errHandler.recoverInline(this);
            		}
            		else {
            		    this.consume();
            		}
            		this.state = 1343;
            		this._errHandler.sync(this);
            		var la_ = this._interp.adaptivePredict(this._input,177,this._ctx);
            		if(la_===1) {
            		    this.state = 1342;
            		    this.match(VisualBasic6Parser.WS);

            		}
            		this.state = 1346;
            		_la = this._input.LA(1);
            		if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)) | (1 << (VisualBasic6Parser.LPAREN - 162)) | (1 << (VisualBasic6Parser.MINUS - 162)))) !== 0) || ((((_la - 195)) & ~0x1f) == 0 && ((1 << (_la - 195)) & ((1 << (VisualBasic6Parser.PLUS - 195)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 195)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 195)) | (1 << (VisualBasic6Parser.DATELITERAL - 195)) | (1 << (VisualBasic6Parser.COLORLITERAL - 195)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 195)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 195)) | (1 << (VisualBasic6Parser.FILENUMBER - 195)) | (1 << (VisualBasic6Parser.IDENTIFIER - 195)))) !== 0)) {
            		    this.state = 1345;
            		    this.outputList_Expression();
            		}

            		break;
            	default:
            		throw new antlr4.error.NoViableAltException(this);
            	}
            	this.state = 1350; 
            	this._errHandler.sync(this);
            	_alt = this._interp.adaptivePredict(this._input,179, this._ctx);
            } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OutputList_ExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_outputList_Expression;
    return this;
}

OutputList_ExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OutputList_ExpressionContext.prototype.constructor = OutputList_ExpressionContext;

OutputList_ExpressionContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

OutputList_ExpressionContext.prototype.SPC = function() {
    return this.getToken(VisualBasic6Parser.SPC, 0);
};

OutputList_ExpressionContext.prototype.TAB = function() {
    return this.getToken(VisualBasic6Parser.TAB, 0);
};

OutputList_ExpressionContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

OutputList_ExpressionContext.prototype.argsCall = function() {
    return this.getTypedRuleContext(ArgsCallContext,0);
};

OutputList_ExpressionContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

OutputList_ExpressionContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.OutputList_ExpressionContext = OutputList_ExpressionContext;

VisualBasic6Parser.prototype.outputList_Expression = function() {

    var localctx = new OutputList_ExpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, VisualBasic6Parser.RULE_outputList_Expression);
    var _la = 0; // Token type
    try {
        this.state = 1371;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,185,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1354;
            this.valueStmt(0);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1355;
            _la = this._input.LA(1);
            if(!(_la===VisualBasic6Parser.SPC || _la===VisualBasic6Parser.TAB)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
            this.state = 1369;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,184,this._ctx);
            if(la_===1) {
                this.state = 1357;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1356;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1359;
                this.match(VisualBasic6Parser.LPAREN);
                this.state = 1361;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,182,this._ctx);
                if(la_===1) {
                    this.state = 1360;
                    this.match(VisualBasic6Parser.WS);

                }
                this.state = 1363;
                this.argsCall();
                this.state = 1365;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1364;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1367;
                this.match(VisualBasic6Parser.RPAREN);

            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PrintStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_printStmt;
    return this;
}

PrintStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PrintStmtContext.prototype.constructor = PrintStmtContext;

PrintStmtContext.prototype.PRINT = function() {
    return this.getToken(VisualBasic6Parser.PRINT, 0);
};

PrintStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


PrintStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

PrintStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};

PrintStmtContext.prototype.outputList = function() {
    return this.getTypedRuleContext(OutputListContext,0);
};




VisualBasic6Parser.PrintStmtContext = PrintStmtContext;

VisualBasic6Parser.prototype.printStmt = function() {

    var localctx = new PrintStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 132, VisualBasic6Parser.RULE_printStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1373;
        this.match(VisualBasic6Parser.PRINT);
        this.state = 1374;
        this.match(VisualBasic6Parser.WS);
        this.state = 1375;
        this.valueStmt(0);
        this.state = 1377;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1376;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1379;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1384;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,188,this._ctx);
        if(la_===1) {
            this.state = 1381;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,187,this._ctx);
            if(la_===1) {
                this.state = 1380;
                this.match(VisualBasic6Parser.WS);

            }
            this.state = 1383;
            this.outputList();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PropertyGetStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_propertyGetStmt;
    return this;
}

PropertyGetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PropertyGetStmtContext.prototype.constructor = PropertyGetStmtContext;

PropertyGetStmtContext.prototype.PROPERTY_GET = function() {
    return this.getToken(VisualBasic6Parser.PROPERTY_GET, 0);
};

PropertyGetStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


PropertyGetStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

PropertyGetStmtContext.prototype.END_PROPERTY = function() {
    return this.getToken(VisualBasic6Parser.END_PROPERTY, 0);
};

PropertyGetStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

PropertyGetStmtContext.prototype.STATIC = function() {
    return this.getToken(VisualBasic6Parser.STATIC, 0);
};

PropertyGetStmtContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

PropertyGetStmtContext.prototype.argList = function() {
    return this.getTypedRuleContext(ArgListContext,0);
};

PropertyGetStmtContext.prototype.asTypeClause = function() {
    return this.getTypedRuleContext(AsTypeClauseContext,0);
};

PropertyGetStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


PropertyGetStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.PropertyGetStmtContext = PropertyGetStmtContext;

VisualBasic6Parser.prototype.propertyGetStmt = function() {

    var localctx = new PropertyGetStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, VisualBasic6Parser.RULE_propertyGetStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1389;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 1386;
            this.visibility();
            this.state = 1387;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1393;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.STATIC) {
            this.state = 1391;
            this.match(VisualBasic6Parser.STATIC);
            this.state = 1392;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1395;
        this.match(VisualBasic6Parser.PROPERTY_GET);
        this.state = 1396;
        this.match(VisualBasic6Parser.WS);
        this.state = 1397;
        this.ambiguousIdentifier();
        this.state = 1399;
        _la = this._input.LA(1);
        if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
            this.state = 1398;
            this.typeHint();
        }

        this.state = 1405;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,193,this._ctx);
        if(la_===1) {
            this.state = 1402;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1401;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1404;
            this.argList();

        }
        this.state = 1409;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1407;
            this.match(VisualBasic6Parser.WS);
            this.state = 1408;
            this.asTypeClause();
        }

        this.state = 1412; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1411;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1414; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1422;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 1416;
            this.block();
            this.state = 1418; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1417;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1420; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

        this.state = 1424;
        this.match(VisualBasic6Parser.END_PROPERTY);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PropertySetStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_propertySetStmt;
    return this;
}

PropertySetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PropertySetStmtContext.prototype.constructor = PropertySetStmtContext;

PropertySetStmtContext.prototype.PROPERTY_SET = function() {
    return this.getToken(VisualBasic6Parser.PROPERTY_SET, 0);
};

PropertySetStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


PropertySetStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

PropertySetStmtContext.prototype.END_PROPERTY = function() {
    return this.getToken(VisualBasic6Parser.END_PROPERTY, 0);
};

PropertySetStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

PropertySetStmtContext.prototype.STATIC = function() {
    return this.getToken(VisualBasic6Parser.STATIC, 0);
};

PropertySetStmtContext.prototype.argList = function() {
    return this.getTypedRuleContext(ArgListContext,0);
};

PropertySetStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


PropertySetStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.PropertySetStmtContext = PropertySetStmtContext;

VisualBasic6Parser.prototype.propertySetStmt = function() {

    var localctx = new PropertySetStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, VisualBasic6Parser.RULE_propertySetStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1429;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 1426;
            this.visibility();
            this.state = 1427;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1433;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.STATIC) {
            this.state = 1431;
            this.match(VisualBasic6Parser.STATIC);
            this.state = 1432;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1435;
        this.match(VisualBasic6Parser.PROPERTY_SET);
        this.state = 1436;
        this.match(VisualBasic6Parser.WS);
        this.state = 1437;
        this.ambiguousIdentifier();
        this.state = 1442;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.LPAREN || _la===VisualBasic6Parser.WS) {
            this.state = 1439;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1438;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1441;
            this.argList();
        }

        this.state = 1445; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1444;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1447; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1455;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 1449;
            this.block();
            this.state = 1451; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1450;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1453; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

        this.state = 1457;
        this.match(VisualBasic6Parser.END_PROPERTY);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PropertyLetStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_propertyLetStmt;
    return this;
}

PropertyLetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PropertyLetStmtContext.prototype.constructor = PropertyLetStmtContext;

PropertyLetStmtContext.prototype.PROPERTY_LET = function() {
    return this.getToken(VisualBasic6Parser.PROPERTY_LET, 0);
};

PropertyLetStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


PropertyLetStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

PropertyLetStmtContext.prototype.END_PROPERTY = function() {
    return this.getToken(VisualBasic6Parser.END_PROPERTY, 0);
};

PropertyLetStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

PropertyLetStmtContext.prototype.STATIC = function() {
    return this.getToken(VisualBasic6Parser.STATIC, 0);
};

PropertyLetStmtContext.prototype.argList = function() {
    return this.getTypedRuleContext(ArgListContext,0);
};

PropertyLetStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


PropertyLetStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.PropertyLetStmtContext = PropertyLetStmtContext;

VisualBasic6Parser.prototype.propertyLetStmt = function() {

    var localctx = new PropertyLetStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, VisualBasic6Parser.RULE_propertyLetStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1462;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 1459;
            this.visibility();
            this.state = 1460;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1466;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.STATIC) {
            this.state = 1464;
            this.match(VisualBasic6Parser.STATIC);
            this.state = 1465;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1468;
        this.match(VisualBasic6Parser.PROPERTY_LET);
        this.state = 1469;
        this.match(VisualBasic6Parser.WS);
        this.state = 1470;
        this.ambiguousIdentifier();
        this.state = 1475;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.LPAREN || _la===VisualBasic6Parser.WS) {
            this.state = 1472;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1471;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1474;
            this.argList();
        }

        this.state = 1478; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1477;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1480; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1488;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 1482;
            this.block();
            this.state = 1484; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1483;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1486; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

        this.state = 1490;
        this.match(VisualBasic6Parser.END_PROPERTY);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PutStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_putStmt;
    return this;
}

PutStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PutStmtContext.prototype.constructor = PutStmtContext;

PutStmtContext.prototype.PUT = function() {
    return this.getToken(VisualBasic6Parser.PUT, 0);
};

PutStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


PutStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

PutStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.PutStmtContext = PutStmtContext;

VisualBasic6Parser.prototype.putStmt = function() {

    var localctx = new PutStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, VisualBasic6Parser.RULE_putStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1492;
        this.match(VisualBasic6Parser.PUT);
        this.state = 1493;
        this.match(VisualBasic6Parser.WS);
        this.state = 1494;
        this.valueStmt(0);
        this.state = 1496;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1495;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1498;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1500;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,213,this._ctx);
        if(la_===1) {
            this.state = 1499;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 1503;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)) | (1 << (VisualBasic6Parser.LPAREN - 162)) | (1 << (VisualBasic6Parser.MINUS - 162)))) !== 0) || ((((_la - 195)) & ~0x1f) == 0 && ((1 << (_la - 195)) & ((1 << (VisualBasic6Parser.PLUS - 195)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 195)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 195)) | (1 << (VisualBasic6Parser.DATELITERAL - 195)) | (1 << (VisualBasic6Parser.COLORLITERAL - 195)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 195)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 195)) | (1 << (VisualBasic6Parser.FILENUMBER - 195)) | (1 << (VisualBasic6Parser.IDENTIFIER - 195)))) !== 0)) {
            this.state = 1502;
            this.valueStmt(0);
        }

        this.state = 1506;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1505;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1508;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1510;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1509;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1512;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function RaiseEventStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_raiseEventStmt;
    return this;
}

RaiseEventStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RaiseEventStmtContext.prototype.constructor = RaiseEventStmtContext;

RaiseEventStmtContext.prototype.RAISEEVENT = function() {
    return this.getToken(VisualBasic6Parser.RAISEEVENT, 0);
};

RaiseEventStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


RaiseEventStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

RaiseEventStmtContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

RaiseEventStmtContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

RaiseEventStmtContext.prototype.argsCall = function() {
    return this.getTypedRuleContext(ArgsCallContext,0);
};




VisualBasic6Parser.RaiseEventStmtContext = RaiseEventStmtContext;

VisualBasic6Parser.prototype.raiseEventStmt = function() {

    var localctx = new RaiseEventStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, VisualBasic6Parser.RULE_raiseEventStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1514;
        this.match(VisualBasic6Parser.RAISEEVENT);
        this.state = 1515;
        this.match(VisualBasic6Parser.WS);
        this.state = 1516;
        this.ambiguousIdentifier();
        this.state = 1531;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,221,this._ctx);
        if(la_===1) {
            this.state = 1518;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1517;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1520;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 1522;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,218,this._ctx);
            if(la_===1) {
                this.state = 1521;
                this.match(VisualBasic6Parser.WS);

            }
            this.state = 1528;
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.COMMA - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)) | (1 << (VisualBasic6Parser.LPAREN - 162)) | (1 << (VisualBasic6Parser.MINUS - 162)))) !== 0) || ((((_la - 195)) & ~0x1f) == 0 && ((1 << (_la - 195)) & ((1 << (VisualBasic6Parser.PLUS - 195)) | (1 << (VisualBasic6Parser.SEMICOLON - 195)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 195)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 195)) | (1 << (VisualBasic6Parser.DATELITERAL - 195)) | (1 << (VisualBasic6Parser.COLORLITERAL - 195)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 195)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 195)) | (1 << (VisualBasic6Parser.FILENUMBER - 195)) | (1 << (VisualBasic6Parser.IDENTIFIER - 195)) | (1 << (VisualBasic6Parser.WS - 195)))) !== 0)) {
                this.state = 1524;
                this.argsCall();
                this.state = 1526;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1525;
                    this.match(VisualBasic6Parser.WS);
                }

            }

            this.state = 1530;
            this.match(VisualBasic6Parser.RPAREN);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function RandomizeStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_randomizeStmt;
    return this;
}

RandomizeStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RandomizeStmtContext.prototype.constructor = RandomizeStmtContext;

RandomizeStmtContext.prototype.RANDOMIZE = function() {
    return this.getToken(VisualBasic6Parser.RANDOMIZE, 0);
};

RandomizeStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

RandomizeStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.RandomizeStmtContext = RandomizeStmtContext;

VisualBasic6Parser.prototype.randomizeStmt = function() {

    var localctx = new RandomizeStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, VisualBasic6Parser.RULE_randomizeStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1533;
        this.match(VisualBasic6Parser.RANDOMIZE);
        this.state = 1536;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,222,this._ctx);
        if(la_===1) {
            this.state = 1534;
            this.match(VisualBasic6Parser.WS);
            this.state = 1535;
            this.valueStmt(0);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function RedimStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_redimStmt;
    return this;
}

RedimStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RedimStmtContext.prototype.constructor = RedimStmtContext;

RedimStmtContext.prototype.REDIM = function() {
    return this.getToken(VisualBasic6Parser.REDIM, 0);
};

RedimStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


RedimStmtContext.prototype.redimSubStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(RedimSubStmtContext);
    } else {
        return this.getTypedRuleContext(RedimSubStmtContext,i);
    }
};

RedimStmtContext.prototype.PRESERVE = function() {
    return this.getToken(VisualBasic6Parser.PRESERVE, 0);
};

RedimStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.RedimStmtContext = RedimStmtContext;

VisualBasic6Parser.prototype.redimStmt = function() {

    var localctx = new RedimStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, VisualBasic6Parser.RULE_redimStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1538;
        this.match(VisualBasic6Parser.REDIM);
        this.state = 1539;
        this.match(VisualBasic6Parser.WS);
        this.state = 1542;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,223,this._ctx);
        if(la_===1) {
            this.state = 1540;
            this.match(VisualBasic6Parser.PRESERVE);
            this.state = 1541;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 1544;
        this.redimSubStmt();
        this.state = 1555;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,226,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 1546;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1545;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1548;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 1550;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1549;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1552;
                this.redimSubStmt(); 
            }
            this.state = 1557;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,226,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function RedimSubStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_redimSubStmt;
    return this;
}

RedimSubStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RedimSubStmtContext.prototype.constructor = RedimSubStmtContext;

RedimSubStmtContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

RedimSubStmtContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

RedimSubStmtContext.prototype.subscripts = function() {
    return this.getTypedRuleContext(SubscriptsContext,0);
};

RedimSubStmtContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

RedimSubStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


RedimSubStmtContext.prototype.asTypeClause = function() {
    return this.getTypedRuleContext(AsTypeClauseContext,0);
};




VisualBasic6Parser.RedimSubStmtContext = RedimSubStmtContext;

VisualBasic6Parser.prototype.redimSubStmt = function() {

    var localctx = new RedimSubStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, VisualBasic6Parser.RULE_redimSubStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1558;
        this.implicitCallStmt_InStmt();
        this.state = 1560;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1559;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1562;
        this.match(VisualBasic6Parser.LPAREN);
        this.state = 1564;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1563;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1566;
        this.subscripts();
        this.state = 1568;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1567;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1570;
        this.match(VisualBasic6Parser.RPAREN);
        this.state = 1573;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,230,this._ctx);
        if(la_===1) {
            this.state = 1571;
            this.match(VisualBasic6Parser.WS);
            this.state = 1572;
            this.asTypeClause();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ResetStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_resetStmt;
    return this;
}

ResetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ResetStmtContext.prototype.constructor = ResetStmtContext;

ResetStmtContext.prototype.RESET = function() {
    return this.getToken(VisualBasic6Parser.RESET, 0);
};




VisualBasic6Parser.ResetStmtContext = ResetStmtContext;

VisualBasic6Parser.prototype.resetStmt = function() {

    var localctx = new ResetStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, VisualBasic6Parser.RULE_resetStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1575;
        this.match(VisualBasic6Parser.RESET);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ResumeStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_resumeStmt;
    return this;
}

ResumeStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ResumeStmtContext.prototype.constructor = ResumeStmtContext;

ResumeStmtContext.prototype.RESUME = function() {
    return this.getToken(VisualBasic6Parser.RESUME, 0);
};

ResumeStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

ResumeStmtContext.prototype.NEXT = function() {
    return this.getToken(VisualBasic6Parser.NEXT, 0);
};

ResumeStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};




VisualBasic6Parser.ResumeStmtContext = ResumeStmtContext;

VisualBasic6Parser.prototype.resumeStmt = function() {

    var localctx = new ResumeStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, VisualBasic6Parser.RULE_resumeStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1577;
        this.match(VisualBasic6Parser.RESUME);
        this.state = 1583;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,232,this._ctx);
        if(la_===1) {
            this.state = 1578;
            this.match(VisualBasic6Parser.WS);
            this.state = 1581;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,231,this._ctx);
            switch(la_) {
            case 1:
                this.state = 1579;
                this.match(VisualBasic6Parser.NEXT);
                break;

            case 2:
                this.state = 1580;
                this.ambiguousIdentifier();
                break;

            }

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ReturnStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_returnStmt;
    return this;
}

ReturnStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ReturnStmtContext.prototype.constructor = ReturnStmtContext;

ReturnStmtContext.prototype.RETURN = function() {
    return this.getToken(VisualBasic6Parser.RETURN, 0);
};




VisualBasic6Parser.ReturnStmtContext = ReturnStmtContext;

VisualBasic6Parser.prototype.returnStmt = function() {

    var localctx = new ReturnStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, VisualBasic6Parser.RULE_returnStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1585;
        this.match(VisualBasic6Parser.RETURN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function RmdirStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_rmdirStmt;
    return this;
}

RmdirStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RmdirStmtContext.prototype.constructor = RmdirStmtContext;

RmdirStmtContext.prototype.RMDIR = function() {
    return this.getToken(VisualBasic6Parser.RMDIR, 0);
};

RmdirStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

RmdirStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.RmdirStmtContext = RmdirStmtContext;

VisualBasic6Parser.prototype.rmdirStmt = function() {

    var localctx = new RmdirStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, VisualBasic6Parser.RULE_rmdirStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1587;
        this.match(VisualBasic6Parser.RMDIR);
        this.state = 1588;
        this.match(VisualBasic6Parser.WS);
        this.state = 1589;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function RsetStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_rsetStmt;
    return this;
}

RsetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RsetStmtContext.prototype.constructor = RsetStmtContext;

RsetStmtContext.prototype.RSET = function() {
    return this.getToken(VisualBasic6Parser.RSET, 0);
};

RsetStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


RsetStmtContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

RsetStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

RsetStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.RsetStmtContext = RsetStmtContext;

VisualBasic6Parser.prototype.rsetStmt = function() {

    var localctx = new RsetStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, VisualBasic6Parser.RULE_rsetStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1591;
        this.match(VisualBasic6Parser.RSET);
        this.state = 1592;
        this.match(VisualBasic6Parser.WS);
        this.state = 1593;
        this.implicitCallStmt_InStmt();
        this.state = 1595;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1594;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1597;
        this.match(VisualBasic6Parser.EQ);
        this.state = 1599;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1598;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1601;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SavepictureStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_savepictureStmt;
    return this;
}

SavepictureStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SavepictureStmtContext.prototype.constructor = SavepictureStmtContext;

SavepictureStmtContext.prototype.SAVEPICTURE = function() {
    return this.getToken(VisualBasic6Parser.SAVEPICTURE, 0);
};

SavepictureStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SavepictureStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

SavepictureStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};




VisualBasic6Parser.SavepictureStmtContext = SavepictureStmtContext;

VisualBasic6Parser.prototype.savepictureStmt = function() {

    var localctx = new SavepictureStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, VisualBasic6Parser.RULE_savepictureStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1603;
        this.match(VisualBasic6Parser.SAVEPICTURE);
        this.state = 1604;
        this.match(VisualBasic6Parser.WS);
        this.state = 1605;
        this.valueStmt(0);
        this.state = 1607;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1606;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1609;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1611;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1610;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1613;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SaveSettingStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_saveSettingStmt;
    return this;
}

SaveSettingStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SaveSettingStmtContext.prototype.constructor = SaveSettingStmtContext;

SaveSettingStmtContext.prototype.SAVESETTING = function() {
    return this.getToken(VisualBasic6Parser.SAVESETTING, 0);
};

SaveSettingStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SaveSettingStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

SaveSettingStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.SaveSettingStmtContext = SaveSettingStmtContext;

VisualBasic6Parser.prototype.saveSettingStmt = function() {

    var localctx = new SaveSettingStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, VisualBasic6Parser.RULE_saveSettingStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1615;
        this.match(VisualBasic6Parser.SAVESETTING);
        this.state = 1616;
        this.match(VisualBasic6Parser.WS);
        this.state = 1617;
        this.valueStmt(0);
        this.state = 1619;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1618;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1621;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1623;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1622;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1625;
        this.valueStmt(0);
        this.state = 1627;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1626;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1629;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1631;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1630;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1633;
        this.valueStmt(0);
        this.state = 1635;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1634;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1637;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1639;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1638;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1641;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SeekStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_seekStmt;
    return this;
}

SeekStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SeekStmtContext.prototype.constructor = SeekStmtContext;

SeekStmtContext.prototype.SEEK = function() {
    return this.getToken(VisualBasic6Parser.SEEK, 0);
};

SeekStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SeekStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

SeekStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};




VisualBasic6Parser.SeekStmtContext = SeekStmtContext;

VisualBasic6Parser.prototype.seekStmt = function() {

    var localctx = new SeekStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 164, VisualBasic6Parser.RULE_seekStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1643;
        this.match(VisualBasic6Parser.SEEK);
        this.state = 1644;
        this.match(VisualBasic6Parser.WS);
        this.state = 1645;
        this.valueStmt(0);
        this.state = 1647;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1646;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1649;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1651;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1650;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1653;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SelectCaseStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_selectCaseStmt;
    return this;
}

SelectCaseStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelectCaseStmtContext.prototype.constructor = SelectCaseStmtContext;

SelectCaseStmtContext.prototype.SELECT = function() {
    return this.getToken(VisualBasic6Parser.SELECT, 0);
};

SelectCaseStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SelectCaseStmtContext.prototype.CASE = function() {
    return this.getToken(VisualBasic6Parser.CASE, 0);
};

SelectCaseStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

SelectCaseStmtContext.prototype.END_SELECT = function() {
    return this.getToken(VisualBasic6Parser.END_SELECT, 0);
};

SelectCaseStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


SelectCaseStmtContext.prototype.sC_Case = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(SC_CaseContext);
    } else {
        return this.getTypedRuleContext(SC_CaseContext,i);
    }
};




VisualBasic6Parser.SelectCaseStmtContext = SelectCaseStmtContext;

VisualBasic6Parser.prototype.selectCaseStmt = function() {

    var localctx = new SelectCaseStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, VisualBasic6Parser.RULE_selectCaseStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1655;
        this.match(VisualBasic6Parser.SELECT);
        this.state = 1656;
        this.match(VisualBasic6Parser.WS);
        this.state = 1657;
        this.match(VisualBasic6Parser.CASE);
        this.state = 1658;
        this.match(VisualBasic6Parser.WS);
        this.state = 1659;
        this.valueStmt(0);
        this.state = 1661; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1660;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1663; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1668;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while(_la===VisualBasic6Parser.CASE) {
            this.state = 1665;
            this.sC_Case();
            this.state = 1670;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1672;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1671;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1674;
        this.match(VisualBasic6Parser.END_SELECT);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SC_CaseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_sC_Case;
    return this;
}

SC_CaseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SC_CaseContext.prototype.constructor = SC_CaseContext;

SC_CaseContext.prototype.CASE = function() {
    return this.getToken(VisualBasic6Parser.CASE, 0);
};

SC_CaseContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SC_CaseContext.prototype.sC_Cond = function() {
    return this.getTypedRuleContext(SC_CondContext,0);
};

SC_CaseContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};

SC_CaseContext.prototype.COLON = function() {
    return this.getToken(VisualBasic6Parser.COLON, 0);
};

SC_CaseContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};





VisualBasic6Parser.SC_CaseContext = SC_CaseContext;

VisualBasic6Parser.prototype.sC_Case = function() {

    var localctx = new SC_CaseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, VisualBasic6Parser.RULE_sC_Case);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1676;
        this.match(VisualBasic6Parser.CASE);
        this.state = 1677;
        this.match(VisualBasic6Parser.WS);
        this.state = 1678;
        this.sC_Cond();
        this.state = 1680;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,248,this._ctx);
        if(la_===1) {
            this.state = 1679;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 1696;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,252,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1683;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.COLON) {
                this.state = 1682;
                this.match(VisualBasic6Parser.COLON);
            }

            this.state = 1688;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===VisualBasic6Parser.NEWLINE) {
                this.state = 1685;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1690;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;

        case 2:
            this.state = 1692; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1691;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1694; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
            break;

        }
        this.state = 1704;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,254,this._ctx);
        if(la_===1) {
            this.state = 1698;
            this.block();
            this.state = 1700; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1699;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1702; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SC_CondContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_sC_Cond;
    return this;
}

SC_CondContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SC_CondContext.prototype.constructor = SC_CondContext;


 
SC_CondContext.prototype.copyFrom = function(ctx) {
    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);
};


function CaseCondValueContext(parser, ctx) {
	SC_CondContext.call(this, parser);
    SC_CondContext.prototype.copyFrom.call(this, ctx);
    return this;
}

CaseCondValueContext.prototype = Object.create(SC_CondContext.prototype);
CaseCondValueContext.prototype.constructor = CaseCondValueContext;

VisualBasic6Parser.CaseCondValueContext = CaseCondValueContext;

CaseCondValueContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

CaseCondValueContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};


CaseCondValueContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function CaseCondToContext(parser, ctx) {
	SC_CondContext.call(this, parser);
    SC_CondContext.prototype.copyFrom.call(this, ctx);
    return this;
}

CaseCondToContext.prototype = Object.create(SC_CondContext.prototype);
CaseCondToContext.prototype.constructor = CaseCondToContext;

VisualBasic6Parser.CaseCondToContext = CaseCondToContext;

CaseCondToContext.prototype.INTEGERLITERAL = function() {
    return this.getToken(VisualBasic6Parser.INTEGERLITERAL, 0);
};

CaseCondToContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


CaseCondToContext.prototype.TO = function() {
    return this.getToken(VisualBasic6Parser.TO, 0);
};

CaseCondToContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

CaseCondToContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};


function CaseCondIsContext(parser, ctx) {
	SC_CondContext.call(this, parser);
    SC_CondContext.prototype.copyFrom.call(this, ctx);
    return this;
}

CaseCondIsContext.prototype = Object.create(SC_CondContext.prototype);
CaseCondIsContext.prototype.constructor = CaseCondIsContext;

VisualBasic6Parser.CaseCondIsContext = CaseCondIsContext;

CaseCondIsContext.prototype.IS = function() {
    return this.getToken(VisualBasic6Parser.IS, 0);
};

CaseCondIsContext.prototype.comparisonOperator = function() {
    return this.getTypedRuleContext(ComparisonOperatorContext,0);
};

CaseCondIsContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

CaseCondIsContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function CaseCondElseContext(parser, ctx) {
	SC_CondContext.call(this, parser);
    SC_CondContext.prototype.copyFrom.call(this, ctx);
    return this;
}

CaseCondElseContext.prototype = Object.create(SC_CondContext.prototype);
CaseCondElseContext.prototype.constructor = CaseCondElseContext;

VisualBasic6Parser.CaseCondElseContext = CaseCondElseContext;

CaseCondElseContext.prototype.ELSE = function() {
    return this.getToken(VisualBasic6Parser.ELSE, 0);
};


VisualBasic6Parser.SC_CondContext = SC_CondContext;

VisualBasic6Parser.prototype.sC_Cond = function() {

    var localctx = new SC_CondContext(this, this._ctx, this.state);
    this.enterRule(localctx, 170, VisualBasic6Parser.RULE_sC_Cond);
    var _la = 0; // Token type
    try {
        this.state = 1749;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,263,this._ctx);
        switch(la_) {
        case 1:
            localctx = new CaseCondElseContext(this, localctx);
            this.enterOuterAlt(localctx, 1);
            this.state = 1706;
            this.match(VisualBasic6Parser.ELSE);
            break;

        case 2:
            localctx = new CaseCondIsContext(this, localctx);
            this.enterOuterAlt(localctx, 2);
            this.state = 1707;
            this.match(VisualBasic6Parser.IS);
            this.state = 1709;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1708;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1711;
            this.comparisonOperator();
            this.state = 1713;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1712;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1715;
            this.valueStmt(0);
            break;

        case 3:
            localctx = new CaseCondValueContext(this, localctx);
            this.enterOuterAlt(localctx, 3);
            this.state = 1717;
            this.valueStmt(0);
            this.state = 1728;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,259,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 1719;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1718;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 1721;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 1723;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1722;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 1725;
                    this.valueStmt(0); 
                }
                this.state = 1730;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,259,this._ctx);
            }

            break;

        case 4:
            localctx = new CaseCondToContext(this, localctx);
            this.enterOuterAlt(localctx, 4);
            this.state = 1731;
            this.match(VisualBasic6Parser.INTEGERLITERAL);
            this.state = 1732;
            this.match(VisualBasic6Parser.WS);
            this.state = 1733;
            this.match(VisualBasic6Parser.TO);
            this.state = 1734;
            this.match(VisualBasic6Parser.WS);
            this.state = 1735;
            this.valueStmt(0);
            this.state = 1746;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,262,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 1737;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1736;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 1739;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 1741;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1740;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 1743;
                    this.valueStmt(0); 
                }
                this.state = 1748;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,262,this._ctx);
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SendkeysStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_sendkeysStmt;
    return this;
}

SendkeysStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SendkeysStmtContext.prototype.constructor = SendkeysStmtContext;

SendkeysStmtContext.prototype.SENDKEYS = function() {
    return this.getToken(VisualBasic6Parser.SENDKEYS, 0);
};

SendkeysStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SendkeysStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

SendkeysStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};




VisualBasic6Parser.SendkeysStmtContext = SendkeysStmtContext;

VisualBasic6Parser.prototype.sendkeysStmt = function() {

    var localctx = new SendkeysStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, VisualBasic6Parser.RULE_sendkeysStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1751;
        this.match(VisualBasic6Parser.SENDKEYS);
        this.state = 1752;
        this.match(VisualBasic6Parser.WS);
        this.state = 1753;
        this.valueStmt(0);
        this.state = 1762;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,266,this._ctx);
        if(la_===1) {
            this.state = 1755;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1754;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1757;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1759;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1758;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1761;
            this.valueStmt(0);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SetattrStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_setattrStmt;
    return this;
}

SetattrStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SetattrStmtContext.prototype.constructor = SetattrStmtContext;

SetattrStmtContext.prototype.SETATTR = function() {
    return this.getToken(VisualBasic6Parser.SETATTR, 0);
};

SetattrStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SetattrStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

SetattrStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};




VisualBasic6Parser.SetattrStmtContext = SetattrStmtContext;

VisualBasic6Parser.prototype.setattrStmt = function() {

    var localctx = new SetattrStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, VisualBasic6Parser.RULE_setattrStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1764;
        this.match(VisualBasic6Parser.SETATTR);
        this.state = 1765;
        this.match(VisualBasic6Parser.WS);
        this.state = 1766;
        this.valueStmt(0);
        this.state = 1768;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1767;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1770;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 1772;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1771;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1774;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SetStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_setStmt;
    return this;
}

SetStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SetStmtContext.prototype.constructor = SetStmtContext;

SetStmtContext.prototype.SET = function() {
    return this.getToken(VisualBasic6Parser.SET, 0);
};

SetStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SetStmtContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

SetStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

SetStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.SetStmtContext = SetStmtContext;

VisualBasic6Parser.prototype.setStmt = function() {

    var localctx = new SetStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, VisualBasic6Parser.RULE_setStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1776;
        this.match(VisualBasic6Parser.SET);
        this.state = 1777;
        this.match(VisualBasic6Parser.WS);
        this.state = 1778;
        this.implicitCallStmt_InStmt();
        this.state = 1780;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1779;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1782;
        this.match(VisualBasic6Parser.EQ);
        this.state = 1784;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1783;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1786;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function StopStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_stopStmt;
    return this;
}

StopStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StopStmtContext.prototype.constructor = StopStmtContext;

StopStmtContext.prototype.STOP = function() {
    return this.getToken(VisualBasic6Parser.STOP, 0);
};




VisualBasic6Parser.StopStmtContext = StopStmtContext;

VisualBasic6Parser.prototype.stopStmt = function() {

    var localctx = new StopStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, VisualBasic6Parser.RULE_stopStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1788;
        this.match(VisualBasic6Parser.STOP);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SubStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_subStmt;
    return this;
}

SubStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SubStmtContext.prototype.constructor = SubStmtContext;

SubStmtContext.prototype.SUB = function() {
    return this.getToken(VisualBasic6Parser.SUB, 0);
};

SubStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SubStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

SubStmtContext.prototype.END_SUB = function() {
    return this.getToken(VisualBasic6Parser.END_SUB, 0);
};

SubStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

SubStmtContext.prototype.STATIC = function() {
    return this.getToken(VisualBasic6Parser.STATIC, 0);
};

SubStmtContext.prototype.argList = function() {
    return this.getTypedRuleContext(ArgListContext,0);
};

SubStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


SubStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.SubStmtContext = SubStmtContext;

VisualBasic6Parser.prototype.subStmt = function() {

    var localctx = new SubStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, VisualBasic6Parser.RULE_subStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1793;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 1790;
            this.visibility();
            this.state = 1791;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1797;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.STATIC) {
            this.state = 1795;
            this.match(VisualBasic6Parser.STATIC);
            this.state = 1796;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1799;
        this.match(VisualBasic6Parser.SUB);
        this.state = 1800;
        this.match(VisualBasic6Parser.WS);
        this.state = 1801;
        this.ambiguousIdentifier();
        this.state = 1806;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.LPAREN || _la===VisualBasic6Parser.WS) {
            this.state = 1803;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1802;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1805;
            this.argList();
        }

        this.state = 1809; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1808;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1811; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1819;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 1813;
            this.block();
            this.state = 1815; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 1814;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 1817; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

        this.state = 1821;
        this.match(VisualBasic6Parser.END_SUB);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TimeStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_timeStmt;
    return this;
}

TimeStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TimeStmtContext.prototype.constructor = TimeStmtContext;

TimeStmtContext.prototype.TIME = function() {
    return this.getToken(VisualBasic6Parser.TIME, 0);
};

TimeStmtContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

TimeStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

TimeStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.TimeStmtContext = TimeStmtContext;

VisualBasic6Parser.prototype.timeStmt = function() {

    var localctx = new TimeStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, VisualBasic6Parser.RULE_timeStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1823;
        this.match(VisualBasic6Parser.TIME);
        this.state = 1825;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1824;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1827;
        this.match(VisualBasic6Parser.EQ);
        this.state = 1829;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1828;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1831;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_typeStmt;
    return this;
}

TypeStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeStmtContext.prototype.constructor = TypeStmtContext;

TypeStmtContext.prototype.TYPE = function() {
    return this.getToken(VisualBasic6Parser.TYPE, 0);
};

TypeStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


TypeStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

TypeStmtContext.prototype.END_TYPE = function() {
    return this.getToken(VisualBasic6Parser.END_TYPE, 0);
};

TypeStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

TypeStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


TypeStmtContext.prototype.typeStmt_Element = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypeStmt_ElementContext);
    } else {
        return this.getTypedRuleContext(TypeStmt_ElementContext,i);
    }
};




VisualBasic6Parser.TypeStmtContext = TypeStmtContext;

VisualBasic6Parser.prototype.typeStmt = function() {

    var localctx = new TypeStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 184, VisualBasic6Parser.RULE_typeStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1836;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC) {
            this.state = 1833;
            this.visibility();
            this.state = 1834;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 1838;
        this.match(VisualBasic6Parser.TYPE);
        this.state = 1839;
        this.match(VisualBasic6Parser.WS);
        this.state = 1840;
        this.ambiguousIdentifier();
        this.state = 1842; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1841;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1844; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 1849;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 1846;
            this.typeStmt_Element();
            this.state = 1851;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        }
        this.state = 1852;
        this.match(VisualBasic6Parser.END_TYPE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeStmt_ElementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_typeStmt_Element;
    return this;
}

TypeStmt_ElementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeStmt_ElementContext.prototype.constructor = TypeStmt_ElementContext;

TypeStmt_ElementContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

TypeStmt_ElementContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

TypeStmt_ElementContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

TypeStmt_ElementContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


TypeStmt_ElementContext.prototype.asTypeClause = function() {
    return this.getTypedRuleContext(AsTypeClauseContext,0);
};

TypeStmt_ElementContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


TypeStmt_ElementContext.prototype.subscripts = function() {
    return this.getTypedRuleContext(SubscriptsContext,0);
};




VisualBasic6Parser.TypeStmt_ElementContext = TypeStmt_ElementContext;

VisualBasic6Parser.prototype.typeStmt_Element = function() {

    var localctx = new TypeStmt_ElementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, VisualBasic6Parser.RULE_typeStmt_Element);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1854;
        this.ambiguousIdentifier();
        this.state = 1869;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,287,this._ctx);
        if(la_===1) {
            this.state = 1856;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1855;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1858;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 1863;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,285,this._ctx);
            if(la_===1) {
                this.state = 1860;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1859;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1862;
                this.subscripts();

            }
            this.state = 1866;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1865;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1868;
            this.match(VisualBasic6Parser.RPAREN);

        }
        this.state = 1873;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 1871;
            this.match(VisualBasic6Parser.WS);
            this.state = 1872;
            this.asTypeClause();
        }

        this.state = 1876; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 1875;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 1878; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeOfStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_typeOfStmt;
    return this;
}

TypeOfStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeOfStmtContext.prototype.constructor = TypeOfStmtContext;

TypeOfStmtContext.prototype.TYPEOF = function() {
    return this.getToken(VisualBasic6Parser.TYPEOF, 0);
};

TypeOfStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


TypeOfStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

TypeOfStmtContext.prototype.IS = function() {
    return this.getToken(VisualBasic6Parser.IS, 0);
};

TypeOfStmtContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};




VisualBasic6Parser.TypeOfStmtContext = TypeOfStmtContext;

VisualBasic6Parser.prototype.typeOfStmt = function() {

    var localctx = new TypeOfStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 188, VisualBasic6Parser.RULE_typeOfStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1880;
        this.match(VisualBasic6Parser.TYPEOF);
        this.state = 1881;
        this.match(VisualBasic6Parser.WS);
        this.state = 1882;
        this.valueStmt(0);
        this.state = 1887;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,290,this._ctx);
        if(la_===1) {
            this.state = 1883;
            this.match(VisualBasic6Parser.WS);
            this.state = 1884;
            this.match(VisualBasic6Parser.IS);
            this.state = 1885;
            this.match(VisualBasic6Parser.WS);
            this.state = 1886;
            this.type();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UnloadStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_unloadStmt;
    return this;
}

UnloadStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnloadStmtContext.prototype.constructor = UnloadStmtContext;

UnloadStmtContext.prototype.UNLOAD = function() {
    return this.getToken(VisualBasic6Parser.UNLOAD, 0);
};

UnloadStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

UnloadStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};




VisualBasic6Parser.UnloadStmtContext = UnloadStmtContext;

VisualBasic6Parser.prototype.unloadStmt = function() {

    var localctx = new UnloadStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 190, VisualBasic6Parser.RULE_unloadStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1889;
        this.match(VisualBasic6Parser.UNLOAD);
        this.state = 1890;
        this.match(VisualBasic6Parser.WS);
        this.state = 1891;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UnlockStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_unlockStmt;
    return this;
}

UnlockStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnlockStmtContext.prototype.constructor = UnlockStmtContext;

UnlockStmtContext.prototype.UNLOCK = function() {
    return this.getToken(VisualBasic6Parser.UNLOCK, 0);
};

UnlockStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


UnlockStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

UnlockStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};

UnlockStmtContext.prototype.TO = function() {
    return this.getToken(VisualBasic6Parser.TO, 0);
};




VisualBasic6Parser.UnlockStmtContext = UnlockStmtContext;

VisualBasic6Parser.prototype.unlockStmt = function() {

    var localctx = new UnlockStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 192, VisualBasic6Parser.RULE_unlockStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1893;
        this.match(VisualBasic6Parser.UNLOCK);
        this.state = 1894;
        this.match(VisualBasic6Parser.WS);
        this.state = 1895;
        this.valueStmt(0);
        this.state = 1910;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,294,this._ctx);
        if(la_===1) {
            this.state = 1897;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1896;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1899;
            this.match(VisualBasic6Parser.COMMA);
            this.state = 1901;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1900;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1903;
            this.valueStmt(0);
            this.state = 1908;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,293,this._ctx);
            if(la_===1) {
                this.state = 1904;
                this.match(VisualBasic6Parser.WS);
                this.state = 1905;
                this.match(VisualBasic6Parser.TO);
                this.state = 1906;
                this.match(VisualBasic6Parser.WS);
                this.state = 1907;
                this.valueStmt(0);

            }

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ValueStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_valueStmt;
    return this;
}

ValueStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ValueStmtContext.prototype.constructor = ValueStmtContext;


 
ValueStmtContext.prototype.copyFrom = function(ctx) {
    antlr4.ParserRuleContext.prototype.copyFrom.call(this, ctx);
};

function VsStructContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsStructContext.prototype = Object.create(ValueStmtContext.prototype);
VsStructContext.prototype.constructor = VsStructContext;

VisualBasic6Parser.VsStructContext = VsStructContext;

VsStructContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

VsStructContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsStructContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

VsStructContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


VsStructContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};


function VsAddContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsAddContext.prototype = Object.create(ValueStmtContext.prototype);
VsAddContext.prototype.constructor = VsAddContext;

VisualBasic6Parser.VsAddContext = VsAddContext;

VsAddContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsAddContext.prototype.PLUS = function() {
    return this.getToken(VisualBasic6Parser.PLUS, 0);
};

VsAddContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsLtContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsLtContext.prototype = Object.create(ValueStmtContext.prototype);
VsLtContext.prototype.constructor = VsLtContext;

VisualBasic6Parser.VsLtContext = VsLtContext;

VsLtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsLtContext.prototype.LT = function() {
    return this.getToken(VisualBasic6Parser.LT, 0);
};

VsLtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsAddressOfContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsAddressOfContext.prototype = Object.create(ValueStmtContext.prototype);
VsAddressOfContext.prototype.constructor = VsAddressOfContext;

VisualBasic6Parser.VsAddressOfContext = VsAddressOfContext;

VsAddressOfContext.prototype.ADDRESSOF = function() {
    return this.getToken(VisualBasic6Parser.ADDRESSOF, 0);
};

VsAddressOfContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

VsAddressOfContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

function VsNewContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsNewContext.prototype = Object.create(ValueStmtContext.prototype);
VsNewContext.prototype.constructor = VsNewContext;

VisualBasic6Parser.VsNewContext = VsNewContext;

VsNewContext.prototype.NEW = function() {
    return this.getToken(VisualBasic6Parser.NEW, 0);
};

VsNewContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

VsNewContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

function VsMultContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsMultContext.prototype = Object.create(ValueStmtContext.prototype);
VsMultContext.prototype.constructor = VsMultContext;

VisualBasic6Parser.VsMultContext = VsMultContext;

VsMultContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsMultContext.prototype.MULT = function() {
    return this.getToken(VisualBasic6Parser.MULT, 0);
};

VsMultContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsNegationContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsNegationContext.prototype = Object.create(ValueStmtContext.prototype);
VsNegationContext.prototype.constructor = VsNegationContext;

VisualBasic6Parser.VsNegationContext = VsNegationContext;

VsNegationContext.prototype.MINUS = function() {
    return this.getToken(VisualBasic6Parser.MINUS, 0);
};

VsNegationContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

VsNegationContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

function VsAssignContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsAssignContext.prototype = Object.create(ValueStmtContext.prototype);
VsAssignContext.prototype.constructor = VsAssignContext;

VisualBasic6Parser.VsAssignContext = VsAssignContext;

VsAssignContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

VsAssignContext.prototype.ASSIGN = function() {
    return this.getToken(VisualBasic6Parser.ASSIGN, 0);
};

VsAssignContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

VsAssignContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsLikeContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsLikeContext.prototype = Object.create(ValueStmtContext.prototype);
VsLikeContext.prototype.constructor = VsLikeContext;

VisualBasic6Parser.VsLikeContext = VsLikeContext;

VsLikeContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsLikeContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


VsLikeContext.prototype.LIKE = function() {
    return this.getToken(VisualBasic6Parser.LIKE, 0);
};

function VsDivContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsDivContext.prototype = Object.create(ValueStmtContext.prototype);
VsDivContext.prototype.constructor = VsDivContext;

VisualBasic6Parser.VsDivContext = VsDivContext;

VsDivContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsDivContext.prototype.DIV = function() {
    return this.getToken(VisualBasic6Parser.DIV, 0);
};

VsDivContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsPlusContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsPlusContext.prototype = Object.create(ValueStmtContext.prototype);
VsPlusContext.prototype.constructor = VsPlusContext;

VisualBasic6Parser.VsPlusContext = VsPlusContext;

VsPlusContext.prototype.PLUS = function() {
    return this.getToken(VisualBasic6Parser.PLUS, 0);
};

VsPlusContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

VsPlusContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

function VsNotContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsNotContext.prototype = Object.create(ValueStmtContext.prototype);
VsNotContext.prototype.constructor = VsNotContext;

VisualBasic6Parser.VsNotContext = VsNotContext;

VsNotContext.prototype.NOT = function() {
    return this.getToken(VisualBasic6Parser.NOT, 0);
};

VsNotContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

VsNotContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

function VsGeqContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsGeqContext.prototype = Object.create(ValueStmtContext.prototype);
VsGeqContext.prototype.constructor = VsGeqContext;

VisualBasic6Parser.VsGeqContext = VsGeqContext;

VsGeqContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsGeqContext.prototype.GEQ = function() {
    return this.getToken(VisualBasic6Parser.GEQ, 0);
};

VsGeqContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsTypeOfContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsTypeOfContext.prototype = Object.create(ValueStmtContext.prototype);
VsTypeOfContext.prototype.constructor = VsTypeOfContext;

VisualBasic6Parser.VsTypeOfContext = VsTypeOfContext;

VsTypeOfContext.prototype.typeOfStmt = function() {
    return this.getTypedRuleContext(TypeOfStmtContext,0);
};

function VsICSContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsICSContext.prototype = Object.create(ValueStmtContext.prototype);
VsICSContext.prototype.constructor = VsICSContext;

VisualBasic6Parser.VsICSContext = VsICSContext;

VsICSContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

function VsNeqContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsNeqContext.prototype = Object.create(ValueStmtContext.prototype);
VsNeqContext.prototype.constructor = VsNeqContext;

VisualBasic6Parser.VsNeqContext = VsNeqContext;

VsNeqContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsNeqContext.prototype.NEQ = function() {
    return this.getToken(VisualBasic6Parser.NEQ, 0);
};

VsNeqContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsXorContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsXorContext.prototype = Object.create(ValueStmtContext.prototype);
VsXorContext.prototype.constructor = VsXorContext;

VisualBasic6Parser.VsXorContext = VsXorContext;

VsXorContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsXorContext.prototype.XOR = function() {
    return this.getToken(VisualBasic6Parser.XOR, 0);
};

VsXorContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsAndContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsAndContext.prototype = Object.create(ValueStmtContext.prototype);
VsAndContext.prototype.constructor = VsAndContext;

VisualBasic6Parser.VsAndContext = VsAndContext;

VsAndContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsAndContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


VsAndContext.prototype.AND = function() {
    return this.getToken(VisualBasic6Parser.AND, 0);
};

function VsLeqContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsLeqContext.prototype = Object.create(ValueStmtContext.prototype);
VsLeqContext.prototype.constructor = VsLeqContext;

VisualBasic6Parser.VsLeqContext = VsLeqContext;

VsLeqContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsLeqContext.prototype.LEQ = function() {
    return this.getToken(VisualBasic6Parser.LEQ, 0);
};

VsLeqContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsPowContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsPowContext.prototype = Object.create(ValueStmtContext.prototype);
VsPowContext.prototype.constructor = VsPowContext;

VisualBasic6Parser.VsPowContext = VsPowContext;

VsPowContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsPowContext.prototype.POW = function() {
    return this.getToken(VisualBasic6Parser.POW, 0);
};

VsPowContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsIsContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsIsContext.prototype = Object.create(ValueStmtContext.prototype);
VsIsContext.prototype.constructor = VsIsContext;

VisualBasic6Parser.VsIsContext = VsIsContext;

VsIsContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsIsContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


VsIsContext.prototype.IS = function() {
    return this.getToken(VisualBasic6Parser.IS, 0);
};

function VsModContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsModContext.prototype = Object.create(ValueStmtContext.prototype);
VsModContext.prototype.constructor = VsModContext;

VisualBasic6Parser.VsModContext = VsModContext;

VsModContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsModContext.prototype.MOD = function() {
    return this.getToken(VisualBasic6Parser.MOD, 0);
};

VsModContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsAmpContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsAmpContext.prototype = Object.create(ValueStmtContext.prototype);
VsAmpContext.prototype.constructor = VsAmpContext;

VisualBasic6Parser.VsAmpContext = VsAmpContext;

VsAmpContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsAmpContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


VsAmpContext.prototype.AMPERSAND = function() {
    return this.getToken(VisualBasic6Parser.AMPERSAND, 0);
};

function VsOrContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsOrContext.prototype = Object.create(ValueStmtContext.prototype);
VsOrContext.prototype.constructor = VsOrContext;

VisualBasic6Parser.VsOrContext = VsOrContext;

VsOrContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsOrContext.prototype.OR = function() {
    return this.getToken(VisualBasic6Parser.OR, 0);
};

VsOrContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsMinusContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsMinusContext.prototype = Object.create(ValueStmtContext.prototype);
VsMinusContext.prototype.constructor = VsMinusContext;

VisualBasic6Parser.VsMinusContext = VsMinusContext;

VsMinusContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsMinusContext.prototype.MINUS = function() {
    return this.getToken(VisualBasic6Parser.MINUS, 0);
};

VsMinusContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsLiteralContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsLiteralContext.prototype = Object.create(ValueStmtContext.prototype);
VsLiteralContext.prototype.constructor = VsLiteralContext;

VisualBasic6Parser.VsLiteralContext = VsLiteralContext;

VsLiteralContext.prototype.literal = function() {
    return this.getTypedRuleContext(LiteralContext,0);
};

function VsEqvContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsEqvContext.prototype = Object.create(ValueStmtContext.prototype);
VsEqvContext.prototype.constructor = VsEqvContext;

VisualBasic6Parser.VsEqvContext = VsEqvContext;

VsEqvContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsEqvContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


VsEqvContext.prototype.EQV = function() {
    return this.getToken(VisualBasic6Parser.EQV, 0);
};

function VsImpContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsImpContext.prototype = Object.create(ValueStmtContext.prototype);
VsImpContext.prototype.constructor = VsImpContext;

VisualBasic6Parser.VsImpContext = VsImpContext;

VsImpContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsImpContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


VsImpContext.prototype.IMP = function() {
    return this.getToken(VisualBasic6Parser.IMP, 0);
};

function VsGtContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsGtContext.prototype = Object.create(ValueStmtContext.prototype);
VsGtContext.prototype.constructor = VsGtContext;

VisualBasic6Parser.VsGtContext = VsGtContext;

VsGtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsGtContext.prototype.GT = function() {
    return this.getToken(VisualBasic6Parser.GT, 0);
};

VsGtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsEqContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsEqContext.prototype = Object.create(ValueStmtContext.prototype);
VsEqContext.prototype.constructor = VsEqContext;

VisualBasic6Parser.VsEqContext = VsEqContext;

VsEqContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

VsEqContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

VsEqContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


function VsMidContext(parser, ctx) {
	ValueStmtContext.call(this, parser);
    ValueStmtContext.prototype.copyFrom.call(this, ctx);
    return this;
}

VsMidContext.prototype = Object.create(ValueStmtContext.prototype);
VsMidContext.prototype.constructor = VsMidContext;

VisualBasic6Parser.VsMidContext = VsMidContext;

VsMidContext.prototype.midStmt = function() {
    return this.getTypedRuleContext(MidStmtContext,0);
};


VisualBasic6Parser.prototype.valueStmt = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new ValueStmtContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 194;
    this.enterRecursionRule(localctx, 194, VisualBasic6Parser.RULE_valueStmt, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1966;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,303,this._ctx);
        switch(la_) {
        case 1:
            localctx = new VsLiteralContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;

            this.state = 1913;
            this.literal();
            break;

        case 2:
            localctx = new VsICSContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1914;
            this.implicitCallStmt_InStmt();
            break;

        case 3:
            localctx = new VsStructContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1915;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 1917;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1916;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1919;
            this.valueStmt(0);
            this.state = 1930;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while(_la===VisualBasic6Parser.COMMA || _la===VisualBasic6Parser.WS) {
                this.state = 1921;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1920;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1923;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 1925;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 1924;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 1927;
                this.valueStmt(0);
                this.state = 1932;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            this.state = 1933;
            this.match(VisualBasic6Parser.RPAREN);
            break;

        case 4:
            localctx = new VsNewContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1935;
            this.match(VisualBasic6Parser.NEW);
            this.state = 1936;
            this.match(VisualBasic6Parser.WS);
            this.state = 1937;
            this.valueStmt(28);
            break;

        case 5:
            localctx = new VsTypeOfContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1938;
            this.typeOfStmt();
            break;

        case 6:
            localctx = new VsMidContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1939;
            this.midStmt();
            break;

        case 7:
            localctx = new VsAddressOfContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1940;
            this.match(VisualBasic6Parser.ADDRESSOF);
            this.state = 1941;
            this.match(VisualBasic6Parser.WS);
            this.state = 1942;
            this.valueStmt(25);
            break;

        case 8:
            localctx = new VsAssignContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1943;
            this.implicitCallStmt_InStmt();
            this.state = 1945;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1944;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1947;
            this.match(VisualBasic6Parser.ASSIGN);
            this.state = 1949;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1948;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1951;
            this.valueStmt(24);
            break;

        case 9:
            localctx = new VsNegationContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1953;
            this.match(VisualBasic6Parser.MINUS);
            this.state = 1955;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1954;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1957;
            this.valueStmt(14);
            break;

        case 10:
            localctx = new VsPlusContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1958;
            this.match(VisualBasic6Parser.PLUS);
            this.state = 1960;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 1959;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 1962;
            this.valueStmt(13);
            break;

        case 11:
            localctx = new VsNotContext(this, localctx);
            this._ctx = localctx;
            _prevctx = localctx;
            this.state = 1963;
            this.match(VisualBasic6Parser.NOT);
            this.state = 1964;
            this.match(VisualBasic6Parser.WS);
            this.state = 1965;
            this.valueStmt(1);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 2126;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,333,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 2124;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,332,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new VsIsContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 1968;
                    if (!( this.precpred(this._ctx, 23))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 23)");
                    }
                    this.state = 1969;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1970;
                    this.match(VisualBasic6Parser.IS);
                    this.state = 1971;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1972;
                    this.valueStmt(24);
                    break;

                case 2:
                    localctx = new VsLikeContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 1973;
                    if (!( this.precpred(this._ctx, 22))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 22)");
                    }
                    this.state = 1974;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1975;
                    this.match(VisualBasic6Parser.LIKE);
                    this.state = 1976;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 1977;
                    this.valueStmt(23);
                    break;

                case 3:
                    localctx = new VsGeqContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 1978;
                    if (!( this.precpred(this._ctx, 21))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 21)");
                    }
                    this.state = 1980;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1979;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 1982;
                    this.match(VisualBasic6Parser.GEQ);
                    this.state = 1984;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1983;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 1986;
                    this.valueStmt(22);
                    break;

                case 4:
                    localctx = new VsLeqContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 1987;
                    if (!( this.precpred(this._ctx, 20))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 20)");
                    }
                    this.state = 1989;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1988;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 1991;
                    this.match(VisualBasic6Parser.LEQ);
                    this.state = 1993;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1992;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 1995;
                    this.valueStmt(21);
                    break;

                case 5:
                    localctx = new VsGtContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 1996;
                    if (!( this.precpred(this._ctx, 19))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 19)");
                    }
                    this.state = 1998;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 1997;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2000;
                    this.match(VisualBasic6Parser.GT);
                    this.state = 2002;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2001;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2004;
                    this.valueStmt(20);
                    break;

                case 6:
                    localctx = new VsLtContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2005;
                    if (!( this.precpred(this._ctx, 18))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 18)");
                    }
                    this.state = 2007;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2006;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2009;
                    this.match(VisualBasic6Parser.LT);
                    this.state = 2011;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2010;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2013;
                    this.valueStmt(19);
                    break;

                case 7:
                    localctx = new VsNeqContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2014;
                    if (!( this.precpred(this._ctx, 17))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 17)");
                    }
                    this.state = 2016;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2015;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2018;
                    this.match(VisualBasic6Parser.NEQ);
                    this.state = 2020;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2019;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2022;
                    this.valueStmt(18);
                    break;

                case 8:
                    localctx = new VsEqContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2023;
                    if (!( this.precpred(this._ctx, 16))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 16)");
                    }
                    this.state = 2025;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2024;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2027;
                    this.match(VisualBasic6Parser.EQ);
                    this.state = 2029;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2028;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2031;
                    this.valueStmt(17);
                    break;

                case 9:
                    localctx = new VsAmpContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2032;
                    if (!( this.precpred(this._ctx, 15))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 15)");
                    }
                    this.state = 2033;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2034;
                    this.match(VisualBasic6Parser.AMPERSAND);
                    this.state = 2035;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2036;
                    this.valueStmt(16);
                    break;

                case 10:
                    localctx = new VsAddContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2037;
                    if (!( this.precpred(this._ctx, 12))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 12)");
                    }
                    this.state = 2039;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2038;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2041;
                    this.match(VisualBasic6Parser.PLUS);
                    this.state = 2043;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2042;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2045;
                    this.valueStmt(13);
                    break;

                case 11:
                    localctx = new VsModContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2046;
                    if (!( this.precpred(this._ctx, 11))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 11)");
                    }
                    this.state = 2048;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2047;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2050;
                    this.match(VisualBasic6Parser.MOD);
                    this.state = 2052;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2051;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2054;
                    this.valueStmt(12);
                    break;

                case 12:
                    localctx = new VsDivContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2055;
                    if (!( this.precpred(this._ctx, 10))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
                    }
                    this.state = 2057;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2056;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2059;
                    this.match(VisualBasic6Parser.DIV);
                    this.state = 2061;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2060;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2063;
                    this.valueStmt(11);
                    break;

                case 13:
                    localctx = new VsMultContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2064;
                    if (!( this.precpred(this._ctx, 9))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
                    }
                    this.state = 2066;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2065;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2068;
                    this.match(VisualBasic6Parser.MULT);
                    this.state = 2070;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2069;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2072;
                    this.valueStmt(10);
                    break;

                case 14:
                    localctx = new VsMinusContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2073;
                    if (!( this.precpred(this._ctx, 8))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
                    }
                    this.state = 2075;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2074;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2077;
                    this.match(VisualBasic6Parser.MINUS);
                    this.state = 2079;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2078;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2081;
                    this.valueStmt(9);
                    break;

                case 15:
                    localctx = new VsPowContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2082;
                    if (!( this.precpred(this._ctx, 7))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
                    }
                    this.state = 2084;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2083;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2086;
                    this.match(VisualBasic6Parser.POW);
                    this.state = 2088;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2087;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2090;
                    this.valueStmt(8);
                    break;

                case 16:
                    localctx = new VsImpContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2091;
                    if (!( this.precpred(this._ctx, 6))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 6)");
                    }
                    this.state = 2092;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2093;
                    this.match(VisualBasic6Parser.IMP);
                    this.state = 2094;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2095;
                    this.valueStmt(7);
                    break;

                case 17:
                    localctx = new VsEqvContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2096;
                    if (!( this.precpred(this._ctx, 5))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                    }
                    this.state = 2097;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2098;
                    this.match(VisualBasic6Parser.EQV);
                    this.state = 2099;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2100;
                    this.valueStmt(6);
                    break;

                case 18:
                    localctx = new VsXorContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2101;
                    if (!( this.precpred(this._ctx, 4))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 4)");
                    }
                    this.state = 2103;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2102;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2105;
                    this.match(VisualBasic6Parser.XOR);
                    this.state = 2107;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2106;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2109;
                    this.valueStmt(5);
                    break;

                case 19:
                    localctx = new VsOrContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2110;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 2112;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2111;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2114;
                    this.match(VisualBasic6Parser.OR);
                    this.state = 2116;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2115;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2118;
                    this.valueStmt(4);
                    break;

                case 20:
                    localctx = new VsAndContext(this, new ValueStmtContext(this, _parentctx, _parentState));
                    this.pushNewRecursionContext(localctx, _startState, VisualBasic6Parser.RULE_valueStmt);
                    this.state = 2119;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 2120;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2121;
                    this.match(VisualBasic6Parser.AND);
                    this.state = 2122;
                    this.match(VisualBasic6Parser.WS);
                    this.state = 2123;
                    this.valueStmt(3);
                    break;

                } 
            }
            this.state = 2128;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,333,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function VariableStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_variableStmt;
    return this;
}

VariableStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableStmtContext.prototype.constructor = VariableStmtContext;

VariableStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


VariableStmtContext.prototype.variableListStmt = function() {
    return this.getTypedRuleContext(VariableListStmtContext,0);
};

VariableStmtContext.prototype.DIM = function() {
    return this.getToken(VisualBasic6Parser.DIM, 0);
};

VariableStmtContext.prototype.STATIC = function() {
    return this.getToken(VisualBasic6Parser.STATIC, 0);
};

VariableStmtContext.prototype.visibility = function() {
    return this.getTypedRuleContext(VisibilityContext,0);
};

VariableStmtContext.prototype.WITHEVENTS = function() {
    return this.getToken(VisualBasic6Parser.WITHEVENTS, 0);
};




VisualBasic6Parser.VariableStmtContext = VariableStmtContext;

VisualBasic6Parser.prototype.variableStmt = function() {

    var localctx = new VariableStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 196, VisualBasic6Parser.RULE_variableStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2132;
        switch(this._input.LA(1)) {
        case VisualBasic6Parser.DIM:
            this.state = 2129;
            this.match(VisualBasic6Parser.DIM);
            break;
        case VisualBasic6Parser.STATIC:
            this.state = 2130;
            this.match(VisualBasic6Parser.STATIC);
            break;
        case VisualBasic6Parser.FRIEND:
        case VisualBasic6Parser.GLOBAL:
        case VisualBasic6Parser.PRIVATE:
        case VisualBasic6Parser.PUBLIC:
            this.state = 2131;
            this.visibility();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this.state = 2134;
        this.match(VisualBasic6Parser.WS);
        this.state = 2137;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,335,this._ctx);
        if(la_===1) {
            this.state = 2135;
            this.match(VisualBasic6Parser.WITHEVENTS);
            this.state = 2136;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 2139;
        this.variableListStmt();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VariableListStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_variableListStmt;
    return this;
}

VariableListStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableListStmtContext.prototype.constructor = VariableListStmtContext;

VariableListStmtContext.prototype.variableSubStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(VariableSubStmtContext);
    } else {
        return this.getTypedRuleContext(VariableSubStmtContext,i);
    }
};

VariableListStmtContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};


VariableListStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.VariableListStmtContext = VariableListStmtContext;

VisualBasic6Parser.prototype.variableListStmt = function() {

    var localctx = new VariableListStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 198, VisualBasic6Parser.RULE_variableListStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2141;
        this.variableSubStmt();
        this.state = 2152;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,338,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 2143;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 2142;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 2145;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 2147;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 2146;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 2149;
                this.variableSubStmt(); 
            }
            this.state = 2154;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,338,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VariableSubStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_variableSubStmt;
    return this;
}

VariableSubStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableSubStmtContext.prototype.constructor = VariableSubStmtContext;

VariableSubStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

VariableSubStmtContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

VariableSubStmtContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

VariableSubStmtContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

VariableSubStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


VariableSubStmtContext.prototype.asTypeClause = function() {
    return this.getTypedRuleContext(AsTypeClauseContext,0);
};

VariableSubStmtContext.prototype.subscripts = function() {
    return this.getTypedRuleContext(SubscriptsContext,0);
};




VisualBasic6Parser.VariableSubStmtContext = VariableSubStmtContext;

VisualBasic6Parser.prototype.variableSubStmt = function() {

    var localctx = new VariableSubStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 200, VisualBasic6Parser.RULE_variableSubStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2155;
        this.ambiguousIdentifier();
        this.state = 2173;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,344,this._ctx);
        if(la_===1) {
            this.state = 2157;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2156;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2159;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 2161;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2160;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2167;
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)) | (1 << (VisualBasic6Parser.LPAREN - 162)) | (1 << (VisualBasic6Parser.MINUS - 162)))) !== 0) || ((((_la - 195)) & ~0x1f) == 0 && ((1 << (_la - 195)) & ((1 << (VisualBasic6Parser.PLUS - 195)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 195)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 195)) | (1 << (VisualBasic6Parser.DATELITERAL - 195)) | (1 << (VisualBasic6Parser.COLORLITERAL - 195)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 195)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 195)) | (1 << (VisualBasic6Parser.FILENUMBER - 195)) | (1 << (VisualBasic6Parser.IDENTIFIER - 195)))) !== 0)) {
                this.state = 2163;
                this.subscripts();
                this.state = 2165;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 2164;
                    this.match(VisualBasic6Parser.WS);
                }

            }

            this.state = 2169;
            this.match(VisualBasic6Parser.RPAREN);
            this.state = 2171;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,343,this._ctx);
            if(la_===1) {
                this.state = 2170;
                this.match(VisualBasic6Parser.WS);

            }

        }
        this.state = 2176;
        _la = this._input.LA(1);
        if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
            this.state = 2175;
            this.typeHint();
        }

        this.state = 2180;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,346,this._ctx);
        if(la_===1) {
            this.state = 2178;
            this.match(VisualBasic6Parser.WS);
            this.state = 2179;
            this.asTypeClause();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function WhileWendStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_whileWendStmt;
    return this;
}

WhileWendStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
WhileWendStmtContext.prototype.constructor = WhileWendStmtContext;

WhileWendStmtContext.prototype.WHILE = function() {
    return this.getToken(VisualBasic6Parser.WHILE, 0);
};

WhileWendStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

WhileWendStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

WhileWendStmtContext.prototype.WEND = function() {
    return this.getToken(VisualBasic6Parser.WEND, 0);
};

WhileWendStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


WhileWendStmtContext.prototype.block = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(BlockContext);
    } else {
        return this.getTypedRuleContext(BlockContext,i);
    }
};




VisualBasic6Parser.WhileWendStmtContext = WhileWendStmtContext;

VisualBasic6Parser.prototype.whileWendStmt = function() {

    var localctx = new WhileWendStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 202, VisualBasic6Parser.RULE_whileWendStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2182;
        this.match(VisualBasic6Parser.WHILE);
        this.state = 2183;
        this.match(VisualBasic6Parser.WS);
        this.state = 2184;
        this.valueStmt(0);
        this.state = 2186; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 2185;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 2188; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 2195;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,348,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 2190;
                this.block();
                this.state = 2191;
                this.match(VisualBasic6Parser.NEWLINE); 
            }
            this.state = 2197;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,348,this._ctx);
        }

        this.state = 2198;
        this.match(VisualBasic6Parser.WEND);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function WidthStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_widthStmt;
    return this;
}

WidthStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
WidthStmtContext.prototype.constructor = WidthStmtContext;

WidthStmtContext.prototype.WIDTH = function() {
    return this.getToken(VisualBasic6Parser.WIDTH, 0);
};

WidthStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


WidthStmtContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

WidthStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};




VisualBasic6Parser.WidthStmtContext = WidthStmtContext;

VisualBasic6Parser.prototype.widthStmt = function() {

    var localctx = new WidthStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 204, VisualBasic6Parser.RULE_widthStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2200;
        this.match(VisualBasic6Parser.WIDTH);
        this.state = 2201;
        this.match(VisualBasic6Parser.WS);
        this.state = 2202;
        this.valueStmt(0);
        this.state = 2204;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 2203;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 2206;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 2208;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 2207;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 2210;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function WithStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_withStmt;
    return this;
}

WithStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
WithStmtContext.prototype.constructor = WithStmtContext;

WithStmtContext.prototype.WITH = function() {
    return this.getToken(VisualBasic6Parser.WITH, 0);
};

WithStmtContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

WithStmtContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

WithStmtContext.prototype.END_WITH = function() {
    return this.getToken(VisualBasic6Parser.END_WITH, 0);
};

WithStmtContext.prototype.NEWLINE = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.NEWLINE);
    } else {
        return this.getToken(VisualBasic6Parser.NEWLINE, i);
    }
};


WithStmtContext.prototype.block = function() {
    return this.getTypedRuleContext(BlockContext,0);
};




VisualBasic6Parser.WithStmtContext = WithStmtContext;

VisualBasic6Parser.prototype.withStmt = function() {

    var localctx = new WithStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 206, VisualBasic6Parser.RULE_withStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2212;
        this.match(VisualBasic6Parser.WITH);
        this.state = 2213;
        this.match(VisualBasic6Parser.WS);
        this.state = 2214;
        this.implicitCallStmt_InStmt();
        this.state = 2216; 
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
            this.state = 2215;
            this.match(VisualBasic6Parser.NEWLINE);
            this.state = 2218; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
        } while(_la===VisualBasic6Parser.NEWLINE);
        this.state = 2226;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)) | (1 << (VisualBasic6Parser.EXIT_DO - 32)) | (1 << (VisualBasic6Parser.EXIT_FOR - 32)) | (1 << (VisualBasic6Parser.EXIT_FUNCTION - 32)) | (1 << (VisualBasic6Parser.EXIT_PROPERTY - 32)) | (1 << (VisualBasic6Parser.EXIT_SUB - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LINE_INPUT - 64)) | (1 << (VisualBasic6Parser.LSET - 64)) | (1 << (VisualBasic6Parser.MACRO_IF - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.ON_ERROR - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)))) !== 0) || _la===VisualBasic6Parser.L_SQUARE_BRACKET || _la===VisualBasic6Parser.IDENTIFIER) {
            this.state = 2220;
            this.block();
            this.state = 2222; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 2221;
                this.match(VisualBasic6Parser.NEWLINE);
                this.state = 2224; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while(_la===VisualBasic6Parser.NEWLINE);
        }

        this.state = 2228;
        this.match(VisualBasic6Parser.END_WITH);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function WriteStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_writeStmt;
    return this;
}

WriteStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
WriteStmtContext.prototype.constructor = WriteStmtContext;

WriteStmtContext.prototype.WRITE = function() {
    return this.getToken(VisualBasic6Parser.WRITE, 0);
};

WriteStmtContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


WriteStmtContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

WriteStmtContext.prototype.COMMA = function() {
    return this.getToken(VisualBasic6Parser.COMMA, 0);
};

WriteStmtContext.prototype.outputList = function() {
    return this.getTypedRuleContext(OutputListContext,0);
};




VisualBasic6Parser.WriteStmtContext = WriteStmtContext;

VisualBasic6Parser.prototype.writeStmt = function() {

    var localctx = new WriteStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 208, VisualBasic6Parser.RULE_writeStmt);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2230;
        this.match(VisualBasic6Parser.WRITE);
        this.state = 2231;
        this.match(VisualBasic6Parser.WS);
        this.state = 2232;
        this.valueStmt(0);
        this.state = 2234;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 2233;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 2236;
        this.match(VisualBasic6Parser.COMMA);
        this.state = 2241;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,356,this._ctx);
        if(la_===1) {
            this.state = 2238;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,355,this._ctx);
            if(la_===1) {
                this.state = 2237;
                this.match(VisualBasic6Parser.WS);

            }
            this.state = 2240;
            this.outputList();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExplicitCallStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_explicitCallStmt;
    return this;
}

ExplicitCallStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExplicitCallStmtContext.prototype.constructor = ExplicitCallStmtContext;

ExplicitCallStmtContext.prototype.eCS_ProcedureCall = function() {
    return this.getTypedRuleContext(ECS_ProcedureCallContext,0);
};

ExplicitCallStmtContext.prototype.eCS_MemberProcedureCall = function() {
    return this.getTypedRuleContext(ECS_MemberProcedureCallContext,0);
};




VisualBasic6Parser.ExplicitCallStmtContext = ExplicitCallStmtContext;

VisualBasic6Parser.prototype.explicitCallStmt = function() {

    var localctx = new ExplicitCallStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 210, VisualBasic6Parser.RULE_explicitCallStmt);
    try {
        this.state = 2245;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,357,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2243;
            this.eCS_ProcedureCall();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2244;
            this.eCS_MemberProcedureCall();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ECS_ProcedureCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_eCS_ProcedureCall;
    return this;
}

ECS_ProcedureCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ECS_ProcedureCallContext.prototype.constructor = ECS_ProcedureCallContext;

ECS_ProcedureCallContext.prototype.CALL = function() {
    return this.getToken(VisualBasic6Parser.CALL, 0);
};

ECS_ProcedureCallContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ECS_ProcedureCallContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

ECS_ProcedureCallContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

ECS_ProcedureCallContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

ECS_ProcedureCallContext.prototype.argsCall = function() {
    return this.getTypedRuleContext(ArgsCallContext,0);
};

ECS_ProcedureCallContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};




VisualBasic6Parser.ECS_ProcedureCallContext = ECS_ProcedureCallContext;

VisualBasic6Parser.prototype.eCS_ProcedureCall = function() {

    var localctx = new ECS_ProcedureCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 212, VisualBasic6Parser.RULE_eCS_ProcedureCall);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2247;
        this.match(VisualBasic6Parser.CALL);
        this.state = 2248;
        this.match(VisualBasic6Parser.WS);
        this.state = 2249;
        this.ambiguousIdentifier();
        this.state = 2251;
        _la = this._input.LA(1);
        if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
            this.state = 2250;
            this.typeHint();
        }

        this.state = 2266;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,362,this._ctx);
        if(la_===1) {
            this.state = 2254;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2253;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2256;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 2258;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,360,this._ctx);
            if(la_===1) {
                this.state = 2257;
                this.match(VisualBasic6Parser.WS);

            }
            this.state = 2260;
            this.argsCall();
            this.state = 2262;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2261;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2264;
            this.match(VisualBasic6Parser.RPAREN);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ECS_MemberProcedureCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_eCS_MemberProcedureCall;
    return this;
}

ECS_MemberProcedureCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ECS_MemberProcedureCallContext.prototype.constructor = ECS_MemberProcedureCallContext;

ECS_MemberProcedureCallContext.prototype.CALL = function() {
    return this.getToken(VisualBasic6Parser.CALL, 0);
};

ECS_MemberProcedureCallContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ECS_MemberProcedureCallContext.prototype.DOT = function() {
    return this.getToken(VisualBasic6Parser.DOT, 0);
};

ECS_MemberProcedureCallContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

ECS_MemberProcedureCallContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

ECS_MemberProcedureCallContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

ECS_MemberProcedureCallContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

ECS_MemberProcedureCallContext.prototype.argsCall = function() {
    return this.getTypedRuleContext(ArgsCallContext,0);
};

ECS_MemberProcedureCallContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};




VisualBasic6Parser.ECS_MemberProcedureCallContext = ECS_MemberProcedureCallContext;

VisualBasic6Parser.prototype.eCS_MemberProcedureCall = function() {

    var localctx = new ECS_MemberProcedureCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 214, VisualBasic6Parser.RULE_eCS_MemberProcedureCall);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2268;
        this.match(VisualBasic6Parser.CALL);
        this.state = 2269;
        this.match(VisualBasic6Parser.WS);
        this.state = 2271;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,363,this._ctx);
        if(la_===1) {
            this.state = 2270;
            this.implicitCallStmt_InStmt();

        }
        this.state = 2273;
        this.match(VisualBasic6Parser.DOT);
        this.state = 2274;
        this.ambiguousIdentifier();
        this.state = 2276;
        _la = this._input.LA(1);
        if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
            this.state = 2275;
            this.typeHint();
        }

        this.state = 2291;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,368,this._ctx);
        if(la_===1) {
            this.state = 2279;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2278;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2281;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 2283;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,366,this._ctx);
            if(la_===1) {
                this.state = 2282;
                this.match(VisualBasic6Parser.WS);

            }
            this.state = 2285;
            this.argsCall();
            this.state = 2287;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2286;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2289;
            this.match(VisualBasic6Parser.RPAREN);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ImplicitCallStmt_InBlockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_implicitCallStmt_InBlock;
    return this;
}

ImplicitCallStmt_InBlockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ImplicitCallStmt_InBlockContext.prototype.constructor = ImplicitCallStmt_InBlockContext;

ImplicitCallStmt_InBlockContext.prototype.iCS_B_ProcedureCall = function() {
    return this.getTypedRuleContext(ICS_B_ProcedureCallContext,0);
};

ImplicitCallStmt_InBlockContext.prototype.iCS_B_MemberProcedureCall = function() {
    return this.getTypedRuleContext(ICS_B_MemberProcedureCallContext,0);
};




VisualBasic6Parser.ImplicitCallStmt_InBlockContext = ImplicitCallStmt_InBlockContext;

VisualBasic6Parser.prototype.implicitCallStmt_InBlock = function() {

    var localctx = new ImplicitCallStmt_InBlockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 216, VisualBasic6Parser.RULE_implicitCallStmt_InBlock);
    try {
        this.state = 2295;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,369,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2293;
            this.iCS_B_ProcedureCall();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2294;
            this.iCS_B_MemberProcedureCall();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ICS_B_ProcedureCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_iCS_B_ProcedureCall;
    return this;
}

ICS_B_ProcedureCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ICS_B_ProcedureCallContext.prototype.constructor = ICS_B_ProcedureCallContext;

ICS_B_ProcedureCallContext.prototype.certainIdentifier = function() {
    return this.getTypedRuleContext(CertainIdentifierContext,0);
};

ICS_B_ProcedureCallContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

ICS_B_ProcedureCallContext.prototype.argsCall = function() {
    return this.getTypedRuleContext(ArgsCallContext,0);
};




VisualBasic6Parser.ICS_B_ProcedureCallContext = ICS_B_ProcedureCallContext;

VisualBasic6Parser.prototype.iCS_B_ProcedureCall = function() {

    var localctx = new ICS_B_ProcedureCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 218, VisualBasic6Parser.RULE_iCS_B_ProcedureCall);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2297;
        this.certainIdentifier();
        this.state = 2300;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,370,this._ctx);
        if(la_===1) {
            this.state = 2298;
            this.match(VisualBasic6Parser.WS);
            this.state = 2299;
            this.argsCall();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ICS_B_MemberProcedureCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_iCS_B_MemberProcedureCall;
    return this;
}

ICS_B_MemberProcedureCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ICS_B_MemberProcedureCallContext.prototype.constructor = ICS_B_MemberProcedureCallContext;

ICS_B_MemberProcedureCallContext.prototype.DOT = function() {
    return this.getToken(VisualBasic6Parser.DOT, 0);
};

ICS_B_MemberProcedureCallContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

ICS_B_MemberProcedureCallContext.prototype.implicitCallStmt_InStmt = function() {
    return this.getTypedRuleContext(ImplicitCallStmt_InStmtContext,0);
};

ICS_B_MemberProcedureCallContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

ICS_B_MemberProcedureCallContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

ICS_B_MemberProcedureCallContext.prototype.argsCall = function() {
    return this.getTypedRuleContext(ArgsCallContext,0);
};

ICS_B_MemberProcedureCallContext.prototype.dictionaryCallStmt = function() {
    return this.getTypedRuleContext(DictionaryCallStmtContext,0);
};




VisualBasic6Parser.ICS_B_MemberProcedureCallContext = ICS_B_MemberProcedureCallContext;

VisualBasic6Parser.prototype.iCS_B_MemberProcedureCall = function() {

    var localctx = new ICS_B_MemberProcedureCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 220, VisualBasic6Parser.RULE_iCS_B_MemberProcedureCall);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2303;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,371,this._ctx);
        if(la_===1) {
            this.state = 2302;
            this.implicitCallStmt_InStmt();

        }
        this.state = 2305;
        this.match(VisualBasic6Parser.DOT);
        this.state = 2306;
        this.ambiguousIdentifier();
        this.state = 2308;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,372,this._ctx);
        if(la_===1) {
            this.state = 2307;
            this.typeHint();

        }
        this.state = 2312;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,373,this._ctx);
        if(la_===1) {
            this.state = 2310;
            this.match(VisualBasic6Parser.WS);
            this.state = 2311;
            this.argsCall();

        }
        this.state = 2315;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.EXCLAMATIONMARK) {
            this.state = 2314;
            this.dictionaryCallStmt();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ImplicitCallStmt_InStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_implicitCallStmt_InStmt;
    return this;
}

ImplicitCallStmt_InStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ImplicitCallStmt_InStmtContext.prototype.constructor = ImplicitCallStmt_InStmtContext;

ImplicitCallStmt_InStmtContext.prototype.iCS_S_MembersCall = function() {
    return this.getTypedRuleContext(ICS_S_MembersCallContext,0);
};

ImplicitCallStmt_InStmtContext.prototype.iCS_S_VariableOrProcedureCall = function() {
    return this.getTypedRuleContext(ICS_S_VariableOrProcedureCallContext,0);
};

ImplicitCallStmt_InStmtContext.prototype.iCS_S_ProcedureOrArrayCall = function() {
    return this.getTypedRuleContext(ICS_S_ProcedureOrArrayCallContext,0);
};

ImplicitCallStmt_InStmtContext.prototype.iCS_S_DictionaryCall = function() {
    return this.getTypedRuleContext(ICS_S_DictionaryCallContext,0);
};




VisualBasic6Parser.ImplicitCallStmt_InStmtContext = ImplicitCallStmt_InStmtContext;

VisualBasic6Parser.prototype.implicitCallStmt_InStmt = function() {

    var localctx = new ImplicitCallStmt_InStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 222, VisualBasic6Parser.RULE_implicitCallStmt_InStmt);
    try {
        this.state = 2321;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,375,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2317;
            this.iCS_S_MembersCall();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2318;
            this.iCS_S_VariableOrProcedureCall();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2319;
            this.iCS_S_ProcedureOrArrayCall();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 2320;
            this.iCS_S_DictionaryCall();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ICS_S_VariableOrProcedureCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_VariableOrProcedureCall;
    return this;
}

ICS_S_VariableOrProcedureCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ICS_S_VariableOrProcedureCallContext.prototype.constructor = ICS_S_VariableOrProcedureCallContext;

ICS_S_VariableOrProcedureCallContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

ICS_S_VariableOrProcedureCallContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

ICS_S_VariableOrProcedureCallContext.prototype.dictionaryCallStmt = function() {
    return this.getTypedRuleContext(DictionaryCallStmtContext,0);
};




VisualBasic6Parser.ICS_S_VariableOrProcedureCallContext = ICS_S_VariableOrProcedureCallContext;

VisualBasic6Parser.prototype.iCS_S_VariableOrProcedureCall = function() {

    var localctx = new ICS_S_VariableOrProcedureCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 224, VisualBasic6Parser.RULE_iCS_S_VariableOrProcedureCall);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2323;
        this.ambiguousIdentifier();
        this.state = 2325;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,376,this._ctx);
        if(la_===1) {
            this.state = 2324;
            this.typeHint();

        }
        this.state = 2328;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,377,this._ctx);
        if(la_===1) {
            this.state = 2327;
            this.dictionaryCallStmt();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ICS_S_ProcedureOrArrayCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_ProcedureOrArrayCall;
    return this;
}

ICS_S_ProcedureOrArrayCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ICS_S_ProcedureOrArrayCallContext.prototype.constructor = ICS_S_ProcedureOrArrayCallContext;

ICS_S_ProcedureOrArrayCallContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

ICS_S_ProcedureOrArrayCallContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

ICS_S_ProcedureOrArrayCallContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

ICS_S_ProcedureOrArrayCallContext.prototype.baseType = function() {
    return this.getTypedRuleContext(BaseTypeContext,0);
};

ICS_S_ProcedureOrArrayCallContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};

ICS_S_ProcedureOrArrayCallContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ICS_S_ProcedureOrArrayCallContext.prototype.argsCall = function() {
    return this.getTypedRuleContext(ArgsCallContext,0);
};

ICS_S_ProcedureOrArrayCallContext.prototype.dictionaryCallStmt = function() {
    return this.getTypedRuleContext(DictionaryCallStmtContext,0);
};




VisualBasic6Parser.ICS_S_ProcedureOrArrayCallContext = ICS_S_ProcedureOrArrayCallContext;

VisualBasic6Parser.prototype.iCS_S_ProcedureOrArrayCall = function() {

    var localctx = new ICS_S_ProcedureOrArrayCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 226, VisualBasic6Parser.RULE_iCS_S_ProcedureOrArrayCall);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2332;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,378,this._ctx);
        switch(la_) {
        case 1:
            this.state = 2330;
            this.ambiguousIdentifier();
            break;

        case 2:
            this.state = 2331;
            this.baseType();
            break;

        }
        this.state = 2335;
        _la = this._input.LA(1);
        if(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0)) {
            this.state = 2334;
            this.typeHint();
        }

        this.state = 2338;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 2337;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 2340;
        this.match(VisualBasic6Parser.LPAREN);
        this.state = 2342;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,381,this._ctx);
        if(la_===1) {
            this.state = 2341;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 2348;
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.COMMA - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)) | (1 << (VisualBasic6Parser.LPAREN - 162)) | (1 << (VisualBasic6Parser.MINUS - 162)))) !== 0) || ((((_la - 195)) & ~0x1f) == 0 && ((1 << (_la - 195)) & ((1 << (VisualBasic6Parser.PLUS - 195)) | (1 << (VisualBasic6Parser.SEMICOLON - 195)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 195)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 195)) | (1 << (VisualBasic6Parser.DATELITERAL - 195)) | (1 << (VisualBasic6Parser.COLORLITERAL - 195)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 195)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 195)) | (1 << (VisualBasic6Parser.FILENUMBER - 195)) | (1 << (VisualBasic6Parser.IDENTIFIER - 195)) | (1 << (VisualBasic6Parser.WS - 195)))) !== 0)) {
            this.state = 2344;
            this.argsCall();
            this.state = 2346;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2345;
                this.match(VisualBasic6Parser.WS);
            }

        }

        this.state = 2350;
        this.match(VisualBasic6Parser.RPAREN);
        this.state = 2352;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,384,this._ctx);
        if(la_===1) {
            this.state = 2351;
            this.dictionaryCallStmt();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ICS_S_MembersCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_MembersCall;
    return this;
}

ICS_S_MembersCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ICS_S_MembersCallContext.prototype.constructor = ICS_S_MembersCallContext;

ICS_S_MembersCallContext.prototype.iCS_S_VariableOrProcedureCall = function() {
    return this.getTypedRuleContext(ICS_S_VariableOrProcedureCallContext,0);
};

ICS_S_MembersCallContext.prototype.iCS_S_ProcedureOrArrayCall = function() {
    return this.getTypedRuleContext(ICS_S_ProcedureOrArrayCallContext,0);
};

ICS_S_MembersCallContext.prototype.iCS_S_MemberCall = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ICS_S_MemberCallContext);
    } else {
        return this.getTypedRuleContext(ICS_S_MemberCallContext,i);
    }
};

ICS_S_MembersCallContext.prototype.dictionaryCallStmt = function() {
    return this.getTypedRuleContext(DictionaryCallStmtContext,0);
};




VisualBasic6Parser.ICS_S_MembersCallContext = ICS_S_MembersCallContext;

VisualBasic6Parser.prototype.iCS_S_MembersCall = function() {

    var localctx = new ICS_S_MembersCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 228, VisualBasic6Parser.RULE_iCS_S_MembersCall);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2356;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,385,this._ctx);
        if(la_===1) {
            this.state = 2354;
            this.iCS_S_VariableOrProcedureCall();

        } else if(la_===2) {
            this.state = 2355;
            this.iCS_S_ProcedureOrArrayCall();

        }
        this.state = 2359; 
        this._errHandler.sync(this);
        var _alt = 1;
        do {
        	switch (_alt) {
        	case 1:
        		this.state = 2358;
        		this.iCS_S_MemberCall();
        		break;
        	default:
        		throw new antlr4.error.NoViableAltException(this);
        	}
        	this.state = 2361; 
        	this._errHandler.sync(this);
        	_alt = this._interp.adaptivePredict(this._input,386, this._ctx);
        } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
        this.state = 2364;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,387,this._ctx);
        if(la_===1) {
            this.state = 2363;
            this.dictionaryCallStmt();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ICS_S_MemberCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_MemberCall;
    return this;
}

ICS_S_MemberCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ICS_S_MemberCallContext.prototype.constructor = ICS_S_MemberCallContext;

ICS_S_MemberCallContext.prototype.DOT = function() {
    return this.getToken(VisualBasic6Parser.DOT, 0);
};

ICS_S_MemberCallContext.prototype.iCS_S_VariableOrProcedureCall = function() {
    return this.getTypedRuleContext(ICS_S_VariableOrProcedureCallContext,0);
};

ICS_S_MemberCallContext.prototype.iCS_S_ProcedureOrArrayCall = function() {
    return this.getTypedRuleContext(ICS_S_ProcedureOrArrayCallContext,0);
};




VisualBasic6Parser.ICS_S_MemberCallContext = ICS_S_MemberCallContext;

VisualBasic6Parser.prototype.iCS_S_MemberCall = function() {

    var localctx = new ICS_S_MemberCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 230, VisualBasic6Parser.RULE_iCS_S_MemberCall);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2366;
        this.match(VisualBasic6Parser.DOT);
        this.state = 2369;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,388,this._ctx);
        switch(la_) {
        case 1:
            this.state = 2367;
            this.iCS_S_VariableOrProcedureCall();
            break;

        case 2:
            this.state = 2368;
            this.iCS_S_ProcedureOrArrayCall();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ICS_S_DictionaryCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_iCS_S_DictionaryCall;
    return this;
}

ICS_S_DictionaryCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ICS_S_DictionaryCallContext.prototype.constructor = ICS_S_DictionaryCallContext;

ICS_S_DictionaryCallContext.prototype.dictionaryCallStmt = function() {
    return this.getTypedRuleContext(DictionaryCallStmtContext,0);
};




VisualBasic6Parser.ICS_S_DictionaryCallContext = ICS_S_DictionaryCallContext;

VisualBasic6Parser.prototype.iCS_S_DictionaryCall = function() {

    var localctx = new ICS_S_DictionaryCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 232, VisualBasic6Parser.RULE_iCS_S_DictionaryCall);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2371;
        this.dictionaryCallStmt();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ArgsCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_argsCall;
    return this;
}

ArgsCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgsCallContext.prototype.constructor = ArgsCallContext;

ArgsCallContext.prototype.argCall = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ArgCallContext);
    } else {
        return this.getTypedRuleContext(ArgCallContext,i);
    }
};

ArgsCallContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};


ArgsCallContext.prototype.SEMICOLON = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.SEMICOLON);
    } else {
        return this.getToken(VisualBasic6Parser.SEMICOLON, i);
    }
};


ArgsCallContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.ArgsCallContext = ArgsCallContext;

VisualBasic6Parser.prototype.argsCall = function() {

    var localctx = new ArgsCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 234, VisualBasic6Parser.RULE_argsCall);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2385;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,392,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 2374;
                _la = this._input.LA(1);
                if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)) | (1 << (VisualBasic6Parser.DOT - 162)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 162)) | (1 << (VisualBasic6Parser.LPAREN - 162)) | (1 << (VisualBasic6Parser.MINUS - 162)))) !== 0) || ((((_la - 195)) & ~0x1f) == 0 && ((1 << (_la - 195)) & ((1 << (VisualBasic6Parser.PLUS - 195)) | (1 << (VisualBasic6Parser.L_SQUARE_BRACKET - 195)) | (1 << (VisualBasic6Parser.STRINGLITERAL - 195)) | (1 << (VisualBasic6Parser.DATELITERAL - 195)) | (1 << (VisualBasic6Parser.COLORLITERAL - 195)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 195)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 195)) | (1 << (VisualBasic6Parser.FILENUMBER - 195)) | (1 << (VisualBasic6Parser.IDENTIFIER - 195)))) !== 0)) {
                    this.state = 2373;
                    this.argCall();
                }

                this.state = 2377;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 2376;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 2379;
                _la = this._input.LA(1);
                if(!(_la===VisualBasic6Parser.COMMA || _la===VisualBasic6Parser.SEMICOLON)) {
                this._errHandler.recoverInline(this);
                }
                else {
                    this.consume();
                }
                this.state = 2381;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,391,this._ctx);
                if(la_===1) {
                    this.state = 2380;
                    this.match(VisualBasic6Parser.WS);

                } 
            }
            this.state = 2387;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,392,this._ctx);
        }

        this.state = 2388;
        this.argCall();
        this.state = 2401;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,396,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 2390;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 2389;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 2392;
                _la = this._input.LA(1);
                if(!(_la===VisualBasic6Parser.COMMA || _la===VisualBasic6Parser.SEMICOLON)) {
                this._errHandler.recoverInline(this);
                }
                else {
                    this.consume();
                }
                this.state = 2394;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,394,this._ctx);
                if(la_===1) {
                    this.state = 2393;
                    this.match(VisualBasic6Parser.WS);

                }
                this.state = 2397;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,395,this._ctx);
                if(la_===1) {
                    this.state = 2396;
                    this.argCall();

                } 
            }
            this.state = 2403;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,396,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ArgCallContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_argCall;
    return this;
}

ArgCallContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgCallContext.prototype.constructor = ArgCallContext;

ArgCallContext.prototype.valueStmt = function() {
    return this.getTypedRuleContext(ValueStmtContext,0);
};

ArgCallContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};

ArgCallContext.prototype.BYVAL = function() {
    return this.getToken(VisualBasic6Parser.BYVAL, 0);
};

ArgCallContext.prototype.BYREF = function() {
    return this.getToken(VisualBasic6Parser.BYREF, 0);
};

ArgCallContext.prototype.PARAMARRAY = function() {
    return this.getToken(VisualBasic6Parser.PARAMARRAY, 0);
};




VisualBasic6Parser.ArgCallContext = ArgCallContext;

VisualBasic6Parser.prototype.argCall = function() {

    var localctx = new ArgCallContext(this, this._ctx, this.state);
    this.enterRule(localctx, 236, VisualBasic6Parser.RULE_argCall);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2406;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,397,this._ctx);
        if(la_===1) {
            this.state = 2404;
            _la = this._input.LA(1);
            if(!(_la===VisualBasic6Parser.BYVAL || _la===VisualBasic6Parser.BYREF || _la===VisualBasic6Parser.PARAMARRAY)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
            this.state = 2405;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 2408;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DictionaryCallStmtContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_dictionaryCallStmt;
    return this;
}

DictionaryCallStmtContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DictionaryCallStmtContext.prototype.constructor = DictionaryCallStmtContext;

DictionaryCallStmtContext.prototype.EXCLAMATIONMARK = function() {
    return this.getToken(VisualBasic6Parser.EXCLAMATIONMARK, 0);
};

DictionaryCallStmtContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

DictionaryCallStmtContext.prototype.typeHint = function() {
    return this.getTypedRuleContext(TypeHintContext,0);
};




VisualBasic6Parser.DictionaryCallStmtContext = DictionaryCallStmtContext;

VisualBasic6Parser.prototype.dictionaryCallStmt = function() {

    var localctx = new DictionaryCallStmtContext(this, this._ctx, this.state);
    this.enterRule(localctx, 238, VisualBasic6Parser.RULE_dictionaryCallStmt);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2410;
        this.match(VisualBasic6Parser.EXCLAMATIONMARK);
        this.state = 2411;
        this.ambiguousIdentifier();
        this.state = 2413;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,398,this._ctx);
        if(la_===1) {
            this.state = 2412;
            this.typeHint();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ArgListContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_argList;
    return this;
}

ArgListContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgListContext.prototype.constructor = ArgListContext;

ArgListContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

ArgListContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

ArgListContext.prototype.arg = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ArgContext);
    } else {
        return this.getTypedRuleContext(ArgContext,i);
    }
};

ArgListContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ArgListContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};





VisualBasic6Parser.ArgListContext = ArgListContext;

VisualBasic6Parser.prototype.argList = function() {

    var localctx = new ArgListContext(this, this._ctx, this.state);
    this.enterRule(localctx, 240, VisualBasic6Parser.RULE_argList);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2415;
        this.match(VisualBasic6Parser.LPAREN);
        this.state = 2433;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,403,this._ctx);
        if(la_===1) {
            this.state = 2417;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2416;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2419;
            this.arg();
            this.state = 2430;
            this._errHandler.sync(this);
            var _alt = this._interp.adaptivePredict(this._input,402,this._ctx)
            while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
                if(_alt===1) {
                    this.state = 2421;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2420;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2423;
                    this.match(VisualBasic6Parser.COMMA);
                    this.state = 2425;
                    _la = this._input.LA(1);
                    if(_la===VisualBasic6Parser.WS) {
                        this.state = 2424;
                        this.match(VisualBasic6Parser.WS);
                    }

                    this.state = 2427;
                    this.arg(); 
                }
                this.state = 2432;
                this._errHandler.sync(this);
                _alt = this._interp.adaptivePredict(this._input,402,this._ctx);
            }


        }
        this.state = 2436;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 2435;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 2438;
        this.match(VisualBasic6Parser.RPAREN);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ArgContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_arg;
    return this;
}

ArgContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgContext.prototype.constructor = ArgContext;

ArgContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

ArgContext.prototype.OPTIONAL = function() {
    return this.getToken(VisualBasic6Parser.OPTIONAL, 0);
};

ArgContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


ArgContext.prototype.PARAMARRAY = function() {
    return this.getToken(VisualBasic6Parser.PARAMARRAY, 0);
};

ArgContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

ArgContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

ArgContext.prototype.asTypeClause = function() {
    return this.getTypedRuleContext(AsTypeClauseContext,0);
};

ArgContext.prototype.argDefaultValue = function() {
    return this.getTypedRuleContext(ArgDefaultValueContext,0);
};

ArgContext.prototype.BYVAL = function() {
    return this.getToken(VisualBasic6Parser.BYVAL, 0);
};

ArgContext.prototype.BYREF = function() {
    return this.getToken(VisualBasic6Parser.BYREF, 0);
};




VisualBasic6Parser.ArgContext = ArgContext;

VisualBasic6Parser.prototype.arg = function() {

    var localctx = new ArgContext(this, this._ctx, this.state);
    this.enterRule(localctx, 242, VisualBasic6Parser.RULE_arg);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2442;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,405,this._ctx);
        if(la_===1) {
            this.state = 2440;
            this.match(VisualBasic6Parser.OPTIONAL);
            this.state = 2441;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 2446;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,406,this._ctx);
        if(la_===1) {
            this.state = 2444;
            _la = this._input.LA(1);
            if(!(_la===VisualBasic6Parser.BYVAL || _la===VisualBasic6Parser.BYREF)) {
            this._errHandler.recoverInline(this);
            }
            else {
                this.consume();
            }
            this.state = 2445;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 2450;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,407,this._ctx);
        if(la_===1) {
            this.state = 2448;
            this.match(VisualBasic6Parser.PARAMARRAY);
            this.state = 2449;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 2452;
        this.ambiguousIdentifier();
        this.state = 2461;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,410,this._ctx);
        if(la_===1) {
            this.state = 2454;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2453;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2456;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 2458;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2457;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2460;
            this.match(VisualBasic6Parser.RPAREN);

        }
        this.state = 2465;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,411,this._ctx);
        if(la_===1) {
            this.state = 2463;
            this.match(VisualBasic6Parser.WS);
            this.state = 2464;
            this.asTypeClause();

        }
        this.state = 2471;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,413,this._ctx);
        if(la_===1) {
            this.state = 2468;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2467;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2470;
            this.argDefaultValue();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ArgDefaultValueContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_argDefaultValue;
    return this;
}

ArgDefaultValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgDefaultValueContext.prototype.constructor = ArgDefaultValueContext;

ArgDefaultValueContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

ArgDefaultValueContext.prototype.literal = function() {
    return this.getTypedRuleContext(LiteralContext,0);
};

ArgDefaultValueContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

ArgDefaultValueContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};




VisualBasic6Parser.ArgDefaultValueContext = ArgDefaultValueContext;

VisualBasic6Parser.prototype.argDefaultValue = function() {

    var localctx = new ArgDefaultValueContext(this, this._ctx, this.state);
    this.enterRule(localctx, 244, VisualBasic6Parser.RULE_argDefaultValue);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2473;
        this.match(VisualBasic6Parser.EQ);
        this.state = 2475;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 2474;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 2479;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,415,this._ctx);
        switch(la_) {
        case 1:
            this.state = 2477;
            this.literal();
            break;

        case 2:
            this.state = 2478;
            this.ambiguousIdentifier();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SubscriptsContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_subscripts;
    return this;
}

SubscriptsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SubscriptsContext.prototype.constructor = SubscriptsContext;

SubscriptsContext.prototype.subscript = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(SubscriptContext);
    } else {
        return this.getTypedRuleContext(SubscriptContext,i);
    }
};

SubscriptsContext.prototype.COMMA = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.COMMA);
    } else {
        return this.getToken(VisualBasic6Parser.COMMA, i);
    }
};


SubscriptsContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.SubscriptsContext = SubscriptsContext;

VisualBasic6Parser.prototype.subscripts = function() {

    var localctx = new SubscriptsContext(this, this._ctx, this.state);
    this.enterRule(localctx, 246, VisualBasic6Parser.RULE_subscripts);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2481;
        this.subscript();
        this.state = 2492;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,418,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 2483;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 2482;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 2485;
                this.match(VisualBasic6Parser.COMMA);
                this.state = 2487;
                _la = this._input.LA(1);
                if(_la===VisualBasic6Parser.WS) {
                    this.state = 2486;
                    this.match(VisualBasic6Parser.WS);
                }

                this.state = 2489;
                this.subscript(); 
            }
            this.state = 2494;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,418,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SubscriptContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_subscript;
    return this;
}

SubscriptContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SubscriptContext.prototype.constructor = SubscriptContext;

SubscriptContext.prototype.valueStmt = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(ValueStmtContext);
    } else {
        return this.getTypedRuleContext(ValueStmtContext,i);
    }
};

SubscriptContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


SubscriptContext.prototype.TO = function() {
    return this.getToken(VisualBasic6Parser.TO, 0);
};




VisualBasic6Parser.SubscriptContext = SubscriptContext;

VisualBasic6Parser.prototype.subscript = function() {

    var localctx = new SubscriptContext(this, this._ctx, this.state);
    this.enterRule(localctx, 248, VisualBasic6Parser.RULE_subscript);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2500;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,419,this._ctx);
        if(la_===1) {
            this.state = 2495;
            this.valueStmt(0);
            this.state = 2496;
            this.match(VisualBasic6Parser.WS);
            this.state = 2497;
            this.match(VisualBasic6Parser.TO);
            this.state = 2498;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 2502;
        this.valueStmt(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AmbiguousIdentifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_ambiguousIdentifier;
    return this;
}

AmbiguousIdentifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AmbiguousIdentifierContext.prototype.constructor = AmbiguousIdentifierContext;

AmbiguousIdentifierContext.prototype.IDENTIFIER = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.IDENTIFIER);
    } else {
        return this.getToken(VisualBasic6Parser.IDENTIFIER, i);
    }
};


AmbiguousIdentifierContext.prototype.ambiguousKeyword = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AmbiguousKeywordContext);
    } else {
        return this.getTypedRuleContext(AmbiguousKeywordContext,i);
    }
};

AmbiguousIdentifierContext.prototype.L_SQUARE_BRACKET = function() {
    return this.getToken(VisualBasic6Parser.L_SQUARE_BRACKET, 0);
};

AmbiguousIdentifierContext.prototype.R_SQUARE_BRACKET = function() {
    return this.getToken(VisualBasic6Parser.R_SQUARE_BRACKET, 0);
};




VisualBasic6Parser.AmbiguousIdentifierContext = AmbiguousIdentifierContext;

VisualBasic6Parser.prototype.ambiguousIdentifier = function() {

    var localctx = new AmbiguousIdentifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 250, VisualBasic6Parser.RULE_ambiguousIdentifier);
    var _la = 0; // Token type
    try {
        this.state = 2518;
        switch(this._input.LA(1)) {
        case VisualBasic6Parser.ACCESS:
        case VisualBasic6Parser.ADDRESSOF:
        case VisualBasic6Parser.ALIAS:
        case VisualBasic6Parser.AND:
        case VisualBasic6Parser.ATTRIBUTE:
        case VisualBasic6Parser.APPACTIVATE:
        case VisualBasic6Parser.APPEND:
        case VisualBasic6Parser.AS:
        case VisualBasic6Parser.BEGIN:
        case VisualBasic6Parser.BEEP:
        case VisualBasic6Parser.BINARY:
        case VisualBasic6Parser.BOOLEAN:
        case VisualBasic6Parser.BYVAL:
        case VisualBasic6Parser.BYREF:
        case VisualBasic6Parser.BYTE:
        case VisualBasic6Parser.CALL:
        case VisualBasic6Parser.CASE:
        case VisualBasic6Parser.CHDIR:
        case VisualBasic6Parser.CHDRIVE:
        case VisualBasic6Parser.CLASS:
        case VisualBasic6Parser.CLOSE:
        case VisualBasic6Parser.COLLECTION:
        case VisualBasic6Parser.CONST:
        case VisualBasic6Parser.DATE:
        case VisualBasic6Parser.DECLARE:
        case VisualBasic6Parser.DEFBOOL:
        case VisualBasic6Parser.DEFBYTE:
        case VisualBasic6Parser.DEFDATE:
        case VisualBasic6Parser.DEFDBL:
        case VisualBasic6Parser.DEFDEC:
        case VisualBasic6Parser.DEFCUR:
        case VisualBasic6Parser.DEFINT:
        case VisualBasic6Parser.DEFLNG:
        case VisualBasic6Parser.DEFOBJ:
        case VisualBasic6Parser.DEFSNG:
        case VisualBasic6Parser.DEFSTR:
        case VisualBasic6Parser.DEFVAR:
        case VisualBasic6Parser.DELETESETTING:
        case VisualBasic6Parser.DIM:
        case VisualBasic6Parser.DO:
        case VisualBasic6Parser.DOUBLE:
        case VisualBasic6Parser.EACH:
        case VisualBasic6Parser.ELSE:
        case VisualBasic6Parser.ELSEIF:
        case VisualBasic6Parser.END:
        case VisualBasic6Parser.ENUM:
        case VisualBasic6Parser.EQV:
        case VisualBasic6Parser.ERASE:
        case VisualBasic6Parser.ERROR:
        case VisualBasic6Parser.EVENT:
        case VisualBasic6Parser.FALSE:
        case VisualBasic6Parser.FILECOPY:
        case VisualBasic6Parser.FRIEND:
        case VisualBasic6Parser.FOR:
        case VisualBasic6Parser.FUNCTION:
        case VisualBasic6Parser.GET:
        case VisualBasic6Parser.GLOBAL:
        case VisualBasic6Parser.GOSUB:
        case VisualBasic6Parser.GOTO:
        case VisualBasic6Parser.IF:
        case VisualBasic6Parser.IMP:
        case VisualBasic6Parser.IMPLEMENTS:
        case VisualBasic6Parser.IN:
        case VisualBasic6Parser.INPUT:
        case VisualBasic6Parser.IS:
        case VisualBasic6Parser.INTEGER:
        case VisualBasic6Parser.KILL:
        case VisualBasic6Parser.LOAD:
        case VisualBasic6Parser.LOCK:
        case VisualBasic6Parser.LONG:
        case VisualBasic6Parser.LOOP:
        case VisualBasic6Parser.LEN:
        case VisualBasic6Parser.LET:
        case VisualBasic6Parser.LIB:
        case VisualBasic6Parser.LIKE:
        case VisualBasic6Parser.LSET:
        case VisualBasic6Parser.ME:
        case VisualBasic6Parser.MID:
        case VisualBasic6Parser.MKDIR:
        case VisualBasic6Parser.MOD:
        case VisualBasic6Parser.NAME:
        case VisualBasic6Parser.NEXT:
        case VisualBasic6Parser.NEW:
        case VisualBasic6Parser.NOT:
        case VisualBasic6Parser.NOTHING:
        case VisualBasic6Parser.NULL:
        case VisualBasic6Parser.ON:
        case VisualBasic6Parser.OPEN:
        case VisualBasic6Parser.OPTIONAL:
        case VisualBasic6Parser.OR:
        case VisualBasic6Parser.OUTPUT:
        case VisualBasic6Parser.PARAMARRAY:
        case VisualBasic6Parser.PRESERVE:
        case VisualBasic6Parser.PRINT:
        case VisualBasic6Parser.PRIVATE:
        case VisualBasic6Parser.PUBLIC:
        case VisualBasic6Parser.PUT:
        case VisualBasic6Parser.RANDOM:
        case VisualBasic6Parser.RANDOMIZE:
        case VisualBasic6Parser.RAISEEVENT:
        case VisualBasic6Parser.READ:
        case VisualBasic6Parser.REDIM:
        case VisualBasic6Parser.REM:
        case VisualBasic6Parser.RESET:
        case VisualBasic6Parser.RESUME:
        case VisualBasic6Parser.RETURN:
        case VisualBasic6Parser.RMDIR:
        case VisualBasic6Parser.RSET:
        case VisualBasic6Parser.SAVEPICTURE:
        case VisualBasic6Parser.SAVESETTING:
        case VisualBasic6Parser.SEEK:
        case VisualBasic6Parser.SELECT:
        case VisualBasic6Parser.SENDKEYS:
        case VisualBasic6Parser.SET:
        case VisualBasic6Parser.SETATTR:
        case VisualBasic6Parser.SHARED:
        case VisualBasic6Parser.SINGLE:
        case VisualBasic6Parser.SPC:
        case VisualBasic6Parser.STATIC:
        case VisualBasic6Parser.STEP:
        case VisualBasic6Parser.STOP:
        case VisualBasic6Parser.STRING:
        case VisualBasic6Parser.SUB:
        case VisualBasic6Parser.TAB:
        case VisualBasic6Parser.TEXT:
        case VisualBasic6Parser.THEN:
        case VisualBasic6Parser.TIME:
        case VisualBasic6Parser.TO:
        case VisualBasic6Parser.TRUE:
        case VisualBasic6Parser.TYPE:
        case VisualBasic6Parser.TYPEOF:
        case VisualBasic6Parser.UNLOAD:
        case VisualBasic6Parser.UNLOCK:
        case VisualBasic6Parser.UNTIL:
        case VisualBasic6Parser.VARIANT:
        case VisualBasic6Parser.VERSION:
        case VisualBasic6Parser.WEND:
        case VisualBasic6Parser.WHILE:
        case VisualBasic6Parser.WIDTH:
        case VisualBasic6Parser.WITH:
        case VisualBasic6Parser.WITHEVENTS:
        case VisualBasic6Parser.WRITE:
        case VisualBasic6Parser.XOR:
        case VisualBasic6Parser.IDENTIFIER:
            this.enterOuterAlt(localctx, 1);
            this.state = 2506; 
            this._errHandler.sync(this);
            var _alt = 1;
            do {
            	switch (_alt) {
            	case 1:
            		this.state = 2506;
            		switch(this._input.LA(1)) {
            		case VisualBasic6Parser.IDENTIFIER:
            		    this.state = 2504;
            		    this.match(VisualBasic6Parser.IDENTIFIER);
            		    break;
            		case VisualBasic6Parser.ACCESS:
            		case VisualBasic6Parser.ADDRESSOF:
            		case VisualBasic6Parser.ALIAS:
            		case VisualBasic6Parser.AND:
            		case VisualBasic6Parser.ATTRIBUTE:
            		case VisualBasic6Parser.APPACTIVATE:
            		case VisualBasic6Parser.APPEND:
            		case VisualBasic6Parser.AS:
            		case VisualBasic6Parser.BEGIN:
            		case VisualBasic6Parser.BEEP:
            		case VisualBasic6Parser.BINARY:
            		case VisualBasic6Parser.BOOLEAN:
            		case VisualBasic6Parser.BYVAL:
            		case VisualBasic6Parser.BYREF:
            		case VisualBasic6Parser.BYTE:
            		case VisualBasic6Parser.CALL:
            		case VisualBasic6Parser.CASE:
            		case VisualBasic6Parser.CHDIR:
            		case VisualBasic6Parser.CHDRIVE:
            		case VisualBasic6Parser.CLASS:
            		case VisualBasic6Parser.CLOSE:
            		case VisualBasic6Parser.COLLECTION:
            		case VisualBasic6Parser.CONST:
            		case VisualBasic6Parser.DATE:
            		case VisualBasic6Parser.DECLARE:
            		case VisualBasic6Parser.DEFBOOL:
            		case VisualBasic6Parser.DEFBYTE:
            		case VisualBasic6Parser.DEFDATE:
            		case VisualBasic6Parser.DEFDBL:
            		case VisualBasic6Parser.DEFDEC:
            		case VisualBasic6Parser.DEFCUR:
            		case VisualBasic6Parser.DEFINT:
            		case VisualBasic6Parser.DEFLNG:
            		case VisualBasic6Parser.DEFOBJ:
            		case VisualBasic6Parser.DEFSNG:
            		case VisualBasic6Parser.DEFSTR:
            		case VisualBasic6Parser.DEFVAR:
            		case VisualBasic6Parser.DELETESETTING:
            		case VisualBasic6Parser.DIM:
            		case VisualBasic6Parser.DO:
            		case VisualBasic6Parser.DOUBLE:
            		case VisualBasic6Parser.EACH:
            		case VisualBasic6Parser.ELSE:
            		case VisualBasic6Parser.ELSEIF:
            		case VisualBasic6Parser.END:
            		case VisualBasic6Parser.ENUM:
            		case VisualBasic6Parser.EQV:
            		case VisualBasic6Parser.ERASE:
            		case VisualBasic6Parser.ERROR:
            		case VisualBasic6Parser.EVENT:
            		case VisualBasic6Parser.FALSE:
            		case VisualBasic6Parser.FILECOPY:
            		case VisualBasic6Parser.FRIEND:
            		case VisualBasic6Parser.FOR:
            		case VisualBasic6Parser.FUNCTION:
            		case VisualBasic6Parser.GET:
            		case VisualBasic6Parser.GLOBAL:
            		case VisualBasic6Parser.GOSUB:
            		case VisualBasic6Parser.GOTO:
            		case VisualBasic6Parser.IF:
            		case VisualBasic6Parser.IMP:
            		case VisualBasic6Parser.IMPLEMENTS:
            		case VisualBasic6Parser.IN:
            		case VisualBasic6Parser.INPUT:
            		case VisualBasic6Parser.IS:
            		case VisualBasic6Parser.INTEGER:
            		case VisualBasic6Parser.KILL:
            		case VisualBasic6Parser.LOAD:
            		case VisualBasic6Parser.LOCK:
            		case VisualBasic6Parser.LONG:
            		case VisualBasic6Parser.LOOP:
            		case VisualBasic6Parser.LEN:
            		case VisualBasic6Parser.LET:
            		case VisualBasic6Parser.LIB:
            		case VisualBasic6Parser.LIKE:
            		case VisualBasic6Parser.LSET:
            		case VisualBasic6Parser.ME:
            		case VisualBasic6Parser.MID:
            		case VisualBasic6Parser.MKDIR:
            		case VisualBasic6Parser.MOD:
            		case VisualBasic6Parser.NAME:
            		case VisualBasic6Parser.NEXT:
            		case VisualBasic6Parser.NEW:
            		case VisualBasic6Parser.NOT:
            		case VisualBasic6Parser.NOTHING:
            		case VisualBasic6Parser.NULL:
            		case VisualBasic6Parser.ON:
            		case VisualBasic6Parser.OPEN:
            		case VisualBasic6Parser.OPTIONAL:
            		case VisualBasic6Parser.OR:
            		case VisualBasic6Parser.OUTPUT:
            		case VisualBasic6Parser.PARAMARRAY:
            		case VisualBasic6Parser.PRESERVE:
            		case VisualBasic6Parser.PRINT:
            		case VisualBasic6Parser.PRIVATE:
            		case VisualBasic6Parser.PUBLIC:
            		case VisualBasic6Parser.PUT:
            		case VisualBasic6Parser.RANDOM:
            		case VisualBasic6Parser.RANDOMIZE:
            		case VisualBasic6Parser.RAISEEVENT:
            		case VisualBasic6Parser.READ:
            		case VisualBasic6Parser.REDIM:
            		case VisualBasic6Parser.REM:
            		case VisualBasic6Parser.RESET:
            		case VisualBasic6Parser.RESUME:
            		case VisualBasic6Parser.RETURN:
            		case VisualBasic6Parser.RMDIR:
            		case VisualBasic6Parser.RSET:
            		case VisualBasic6Parser.SAVEPICTURE:
            		case VisualBasic6Parser.SAVESETTING:
            		case VisualBasic6Parser.SEEK:
            		case VisualBasic6Parser.SELECT:
            		case VisualBasic6Parser.SENDKEYS:
            		case VisualBasic6Parser.SET:
            		case VisualBasic6Parser.SETATTR:
            		case VisualBasic6Parser.SHARED:
            		case VisualBasic6Parser.SINGLE:
            		case VisualBasic6Parser.SPC:
            		case VisualBasic6Parser.STATIC:
            		case VisualBasic6Parser.STEP:
            		case VisualBasic6Parser.STOP:
            		case VisualBasic6Parser.STRING:
            		case VisualBasic6Parser.SUB:
            		case VisualBasic6Parser.TAB:
            		case VisualBasic6Parser.TEXT:
            		case VisualBasic6Parser.THEN:
            		case VisualBasic6Parser.TIME:
            		case VisualBasic6Parser.TO:
            		case VisualBasic6Parser.TRUE:
            		case VisualBasic6Parser.TYPE:
            		case VisualBasic6Parser.TYPEOF:
            		case VisualBasic6Parser.UNLOAD:
            		case VisualBasic6Parser.UNLOCK:
            		case VisualBasic6Parser.UNTIL:
            		case VisualBasic6Parser.VARIANT:
            		case VisualBasic6Parser.VERSION:
            		case VisualBasic6Parser.WEND:
            		case VisualBasic6Parser.WHILE:
            		case VisualBasic6Parser.WIDTH:
            		case VisualBasic6Parser.WITH:
            		case VisualBasic6Parser.WITHEVENTS:
            		case VisualBasic6Parser.WRITE:
            		case VisualBasic6Parser.XOR:
            		    this.state = 2505;
            		    this.ambiguousKeyword();
            		    break;
            		default:
            		    throw new antlr4.error.NoViableAltException(this);
            		}
            		break;
            	default:
            		throw new antlr4.error.NoViableAltException(this);
            	}
            	this.state = 2508; 
            	this._errHandler.sync(this);
            	_alt = this._interp.adaptivePredict(this._input,421, this._ctx);
            } while ( _alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER );
            break;
        case VisualBasic6Parser.L_SQUARE_BRACKET:
            this.enterOuterAlt(localctx, 2);
            this.state = 2510;
            this.match(VisualBasic6Parser.L_SQUARE_BRACKET);
            this.state = 2513; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 2513;
                switch(this._input.LA(1)) {
                case VisualBasic6Parser.IDENTIFIER:
                    this.state = 2511;
                    this.match(VisualBasic6Parser.IDENTIFIER);
                    break;
                case VisualBasic6Parser.ACCESS:
                case VisualBasic6Parser.ADDRESSOF:
                case VisualBasic6Parser.ALIAS:
                case VisualBasic6Parser.AND:
                case VisualBasic6Parser.ATTRIBUTE:
                case VisualBasic6Parser.APPACTIVATE:
                case VisualBasic6Parser.APPEND:
                case VisualBasic6Parser.AS:
                case VisualBasic6Parser.BEGIN:
                case VisualBasic6Parser.BEEP:
                case VisualBasic6Parser.BINARY:
                case VisualBasic6Parser.BOOLEAN:
                case VisualBasic6Parser.BYVAL:
                case VisualBasic6Parser.BYREF:
                case VisualBasic6Parser.BYTE:
                case VisualBasic6Parser.CALL:
                case VisualBasic6Parser.CASE:
                case VisualBasic6Parser.CHDIR:
                case VisualBasic6Parser.CHDRIVE:
                case VisualBasic6Parser.CLASS:
                case VisualBasic6Parser.CLOSE:
                case VisualBasic6Parser.COLLECTION:
                case VisualBasic6Parser.CONST:
                case VisualBasic6Parser.DATE:
                case VisualBasic6Parser.DECLARE:
                case VisualBasic6Parser.DEFBOOL:
                case VisualBasic6Parser.DEFBYTE:
                case VisualBasic6Parser.DEFDATE:
                case VisualBasic6Parser.DEFDBL:
                case VisualBasic6Parser.DEFDEC:
                case VisualBasic6Parser.DEFCUR:
                case VisualBasic6Parser.DEFINT:
                case VisualBasic6Parser.DEFLNG:
                case VisualBasic6Parser.DEFOBJ:
                case VisualBasic6Parser.DEFSNG:
                case VisualBasic6Parser.DEFSTR:
                case VisualBasic6Parser.DEFVAR:
                case VisualBasic6Parser.DELETESETTING:
                case VisualBasic6Parser.DIM:
                case VisualBasic6Parser.DO:
                case VisualBasic6Parser.DOUBLE:
                case VisualBasic6Parser.EACH:
                case VisualBasic6Parser.ELSE:
                case VisualBasic6Parser.ELSEIF:
                case VisualBasic6Parser.END:
                case VisualBasic6Parser.ENUM:
                case VisualBasic6Parser.EQV:
                case VisualBasic6Parser.ERASE:
                case VisualBasic6Parser.ERROR:
                case VisualBasic6Parser.EVENT:
                case VisualBasic6Parser.FALSE:
                case VisualBasic6Parser.FILECOPY:
                case VisualBasic6Parser.FRIEND:
                case VisualBasic6Parser.FOR:
                case VisualBasic6Parser.FUNCTION:
                case VisualBasic6Parser.GET:
                case VisualBasic6Parser.GLOBAL:
                case VisualBasic6Parser.GOSUB:
                case VisualBasic6Parser.GOTO:
                case VisualBasic6Parser.IF:
                case VisualBasic6Parser.IMP:
                case VisualBasic6Parser.IMPLEMENTS:
                case VisualBasic6Parser.IN:
                case VisualBasic6Parser.INPUT:
                case VisualBasic6Parser.IS:
                case VisualBasic6Parser.INTEGER:
                case VisualBasic6Parser.KILL:
                case VisualBasic6Parser.LOAD:
                case VisualBasic6Parser.LOCK:
                case VisualBasic6Parser.LONG:
                case VisualBasic6Parser.LOOP:
                case VisualBasic6Parser.LEN:
                case VisualBasic6Parser.LET:
                case VisualBasic6Parser.LIB:
                case VisualBasic6Parser.LIKE:
                case VisualBasic6Parser.LSET:
                case VisualBasic6Parser.ME:
                case VisualBasic6Parser.MID:
                case VisualBasic6Parser.MKDIR:
                case VisualBasic6Parser.MOD:
                case VisualBasic6Parser.NAME:
                case VisualBasic6Parser.NEXT:
                case VisualBasic6Parser.NEW:
                case VisualBasic6Parser.NOT:
                case VisualBasic6Parser.NOTHING:
                case VisualBasic6Parser.NULL:
                case VisualBasic6Parser.ON:
                case VisualBasic6Parser.OPEN:
                case VisualBasic6Parser.OPTIONAL:
                case VisualBasic6Parser.OR:
                case VisualBasic6Parser.OUTPUT:
                case VisualBasic6Parser.PARAMARRAY:
                case VisualBasic6Parser.PRESERVE:
                case VisualBasic6Parser.PRINT:
                case VisualBasic6Parser.PRIVATE:
                case VisualBasic6Parser.PUBLIC:
                case VisualBasic6Parser.PUT:
                case VisualBasic6Parser.RANDOM:
                case VisualBasic6Parser.RANDOMIZE:
                case VisualBasic6Parser.RAISEEVENT:
                case VisualBasic6Parser.READ:
                case VisualBasic6Parser.REDIM:
                case VisualBasic6Parser.REM:
                case VisualBasic6Parser.RESET:
                case VisualBasic6Parser.RESUME:
                case VisualBasic6Parser.RETURN:
                case VisualBasic6Parser.RMDIR:
                case VisualBasic6Parser.RSET:
                case VisualBasic6Parser.SAVEPICTURE:
                case VisualBasic6Parser.SAVESETTING:
                case VisualBasic6Parser.SEEK:
                case VisualBasic6Parser.SELECT:
                case VisualBasic6Parser.SENDKEYS:
                case VisualBasic6Parser.SET:
                case VisualBasic6Parser.SETATTR:
                case VisualBasic6Parser.SHARED:
                case VisualBasic6Parser.SINGLE:
                case VisualBasic6Parser.SPC:
                case VisualBasic6Parser.STATIC:
                case VisualBasic6Parser.STEP:
                case VisualBasic6Parser.STOP:
                case VisualBasic6Parser.STRING:
                case VisualBasic6Parser.SUB:
                case VisualBasic6Parser.TAB:
                case VisualBasic6Parser.TEXT:
                case VisualBasic6Parser.THEN:
                case VisualBasic6Parser.TIME:
                case VisualBasic6Parser.TO:
                case VisualBasic6Parser.TRUE:
                case VisualBasic6Parser.TYPE:
                case VisualBasic6Parser.TYPEOF:
                case VisualBasic6Parser.UNLOAD:
                case VisualBasic6Parser.UNLOCK:
                case VisualBasic6Parser.UNTIL:
                case VisualBasic6Parser.VARIANT:
                case VisualBasic6Parser.VERSION:
                case VisualBasic6Parser.WEND:
                case VisualBasic6Parser.WHILE:
                case VisualBasic6Parser.WIDTH:
                case VisualBasic6Parser.WITH:
                case VisualBasic6Parser.WITHEVENTS:
                case VisualBasic6Parser.WRITE:
                case VisualBasic6Parser.XOR:
                    this.state = 2512;
                    this.ambiguousKeyword();
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                }
                this.state = 2515; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)))) !== 0) || _la===VisualBasic6Parser.IDENTIFIER);
            this.state = 2517;
            this.match(VisualBasic6Parser.R_SQUARE_BRACKET);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AsTypeClauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_asTypeClause;
    return this;
}

AsTypeClauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AsTypeClauseContext.prototype.constructor = AsTypeClauseContext;

AsTypeClauseContext.prototype.AS = function() {
    return this.getToken(VisualBasic6Parser.AS, 0);
};

AsTypeClauseContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};


AsTypeClauseContext.prototype.type = function() {
    return this.getTypedRuleContext(TypeContext,0);
};

AsTypeClauseContext.prototype.NEW = function() {
    return this.getToken(VisualBasic6Parser.NEW, 0);
};

AsTypeClauseContext.prototype.fieldLength = function() {
    return this.getTypedRuleContext(FieldLengthContext,0);
};




VisualBasic6Parser.AsTypeClauseContext = AsTypeClauseContext;

VisualBasic6Parser.prototype.asTypeClause = function() {

    var localctx = new AsTypeClauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 252, VisualBasic6Parser.RULE_asTypeClause);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2520;
        this.match(VisualBasic6Parser.AS);
        this.state = 2521;
        this.match(VisualBasic6Parser.WS);
        this.state = 2524;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,425,this._ctx);
        if(la_===1) {
            this.state = 2522;
            this.match(VisualBasic6Parser.NEW);
            this.state = 2523;
            this.match(VisualBasic6Parser.WS);

        }
        this.state = 2526;
        this.type();
        this.state = 2529;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,426,this._ctx);
        if(la_===1) {
            this.state = 2527;
            this.match(VisualBasic6Parser.WS);
            this.state = 2528;
            this.fieldLength();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BaseTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_baseType;
    return this;
}

BaseTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BaseTypeContext.prototype.constructor = BaseTypeContext;

BaseTypeContext.prototype.BOOLEAN = function() {
    return this.getToken(VisualBasic6Parser.BOOLEAN, 0);
};

BaseTypeContext.prototype.BYTE = function() {
    return this.getToken(VisualBasic6Parser.BYTE, 0);
};

BaseTypeContext.prototype.COLLECTION = function() {
    return this.getToken(VisualBasic6Parser.COLLECTION, 0);
};

BaseTypeContext.prototype.DATE = function() {
    return this.getToken(VisualBasic6Parser.DATE, 0);
};

BaseTypeContext.prototype.DOUBLE = function() {
    return this.getToken(VisualBasic6Parser.DOUBLE, 0);
};

BaseTypeContext.prototype.INTEGER = function() {
    return this.getToken(VisualBasic6Parser.INTEGER, 0);
};

BaseTypeContext.prototype.LONG = function() {
    return this.getToken(VisualBasic6Parser.LONG, 0);
};

BaseTypeContext.prototype.SINGLE = function() {
    return this.getToken(VisualBasic6Parser.SINGLE, 0);
};

BaseTypeContext.prototype.STRING = function() {
    return this.getToken(VisualBasic6Parser.STRING, 0);
};

BaseTypeContext.prototype.VARIANT = function() {
    return this.getToken(VisualBasic6Parser.VARIANT, 0);
};




VisualBasic6Parser.BaseTypeContext = BaseTypeContext;

VisualBasic6Parser.prototype.baseType = function() {

    var localctx = new BaseTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 254, VisualBasic6Parser.RULE_baseType);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2531;
        _la = this._input.LA(1);
        if(!(((((_la - 12)) & ~0x1f) == 0 && ((1 << (_la - 12)) & ((1 << (VisualBasic6Parser.BOOLEAN - 12)) | (1 << (VisualBasic6Parser.BYTE - 12)) | (1 << (VisualBasic6Parser.COLLECTION - 12)) | (1 << (VisualBasic6Parser.DATE - 12)) | (1 << (VisualBasic6Parser.DOUBLE - 12)))) !== 0) || _la===VisualBasic6Parser.INTEGER || _la===VisualBasic6Parser.LONG || ((((_la - 147)) & ~0x1f) == 0 && ((1 << (_la - 147)) & ((1 << (VisualBasic6Parser.SINGLE - 147)) | (1 << (VisualBasic6Parser.STRING - 147)) | (1 << (VisualBasic6Parser.VARIANT - 147)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CertainIdentifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_certainIdentifier;
    return this;
}

CertainIdentifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CertainIdentifierContext.prototype.constructor = CertainIdentifierContext;

CertainIdentifierContext.prototype.IDENTIFIER = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.IDENTIFIER);
    } else {
        return this.getToken(VisualBasic6Parser.IDENTIFIER, i);
    }
};


CertainIdentifierContext.prototype.ambiguousKeyword = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AmbiguousKeywordContext);
    } else {
        return this.getTypedRuleContext(AmbiguousKeywordContext,i);
    }
};




VisualBasic6Parser.CertainIdentifierContext = CertainIdentifierContext;

VisualBasic6Parser.prototype.certainIdentifier = function() {

    var localctx = new CertainIdentifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 256, VisualBasic6Parser.RULE_certainIdentifier);
    var _la = 0; // Token type
    try {
        this.state = 2548;
        switch(this._input.LA(1)) {
        case VisualBasic6Parser.IDENTIFIER:
            this.enterOuterAlt(localctx, 1);
            this.state = 2533;
            this.match(VisualBasic6Parser.IDENTIFIER);
            this.state = 2538;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)))) !== 0) || _la===VisualBasic6Parser.IDENTIFIER) {
                this.state = 2536;
                switch(this._input.LA(1)) {
                case VisualBasic6Parser.ACCESS:
                case VisualBasic6Parser.ADDRESSOF:
                case VisualBasic6Parser.ALIAS:
                case VisualBasic6Parser.AND:
                case VisualBasic6Parser.ATTRIBUTE:
                case VisualBasic6Parser.APPACTIVATE:
                case VisualBasic6Parser.APPEND:
                case VisualBasic6Parser.AS:
                case VisualBasic6Parser.BEGIN:
                case VisualBasic6Parser.BEEP:
                case VisualBasic6Parser.BINARY:
                case VisualBasic6Parser.BOOLEAN:
                case VisualBasic6Parser.BYVAL:
                case VisualBasic6Parser.BYREF:
                case VisualBasic6Parser.BYTE:
                case VisualBasic6Parser.CALL:
                case VisualBasic6Parser.CASE:
                case VisualBasic6Parser.CHDIR:
                case VisualBasic6Parser.CHDRIVE:
                case VisualBasic6Parser.CLASS:
                case VisualBasic6Parser.CLOSE:
                case VisualBasic6Parser.COLLECTION:
                case VisualBasic6Parser.CONST:
                case VisualBasic6Parser.DATE:
                case VisualBasic6Parser.DECLARE:
                case VisualBasic6Parser.DEFBOOL:
                case VisualBasic6Parser.DEFBYTE:
                case VisualBasic6Parser.DEFDATE:
                case VisualBasic6Parser.DEFDBL:
                case VisualBasic6Parser.DEFDEC:
                case VisualBasic6Parser.DEFCUR:
                case VisualBasic6Parser.DEFINT:
                case VisualBasic6Parser.DEFLNG:
                case VisualBasic6Parser.DEFOBJ:
                case VisualBasic6Parser.DEFSNG:
                case VisualBasic6Parser.DEFSTR:
                case VisualBasic6Parser.DEFVAR:
                case VisualBasic6Parser.DELETESETTING:
                case VisualBasic6Parser.DIM:
                case VisualBasic6Parser.DO:
                case VisualBasic6Parser.DOUBLE:
                case VisualBasic6Parser.EACH:
                case VisualBasic6Parser.ELSE:
                case VisualBasic6Parser.ELSEIF:
                case VisualBasic6Parser.END:
                case VisualBasic6Parser.ENUM:
                case VisualBasic6Parser.EQV:
                case VisualBasic6Parser.ERASE:
                case VisualBasic6Parser.ERROR:
                case VisualBasic6Parser.EVENT:
                case VisualBasic6Parser.FALSE:
                case VisualBasic6Parser.FILECOPY:
                case VisualBasic6Parser.FRIEND:
                case VisualBasic6Parser.FOR:
                case VisualBasic6Parser.FUNCTION:
                case VisualBasic6Parser.GET:
                case VisualBasic6Parser.GLOBAL:
                case VisualBasic6Parser.GOSUB:
                case VisualBasic6Parser.GOTO:
                case VisualBasic6Parser.IF:
                case VisualBasic6Parser.IMP:
                case VisualBasic6Parser.IMPLEMENTS:
                case VisualBasic6Parser.IN:
                case VisualBasic6Parser.INPUT:
                case VisualBasic6Parser.IS:
                case VisualBasic6Parser.INTEGER:
                case VisualBasic6Parser.KILL:
                case VisualBasic6Parser.LOAD:
                case VisualBasic6Parser.LOCK:
                case VisualBasic6Parser.LONG:
                case VisualBasic6Parser.LOOP:
                case VisualBasic6Parser.LEN:
                case VisualBasic6Parser.LET:
                case VisualBasic6Parser.LIB:
                case VisualBasic6Parser.LIKE:
                case VisualBasic6Parser.LSET:
                case VisualBasic6Parser.ME:
                case VisualBasic6Parser.MID:
                case VisualBasic6Parser.MKDIR:
                case VisualBasic6Parser.MOD:
                case VisualBasic6Parser.NAME:
                case VisualBasic6Parser.NEXT:
                case VisualBasic6Parser.NEW:
                case VisualBasic6Parser.NOT:
                case VisualBasic6Parser.NOTHING:
                case VisualBasic6Parser.NULL:
                case VisualBasic6Parser.ON:
                case VisualBasic6Parser.OPEN:
                case VisualBasic6Parser.OPTIONAL:
                case VisualBasic6Parser.OR:
                case VisualBasic6Parser.OUTPUT:
                case VisualBasic6Parser.PARAMARRAY:
                case VisualBasic6Parser.PRESERVE:
                case VisualBasic6Parser.PRINT:
                case VisualBasic6Parser.PRIVATE:
                case VisualBasic6Parser.PUBLIC:
                case VisualBasic6Parser.PUT:
                case VisualBasic6Parser.RANDOM:
                case VisualBasic6Parser.RANDOMIZE:
                case VisualBasic6Parser.RAISEEVENT:
                case VisualBasic6Parser.READ:
                case VisualBasic6Parser.REDIM:
                case VisualBasic6Parser.REM:
                case VisualBasic6Parser.RESET:
                case VisualBasic6Parser.RESUME:
                case VisualBasic6Parser.RETURN:
                case VisualBasic6Parser.RMDIR:
                case VisualBasic6Parser.RSET:
                case VisualBasic6Parser.SAVEPICTURE:
                case VisualBasic6Parser.SAVESETTING:
                case VisualBasic6Parser.SEEK:
                case VisualBasic6Parser.SELECT:
                case VisualBasic6Parser.SENDKEYS:
                case VisualBasic6Parser.SET:
                case VisualBasic6Parser.SETATTR:
                case VisualBasic6Parser.SHARED:
                case VisualBasic6Parser.SINGLE:
                case VisualBasic6Parser.SPC:
                case VisualBasic6Parser.STATIC:
                case VisualBasic6Parser.STEP:
                case VisualBasic6Parser.STOP:
                case VisualBasic6Parser.STRING:
                case VisualBasic6Parser.SUB:
                case VisualBasic6Parser.TAB:
                case VisualBasic6Parser.TEXT:
                case VisualBasic6Parser.THEN:
                case VisualBasic6Parser.TIME:
                case VisualBasic6Parser.TO:
                case VisualBasic6Parser.TRUE:
                case VisualBasic6Parser.TYPE:
                case VisualBasic6Parser.TYPEOF:
                case VisualBasic6Parser.UNLOAD:
                case VisualBasic6Parser.UNLOCK:
                case VisualBasic6Parser.UNTIL:
                case VisualBasic6Parser.VARIANT:
                case VisualBasic6Parser.VERSION:
                case VisualBasic6Parser.WEND:
                case VisualBasic6Parser.WHILE:
                case VisualBasic6Parser.WIDTH:
                case VisualBasic6Parser.WITH:
                case VisualBasic6Parser.WITHEVENTS:
                case VisualBasic6Parser.WRITE:
                case VisualBasic6Parser.XOR:
                    this.state = 2534;
                    this.ambiguousKeyword();
                    break;
                case VisualBasic6Parser.IDENTIFIER:
                    this.state = 2535;
                    this.match(VisualBasic6Parser.IDENTIFIER);
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                }
                this.state = 2540;
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            }
            break;
        case VisualBasic6Parser.ACCESS:
        case VisualBasic6Parser.ADDRESSOF:
        case VisualBasic6Parser.ALIAS:
        case VisualBasic6Parser.AND:
        case VisualBasic6Parser.ATTRIBUTE:
        case VisualBasic6Parser.APPACTIVATE:
        case VisualBasic6Parser.APPEND:
        case VisualBasic6Parser.AS:
        case VisualBasic6Parser.BEGIN:
        case VisualBasic6Parser.BEEP:
        case VisualBasic6Parser.BINARY:
        case VisualBasic6Parser.BOOLEAN:
        case VisualBasic6Parser.BYVAL:
        case VisualBasic6Parser.BYREF:
        case VisualBasic6Parser.BYTE:
        case VisualBasic6Parser.CALL:
        case VisualBasic6Parser.CASE:
        case VisualBasic6Parser.CHDIR:
        case VisualBasic6Parser.CHDRIVE:
        case VisualBasic6Parser.CLASS:
        case VisualBasic6Parser.CLOSE:
        case VisualBasic6Parser.COLLECTION:
        case VisualBasic6Parser.CONST:
        case VisualBasic6Parser.DATE:
        case VisualBasic6Parser.DECLARE:
        case VisualBasic6Parser.DEFBOOL:
        case VisualBasic6Parser.DEFBYTE:
        case VisualBasic6Parser.DEFDATE:
        case VisualBasic6Parser.DEFDBL:
        case VisualBasic6Parser.DEFDEC:
        case VisualBasic6Parser.DEFCUR:
        case VisualBasic6Parser.DEFINT:
        case VisualBasic6Parser.DEFLNG:
        case VisualBasic6Parser.DEFOBJ:
        case VisualBasic6Parser.DEFSNG:
        case VisualBasic6Parser.DEFSTR:
        case VisualBasic6Parser.DEFVAR:
        case VisualBasic6Parser.DELETESETTING:
        case VisualBasic6Parser.DIM:
        case VisualBasic6Parser.DO:
        case VisualBasic6Parser.DOUBLE:
        case VisualBasic6Parser.EACH:
        case VisualBasic6Parser.ELSE:
        case VisualBasic6Parser.ELSEIF:
        case VisualBasic6Parser.END:
        case VisualBasic6Parser.ENUM:
        case VisualBasic6Parser.EQV:
        case VisualBasic6Parser.ERASE:
        case VisualBasic6Parser.ERROR:
        case VisualBasic6Parser.EVENT:
        case VisualBasic6Parser.FALSE:
        case VisualBasic6Parser.FILECOPY:
        case VisualBasic6Parser.FRIEND:
        case VisualBasic6Parser.FOR:
        case VisualBasic6Parser.FUNCTION:
        case VisualBasic6Parser.GET:
        case VisualBasic6Parser.GLOBAL:
        case VisualBasic6Parser.GOSUB:
        case VisualBasic6Parser.GOTO:
        case VisualBasic6Parser.IF:
        case VisualBasic6Parser.IMP:
        case VisualBasic6Parser.IMPLEMENTS:
        case VisualBasic6Parser.IN:
        case VisualBasic6Parser.INPUT:
        case VisualBasic6Parser.IS:
        case VisualBasic6Parser.INTEGER:
        case VisualBasic6Parser.KILL:
        case VisualBasic6Parser.LOAD:
        case VisualBasic6Parser.LOCK:
        case VisualBasic6Parser.LONG:
        case VisualBasic6Parser.LOOP:
        case VisualBasic6Parser.LEN:
        case VisualBasic6Parser.LET:
        case VisualBasic6Parser.LIB:
        case VisualBasic6Parser.LIKE:
        case VisualBasic6Parser.LSET:
        case VisualBasic6Parser.ME:
        case VisualBasic6Parser.MID:
        case VisualBasic6Parser.MKDIR:
        case VisualBasic6Parser.MOD:
        case VisualBasic6Parser.NAME:
        case VisualBasic6Parser.NEXT:
        case VisualBasic6Parser.NEW:
        case VisualBasic6Parser.NOT:
        case VisualBasic6Parser.NOTHING:
        case VisualBasic6Parser.NULL:
        case VisualBasic6Parser.ON:
        case VisualBasic6Parser.OPEN:
        case VisualBasic6Parser.OPTIONAL:
        case VisualBasic6Parser.OR:
        case VisualBasic6Parser.OUTPUT:
        case VisualBasic6Parser.PARAMARRAY:
        case VisualBasic6Parser.PRESERVE:
        case VisualBasic6Parser.PRINT:
        case VisualBasic6Parser.PRIVATE:
        case VisualBasic6Parser.PUBLIC:
        case VisualBasic6Parser.PUT:
        case VisualBasic6Parser.RANDOM:
        case VisualBasic6Parser.RANDOMIZE:
        case VisualBasic6Parser.RAISEEVENT:
        case VisualBasic6Parser.READ:
        case VisualBasic6Parser.REDIM:
        case VisualBasic6Parser.REM:
        case VisualBasic6Parser.RESET:
        case VisualBasic6Parser.RESUME:
        case VisualBasic6Parser.RETURN:
        case VisualBasic6Parser.RMDIR:
        case VisualBasic6Parser.RSET:
        case VisualBasic6Parser.SAVEPICTURE:
        case VisualBasic6Parser.SAVESETTING:
        case VisualBasic6Parser.SEEK:
        case VisualBasic6Parser.SELECT:
        case VisualBasic6Parser.SENDKEYS:
        case VisualBasic6Parser.SET:
        case VisualBasic6Parser.SETATTR:
        case VisualBasic6Parser.SHARED:
        case VisualBasic6Parser.SINGLE:
        case VisualBasic6Parser.SPC:
        case VisualBasic6Parser.STATIC:
        case VisualBasic6Parser.STEP:
        case VisualBasic6Parser.STOP:
        case VisualBasic6Parser.STRING:
        case VisualBasic6Parser.SUB:
        case VisualBasic6Parser.TAB:
        case VisualBasic6Parser.TEXT:
        case VisualBasic6Parser.THEN:
        case VisualBasic6Parser.TIME:
        case VisualBasic6Parser.TO:
        case VisualBasic6Parser.TRUE:
        case VisualBasic6Parser.TYPE:
        case VisualBasic6Parser.TYPEOF:
        case VisualBasic6Parser.UNLOAD:
        case VisualBasic6Parser.UNLOCK:
        case VisualBasic6Parser.UNTIL:
        case VisualBasic6Parser.VARIANT:
        case VisualBasic6Parser.VERSION:
        case VisualBasic6Parser.WEND:
        case VisualBasic6Parser.WHILE:
        case VisualBasic6Parser.WIDTH:
        case VisualBasic6Parser.WITH:
        case VisualBasic6Parser.WITHEVENTS:
        case VisualBasic6Parser.WRITE:
        case VisualBasic6Parser.XOR:
            this.enterOuterAlt(localctx, 2);
            this.state = 2541;
            this.ambiguousKeyword();
            this.state = 2544; 
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            do {
                this.state = 2544;
                switch(this._input.LA(1)) {
                case VisualBasic6Parser.ACCESS:
                case VisualBasic6Parser.ADDRESSOF:
                case VisualBasic6Parser.ALIAS:
                case VisualBasic6Parser.AND:
                case VisualBasic6Parser.ATTRIBUTE:
                case VisualBasic6Parser.APPACTIVATE:
                case VisualBasic6Parser.APPEND:
                case VisualBasic6Parser.AS:
                case VisualBasic6Parser.BEGIN:
                case VisualBasic6Parser.BEEP:
                case VisualBasic6Parser.BINARY:
                case VisualBasic6Parser.BOOLEAN:
                case VisualBasic6Parser.BYVAL:
                case VisualBasic6Parser.BYREF:
                case VisualBasic6Parser.BYTE:
                case VisualBasic6Parser.CALL:
                case VisualBasic6Parser.CASE:
                case VisualBasic6Parser.CHDIR:
                case VisualBasic6Parser.CHDRIVE:
                case VisualBasic6Parser.CLASS:
                case VisualBasic6Parser.CLOSE:
                case VisualBasic6Parser.COLLECTION:
                case VisualBasic6Parser.CONST:
                case VisualBasic6Parser.DATE:
                case VisualBasic6Parser.DECLARE:
                case VisualBasic6Parser.DEFBOOL:
                case VisualBasic6Parser.DEFBYTE:
                case VisualBasic6Parser.DEFDATE:
                case VisualBasic6Parser.DEFDBL:
                case VisualBasic6Parser.DEFDEC:
                case VisualBasic6Parser.DEFCUR:
                case VisualBasic6Parser.DEFINT:
                case VisualBasic6Parser.DEFLNG:
                case VisualBasic6Parser.DEFOBJ:
                case VisualBasic6Parser.DEFSNG:
                case VisualBasic6Parser.DEFSTR:
                case VisualBasic6Parser.DEFVAR:
                case VisualBasic6Parser.DELETESETTING:
                case VisualBasic6Parser.DIM:
                case VisualBasic6Parser.DO:
                case VisualBasic6Parser.DOUBLE:
                case VisualBasic6Parser.EACH:
                case VisualBasic6Parser.ELSE:
                case VisualBasic6Parser.ELSEIF:
                case VisualBasic6Parser.END:
                case VisualBasic6Parser.ENUM:
                case VisualBasic6Parser.EQV:
                case VisualBasic6Parser.ERASE:
                case VisualBasic6Parser.ERROR:
                case VisualBasic6Parser.EVENT:
                case VisualBasic6Parser.FALSE:
                case VisualBasic6Parser.FILECOPY:
                case VisualBasic6Parser.FRIEND:
                case VisualBasic6Parser.FOR:
                case VisualBasic6Parser.FUNCTION:
                case VisualBasic6Parser.GET:
                case VisualBasic6Parser.GLOBAL:
                case VisualBasic6Parser.GOSUB:
                case VisualBasic6Parser.GOTO:
                case VisualBasic6Parser.IF:
                case VisualBasic6Parser.IMP:
                case VisualBasic6Parser.IMPLEMENTS:
                case VisualBasic6Parser.IN:
                case VisualBasic6Parser.INPUT:
                case VisualBasic6Parser.IS:
                case VisualBasic6Parser.INTEGER:
                case VisualBasic6Parser.KILL:
                case VisualBasic6Parser.LOAD:
                case VisualBasic6Parser.LOCK:
                case VisualBasic6Parser.LONG:
                case VisualBasic6Parser.LOOP:
                case VisualBasic6Parser.LEN:
                case VisualBasic6Parser.LET:
                case VisualBasic6Parser.LIB:
                case VisualBasic6Parser.LIKE:
                case VisualBasic6Parser.LSET:
                case VisualBasic6Parser.ME:
                case VisualBasic6Parser.MID:
                case VisualBasic6Parser.MKDIR:
                case VisualBasic6Parser.MOD:
                case VisualBasic6Parser.NAME:
                case VisualBasic6Parser.NEXT:
                case VisualBasic6Parser.NEW:
                case VisualBasic6Parser.NOT:
                case VisualBasic6Parser.NOTHING:
                case VisualBasic6Parser.NULL:
                case VisualBasic6Parser.ON:
                case VisualBasic6Parser.OPEN:
                case VisualBasic6Parser.OPTIONAL:
                case VisualBasic6Parser.OR:
                case VisualBasic6Parser.OUTPUT:
                case VisualBasic6Parser.PARAMARRAY:
                case VisualBasic6Parser.PRESERVE:
                case VisualBasic6Parser.PRINT:
                case VisualBasic6Parser.PRIVATE:
                case VisualBasic6Parser.PUBLIC:
                case VisualBasic6Parser.PUT:
                case VisualBasic6Parser.RANDOM:
                case VisualBasic6Parser.RANDOMIZE:
                case VisualBasic6Parser.RAISEEVENT:
                case VisualBasic6Parser.READ:
                case VisualBasic6Parser.REDIM:
                case VisualBasic6Parser.REM:
                case VisualBasic6Parser.RESET:
                case VisualBasic6Parser.RESUME:
                case VisualBasic6Parser.RETURN:
                case VisualBasic6Parser.RMDIR:
                case VisualBasic6Parser.RSET:
                case VisualBasic6Parser.SAVEPICTURE:
                case VisualBasic6Parser.SAVESETTING:
                case VisualBasic6Parser.SEEK:
                case VisualBasic6Parser.SELECT:
                case VisualBasic6Parser.SENDKEYS:
                case VisualBasic6Parser.SET:
                case VisualBasic6Parser.SETATTR:
                case VisualBasic6Parser.SHARED:
                case VisualBasic6Parser.SINGLE:
                case VisualBasic6Parser.SPC:
                case VisualBasic6Parser.STATIC:
                case VisualBasic6Parser.STEP:
                case VisualBasic6Parser.STOP:
                case VisualBasic6Parser.STRING:
                case VisualBasic6Parser.SUB:
                case VisualBasic6Parser.TAB:
                case VisualBasic6Parser.TEXT:
                case VisualBasic6Parser.THEN:
                case VisualBasic6Parser.TIME:
                case VisualBasic6Parser.TO:
                case VisualBasic6Parser.TRUE:
                case VisualBasic6Parser.TYPE:
                case VisualBasic6Parser.TYPEOF:
                case VisualBasic6Parser.UNLOAD:
                case VisualBasic6Parser.UNLOCK:
                case VisualBasic6Parser.UNTIL:
                case VisualBasic6Parser.VARIANT:
                case VisualBasic6Parser.VERSION:
                case VisualBasic6Parser.WEND:
                case VisualBasic6Parser.WHILE:
                case VisualBasic6Parser.WIDTH:
                case VisualBasic6Parser.WITH:
                case VisualBasic6Parser.WITHEVENTS:
                case VisualBasic6Parser.WRITE:
                case VisualBasic6Parser.XOR:
                    this.state = 2542;
                    this.ambiguousKeyword();
                    break;
                case VisualBasic6Parser.IDENTIFIER:
                    this.state = 2543;
                    this.match(VisualBasic6Parser.IDENTIFIER);
                    break;
                default:
                    throw new antlr4.error.NoViableAltException(this);
                }
                this.state = 2546; 
                this._errHandler.sync(this);
                _la = this._input.LA(1);
            } while((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)))) !== 0) || _la===VisualBasic6Parser.IDENTIFIER);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ComparisonOperatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_comparisonOperator;
    return this;
}

ComparisonOperatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ComparisonOperatorContext.prototype.constructor = ComparisonOperatorContext;

ComparisonOperatorContext.prototype.LT = function() {
    return this.getToken(VisualBasic6Parser.LT, 0);
};

ComparisonOperatorContext.prototype.LEQ = function() {
    return this.getToken(VisualBasic6Parser.LEQ, 0);
};

ComparisonOperatorContext.prototype.GT = function() {
    return this.getToken(VisualBasic6Parser.GT, 0);
};

ComparisonOperatorContext.prototype.GEQ = function() {
    return this.getToken(VisualBasic6Parser.GEQ, 0);
};

ComparisonOperatorContext.prototype.EQ = function() {
    return this.getToken(VisualBasic6Parser.EQ, 0);
};

ComparisonOperatorContext.prototype.NEQ = function() {
    return this.getToken(VisualBasic6Parser.NEQ, 0);
};

ComparisonOperatorContext.prototype.IS = function() {
    return this.getToken(VisualBasic6Parser.IS, 0);
};

ComparisonOperatorContext.prototype.LIKE = function() {
    return this.getToken(VisualBasic6Parser.LIKE, 0);
};




VisualBasic6Parser.ComparisonOperatorContext = ComparisonOperatorContext;

VisualBasic6Parser.prototype.comparisonOperator = function() {

    var localctx = new ComparisonOperatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 258, VisualBasic6Parser.RULE_comparisonOperator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2550;
        _la = this._input.LA(1);
        if(!(_la===VisualBasic6Parser.IS || _la===VisualBasic6Parser.LIKE || ((((_la - 182)) & ~0x1f) == 0 && ((1 << (_la - 182)) & ((1 << (VisualBasic6Parser.EQ - 182)) | (1 << (VisualBasic6Parser.GEQ - 182)) | (1 << (VisualBasic6Parser.GT - 182)) | (1 << (VisualBasic6Parser.LEQ - 182)) | (1 << (VisualBasic6Parser.LT - 182)) | (1 << (VisualBasic6Parser.NEQ - 182)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ComplexTypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_complexType;
    return this;
}

ComplexTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ComplexTypeContext.prototype.constructor = ComplexTypeContext;

ComplexTypeContext.prototype.ambiguousIdentifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(AmbiguousIdentifierContext);
    } else {
        return this.getTypedRuleContext(AmbiguousIdentifierContext,i);
    }
};

ComplexTypeContext.prototype.DOT = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.DOT);
    } else {
        return this.getToken(VisualBasic6Parser.DOT, i);
    }
};





VisualBasic6Parser.ComplexTypeContext = ComplexTypeContext;

VisualBasic6Parser.prototype.complexType = function() {

    var localctx = new ComplexTypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 260, VisualBasic6Parser.RULE_complexType);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2552;
        this.ambiguousIdentifier();
        this.state = 2557;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,432,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                this.state = 2553;
                this.match(VisualBasic6Parser.DOT);
                this.state = 2554;
                this.ambiguousIdentifier(); 
            }
            this.state = 2559;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,432,this._ctx);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FieldLengthContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_fieldLength;
    return this;
}

FieldLengthContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FieldLengthContext.prototype.constructor = FieldLengthContext;

FieldLengthContext.prototype.MULT = function() {
    return this.getToken(VisualBasic6Parser.MULT, 0);
};

FieldLengthContext.prototype.INTEGERLITERAL = function() {
    return this.getToken(VisualBasic6Parser.INTEGERLITERAL, 0);
};

FieldLengthContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

FieldLengthContext.prototype.WS = function() {
    return this.getToken(VisualBasic6Parser.WS, 0);
};




VisualBasic6Parser.FieldLengthContext = FieldLengthContext;

VisualBasic6Parser.prototype.fieldLength = function() {

    var localctx = new FieldLengthContext(this, this._ctx, this.state);
    this.enterRule(localctx, 262, VisualBasic6Parser.RULE_fieldLength);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2560;
        this.match(VisualBasic6Parser.MULT);
        this.state = 2562;
        _la = this._input.LA(1);
        if(_la===VisualBasic6Parser.WS) {
            this.state = 2561;
            this.match(VisualBasic6Parser.WS);
        }

        this.state = 2566;
        switch(this._input.LA(1)) {
        case VisualBasic6Parser.INTEGERLITERAL:
            this.state = 2564;
            this.match(VisualBasic6Parser.INTEGERLITERAL);
            break;
        case VisualBasic6Parser.ACCESS:
        case VisualBasic6Parser.ADDRESSOF:
        case VisualBasic6Parser.ALIAS:
        case VisualBasic6Parser.AND:
        case VisualBasic6Parser.ATTRIBUTE:
        case VisualBasic6Parser.APPACTIVATE:
        case VisualBasic6Parser.APPEND:
        case VisualBasic6Parser.AS:
        case VisualBasic6Parser.BEGIN:
        case VisualBasic6Parser.BEEP:
        case VisualBasic6Parser.BINARY:
        case VisualBasic6Parser.BOOLEAN:
        case VisualBasic6Parser.BYVAL:
        case VisualBasic6Parser.BYREF:
        case VisualBasic6Parser.BYTE:
        case VisualBasic6Parser.CALL:
        case VisualBasic6Parser.CASE:
        case VisualBasic6Parser.CHDIR:
        case VisualBasic6Parser.CHDRIVE:
        case VisualBasic6Parser.CLASS:
        case VisualBasic6Parser.CLOSE:
        case VisualBasic6Parser.COLLECTION:
        case VisualBasic6Parser.CONST:
        case VisualBasic6Parser.DATE:
        case VisualBasic6Parser.DECLARE:
        case VisualBasic6Parser.DEFBOOL:
        case VisualBasic6Parser.DEFBYTE:
        case VisualBasic6Parser.DEFDATE:
        case VisualBasic6Parser.DEFDBL:
        case VisualBasic6Parser.DEFDEC:
        case VisualBasic6Parser.DEFCUR:
        case VisualBasic6Parser.DEFINT:
        case VisualBasic6Parser.DEFLNG:
        case VisualBasic6Parser.DEFOBJ:
        case VisualBasic6Parser.DEFSNG:
        case VisualBasic6Parser.DEFSTR:
        case VisualBasic6Parser.DEFVAR:
        case VisualBasic6Parser.DELETESETTING:
        case VisualBasic6Parser.DIM:
        case VisualBasic6Parser.DO:
        case VisualBasic6Parser.DOUBLE:
        case VisualBasic6Parser.EACH:
        case VisualBasic6Parser.ELSE:
        case VisualBasic6Parser.ELSEIF:
        case VisualBasic6Parser.END:
        case VisualBasic6Parser.ENUM:
        case VisualBasic6Parser.EQV:
        case VisualBasic6Parser.ERASE:
        case VisualBasic6Parser.ERROR:
        case VisualBasic6Parser.EVENT:
        case VisualBasic6Parser.FALSE:
        case VisualBasic6Parser.FILECOPY:
        case VisualBasic6Parser.FRIEND:
        case VisualBasic6Parser.FOR:
        case VisualBasic6Parser.FUNCTION:
        case VisualBasic6Parser.GET:
        case VisualBasic6Parser.GLOBAL:
        case VisualBasic6Parser.GOSUB:
        case VisualBasic6Parser.GOTO:
        case VisualBasic6Parser.IF:
        case VisualBasic6Parser.IMP:
        case VisualBasic6Parser.IMPLEMENTS:
        case VisualBasic6Parser.IN:
        case VisualBasic6Parser.INPUT:
        case VisualBasic6Parser.IS:
        case VisualBasic6Parser.INTEGER:
        case VisualBasic6Parser.KILL:
        case VisualBasic6Parser.LOAD:
        case VisualBasic6Parser.LOCK:
        case VisualBasic6Parser.LONG:
        case VisualBasic6Parser.LOOP:
        case VisualBasic6Parser.LEN:
        case VisualBasic6Parser.LET:
        case VisualBasic6Parser.LIB:
        case VisualBasic6Parser.LIKE:
        case VisualBasic6Parser.LSET:
        case VisualBasic6Parser.ME:
        case VisualBasic6Parser.MID:
        case VisualBasic6Parser.MKDIR:
        case VisualBasic6Parser.MOD:
        case VisualBasic6Parser.NAME:
        case VisualBasic6Parser.NEXT:
        case VisualBasic6Parser.NEW:
        case VisualBasic6Parser.NOT:
        case VisualBasic6Parser.NOTHING:
        case VisualBasic6Parser.NULL:
        case VisualBasic6Parser.ON:
        case VisualBasic6Parser.OPEN:
        case VisualBasic6Parser.OPTIONAL:
        case VisualBasic6Parser.OR:
        case VisualBasic6Parser.OUTPUT:
        case VisualBasic6Parser.PARAMARRAY:
        case VisualBasic6Parser.PRESERVE:
        case VisualBasic6Parser.PRINT:
        case VisualBasic6Parser.PRIVATE:
        case VisualBasic6Parser.PUBLIC:
        case VisualBasic6Parser.PUT:
        case VisualBasic6Parser.RANDOM:
        case VisualBasic6Parser.RANDOMIZE:
        case VisualBasic6Parser.RAISEEVENT:
        case VisualBasic6Parser.READ:
        case VisualBasic6Parser.REDIM:
        case VisualBasic6Parser.REM:
        case VisualBasic6Parser.RESET:
        case VisualBasic6Parser.RESUME:
        case VisualBasic6Parser.RETURN:
        case VisualBasic6Parser.RMDIR:
        case VisualBasic6Parser.RSET:
        case VisualBasic6Parser.SAVEPICTURE:
        case VisualBasic6Parser.SAVESETTING:
        case VisualBasic6Parser.SEEK:
        case VisualBasic6Parser.SELECT:
        case VisualBasic6Parser.SENDKEYS:
        case VisualBasic6Parser.SET:
        case VisualBasic6Parser.SETATTR:
        case VisualBasic6Parser.SHARED:
        case VisualBasic6Parser.SINGLE:
        case VisualBasic6Parser.SPC:
        case VisualBasic6Parser.STATIC:
        case VisualBasic6Parser.STEP:
        case VisualBasic6Parser.STOP:
        case VisualBasic6Parser.STRING:
        case VisualBasic6Parser.SUB:
        case VisualBasic6Parser.TAB:
        case VisualBasic6Parser.TEXT:
        case VisualBasic6Parser.THEN:
        case VisualBasic6Parser.TIME:
        case VisualBasic6Parser.TO:
        case VisualBasic6Parser.TRUE:
        case VisualBasic6Parser.TYPE:
        case VisualBasic6Parser.TYPEOF:
        case VisualBasic6Parser.UNLOAD:
        case VisualBasic6Parser.UNLOCK:
        case VisualBasic6Parser.UNTIL:
        case VisualBasic6Parser.VARIANT:
        case VisualBasic6Parser.VERSION:
        case VisualBasic6Parser.WEND:
        case VisualBasic6Parser.WHILE:
        case VisualBasic6Parser.WIDTH:
        case VisualBasic6Parser.WITH:
        case VisualBasic6Parser.WITHEVENTS:
        case VisualBasic6Parser.WRITE:
        case VisualBasic6Parser.XOR:
        case VisualBasic6Parser.L_SQUARE_BRACKET:
        case VisualBasic6Parser.IDENTIFIER:
            this.state = 2565;
            this.ambiguousIdentifier();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LetterrangeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_letterrange;
    return this;
}

LetterrangeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LetterrangeContext.prototype.constructor = LetterrangeContext;

LetterrangeContext.prototype.certainIdentifier = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(CertainIdentifierContext);
    } else {
        return this.getTypedRuleContext(CertainIdentifierContext,i);
    }
};

LetterrangeContext.prototype.MINUS = function() {
    return this.getToken(VisualBasic6Parser.MINUS, 0);
};

LetterrangeContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.LetterrangeContext = LetterrangeContext;

VisualBasic6Parser.prototype.letterrange = function() {

    var localctx = new LetterrangeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 264, VisualBasic6Parser.RULE_letterrange);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2568;
        this.certainIdentifier();
        this.state = 2577;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,437,this._ctx);
        if(la_===1) {
            this.state = 2570;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2569;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2572;
            this.match(VisualBasic6Parser.MINUS);
            this.state = 2574;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2573;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2576;
            this.certainIdentifier();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LineLabelContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_lineLabel;
    return this;
}

LineLabelContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LineLabelContext.prototype.constructor = LineLabelContext;

LineLabelContext.prototype.ambiguousIdentifier = function() {
    return this.getTypedRuleContext(AmbiguousIdentifierContext,0);
};

LineLabelContext.prototype.COLON = function() {
    return this.getToken(VisualBasic6Parser.COLON, 0);
};




VisualBasic6Parser.LineLabelContext = LineLabelContext;

VisualBasic6Parser.prototype.lineLabel = function() {

    var localctx = new LineLabelContext(this, this._ctx, this.state);
    this.enterRule(localctx, 266, VisualBasic6Parser.RULE_lineLabel);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2579;
        this.ambiguousIdentifier();
        this.state = 2580;
        this.match(VisualBasic6Parser.COLON);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LiteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_literal;
    return this;
}

LiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LiteralContext.prototype.constructor = LiteralContext;

LiteralContext.prototype.COLORLITERAL = function() {
    return this.getToken(VisualBasic6Parser.COLORLITERAL, 0);
};

LiteralContext.prototype.DATELITERAL = function() {
    return this.getToken(VisualBasic6Parser.DATELITERAL, 0);
};

LiteralContext.prototype.DOUBLELITERAL = function() {
    return this.getToken(VisualBasic6Parser.DOUBLELITERAL, 0);
};

LiteralContext.prototype.FILENUMBER = function() {
    return this.getToken(VisualBasic6Parser.FILENUMBER, 0);
};

LiteralContext.prototype.INTEGERLITERAL = function() {
    return this.getToken(VisualBasic6Parser.INTEGERLITERAL, 0);
};

LiteralContext.prototype.STRINGLITERAL = function() {
    return this.getToken(VisualBasic6Parser.STRINGLITERAL, 0);
};

LiteralContext.prototype.TRUE = function() {
    return this.getToken(VisualBasic6Parser.TRUE, 0);
};

LiteralContext.prototype.FALSE = function() {
    return this.getToken(VisualBasic6Parser.FALSE, 0);
};

LiteralContext.prototype.NOTHING = function() {
    return this.getToken(VisualBasic6Parser.NOTHING, 0);
};

LiteralContext.prototype.NULL = function() {
    return this.getToken(VisualBasic6Parser.NULL, 0);
};




VisualBasic6Parser.LiteralContext = LiteralContext;

VisualBasic6Parser.prototype.literal = function() {

    var localctx = new LiteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 268, VisualBasic6Parser.RULE_literal);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2582;
        _la = this._input.LA(1);
        if(!(_la===VisualBasic6Parser.FALSE || _la===VisualBasic6Parser.NOTHING || _la===VisualBasic6Parser.NULL || _la===VisualBasic6Parser.TRUE || ((((_la - 202)) & ~0x1f) == 0 && ((1 << (_la - 202)) & ((1 << (VisualBasic6Parser.STRINGLITERAL - 202)) | (1 << (VisualBasic6Parser.DATELITERAL - 202)) | (1 << (VisualBasic6Parser.COLORLITERAL - 202)) | (1 << (VisualBasic6Parser.INTEGERLITERAL - 202)) | (1 << (VisualBasic6Parser.DOUBLELITERAL - 202)) | (1 << (VisualBasic6Parser.FILENUMBER - 202)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_type;
    return this;
}

TypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeContext.prototype.constructor = TypeContext;

TypeContext.prototype.baseType = function() {
    return this.getTypedRuleContext(BaseTypeContext,0);
};

TypeContext.prototype.complexType = function() {
    return this.getTypedRuleContext(ComplexTypeContext,0);
};

TypeContext.prototype.LPAREN = function() {
    return this.getToken(VisualBasic6Parser.LPAREN, 0);
};

TypeContext.prototype.RPAREN = function() {
    return this.getToken(VisualBasic6Parser.RPAREN, 0);
};

TypeContext.prototype.WS = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(VisualBasic6Parser.WS);
    } else {
        return this.getToken(VisualBasic6Parser.WS, i);
    }
};





VisualBasic6Parser.TypeContext = TypeContext;

VisualBasic6Parser.prototype.type = function() {

    var localctx = new TypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 270, VisualBasic6Parser.RULE_type);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2586;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,438,this._ctx);
        switch(la_) {
        case 1:
            this.state = 2584;
            this.baseType();
            break;

        case 2:
            this.state = 2585;
            this.complexType();
            break;

        }
        this.state = 2596;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,441,this._ctx);
        if(la_===1) {
            this.state = 2589;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2588;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2591;
            this.match(VisualBasic6Parser.LPAREN);
            this.state = 2593;
            _la = this._input.LA(1);
            if(_la===VisualBasic6Parser.WS) {
                this.state = 2592;
                this.match(VisualBasic6Parser.WS);
            }

            this.state = 2595;
            this.match(VisualBasic6Parser.RPAREN);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeHintContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_typeHint;
    return this;
}

TypeHintContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeHintContext.prototype.constructor = TypeHintContext;

TypeHintContext.prototype.AMPERSAND = function() {
    return this.getToken(VisualBasic6Parser.AMPERSAND, 0);
};

TypeHintContext.prototype.AT = function() {
    return this.getToken(VisualBasic6Parser.AT, 0);
};

TypeHintContext.prototype.DOLLAR = function() {
    return this.getToken(VisualBasic6Parser.DOLLAR, 0);
};

TypeHintContext.prototype.EXCLAMATIONMARK = function() {
    return this.getToken(VisualBasic6Parser.EXCLAMATIONMARK, 0);
};

TypeHintContext.prototype.HASH = function() {
    return this.getToken(VisualBasic6Parser.HASH, 0);
};

TypeHintContext.prototype.PERCENT = function() {
    return this.getToken(VisualBasic6Parser.PERCENT, 0);
};




VisualBasic6Parser.TypeHintContext = TypeHintContext;

VisualBasic6Parser.prototype.typeHint = function() {

    var localctx = new TypeHintContext(this, this._ctx, this.state);
    this.enterRule(localctx, 272, VisualBasic6Parser.RULE_typeHint);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2598;
        _la = this._input.LA(1);
        if(!(((((_la - 174)) & ~0x1f) == 0 && ((1 << (_la - 174)) & ((1 << (VisualBasic6Parser.AMPERSAND - 174)) | (1 << (VisualBasic6Parser.AT - 174)) | (1 << (VisualBasic6Parser.DOLLAR - 174)) | (1 << (VisualBasic6Parser.EXCLAMATIONMARK - 174)) | (1 << (VisualBasic6Parser.HASH - 174)) | (1 << (VisualBasic6Parser.PERCENT - 174)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VisibilityContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_visibility;
    return this;
}

VisibilityContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VisibilityContext.prototype.constructor = VisibilityContext;

VisibilityContext.prototype.PRIVATE = function() {
    return this.getToken(VisualBasic6Parser.PRIVATE, 0);
};

VisibilityContext.prototype.PUBLIC = function() {
    return this.getToken(VisualBasic6Parser.PUBLIC, 0);
};

VisibilityContext.prototype.FRIEND = function() {
    return this.getToken(VisualBasic6Parser.FRIEND, 0);
};

VisibilityContext.prototype.GLOBAL = function() {
    return this.getToken(VisualBasic6Parser.GLOBAL, 0);
};




VisualBasic6Parser.VisibilityContext = VisibilityContext;

VisualBasic6Parser.prototype.visibility = function() {

    var localctx = new VisibilityContext(this, this._ctx, this.state);
    this.enterRule(localctx, 274, VisualBasic6Parser.RULE_visibility);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2600;
        _la = this._input.LA(1);
        if(!(_la===VisualBasic6Parser.FRIEND || _la===VisualBasic6Parser.GLOBAL || _la===VisualBasic6Parser.PRIVATE || _la===VisualBasic6Parser.PUBLIC)) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AmbiguousKeywordContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = VisualBasic6Parser.RULE_ambiguousKeyword;
    return this;
}

AmbiguousKeywordContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AmbiguousKeywordContext.prototype.constructor = AmbiguousKeywordContext;

AmbiguousKeywordContext.prototype.ACCESS = function() {
    return this.getToken(VisualBasic6Parser.ACCESS, 0);
};

AmbiguousKeywordContext.prototype.ADDRESSOF = function() {
    return this.getToken(VisualBasic6Parser.ADDRESSOF, 0);
};

AmbiguousKeywordContext.prototype.ALIAS = function() {
    return this.getToken(VisualBasic6Parser.ALIAS, 0);
};

AmbiguousKeywordContext.prototype.AND = function() {
    return this.getToken(VisualBasic6Parser.AND, 0);
};

AmbiguousKeywordContext.prototype.ATTRIBUTE = function() {
    return this.getToken(VisualBasic6Parser.ATTRIBUTE, 0);
};

AmbiguousKeywordContext.prototype.APPACTIVATE = function() {
    return this.getToken(VisualBasic6Parser.APPACTIVATE, 0);
};

AmbiguousKeywordContext.prototype.APPEND = function() {
    return this.getToken(VisualBasic6Parser.APPEND, 0);
};

AmbiguousKeywordContext.prototype.AS = function() {
    return this.getToken(VisualBasic6Parser.AS, 0);
};

AmbiguousKeywordContext.prototype.BEEP = function() {
    return this.getToken(VisualBasic6Parser.BEEP, 0);
};

AmbiguousKeywordContext.prototype.BEGIN = function() {
    return this.getToken(VisualBasic6Parser.BEGIN, 0);
};

AmbiguousKeywordContext.prototype.BINARY = function() {
    return this.getToken(VisualBasic6Parser.BINARY, 0);
};

AmbiguousKeywordContext.prototype.BOOLEAN = function() {
    return this.getToken(VisualBasic6Parser.BOOLEAN, 0);
};

AmbiguousKeywordContext.prototype.BYVAL = function() {
    return this.getToken(VisualBasic6Parser.BYVAL, 0);
};

AmbiguousKeywordContext.prototype.BYREF = function() {
    return this.getToken(VisualBasic6Parser.BYREF, 0);
};

AmbiguousKeywordContext.prototype.BYTE = function() {
    return this.getToken(VisualBasic6Parser.BYTE, 0);
};

AmbiguousKeywordContext.prototype.CALL = function() {
    return this.getToken(VisualBasic6Parser.CALL, 0);
};

AmbiguousKeywordContext.prototype.CASE = function() {
    return this.getToken(VisualBasic6Parser.CASE, 0);
};

AmbiguousKeywordContext.prototype.CLASS = function() {
    return this.getToken(VisualBasic6Parser.CLASS, 0);
};

AmbiguousKeywordContext.prototype.CLOSE = function() {
    return this.getToken(VisualBasic6Parser.CLOSE, 0);
};

AmbiguousKeywordContext.prototype.CHDIR = function() {
    return this.getToken(VisualBasic6Parser.CHDIR, 0);
};

AmbiguousKeywordContext.prototype.CHDRIVE = function() {
    return this.getToken(VisualBasic6Parser.CHDRIVE, 0);
};

AmbiguousKeywordContext.prototype.COLLECTION = function() {
    return this.getToken(VisualBasic6Parser.COLLECTION, 0);
};

AmbiguousKeywordContext.prototype.CONST = function() {
    return this.getToken(VisualBasic6Parser.CONST, 0);
};

AmbiguousKeywordContext.prototype.DATE = function() {
    return this.getToken(VisualBasic6Parser.DATE, 0);
};

AmbiguousKeywordContext.prototype.DECLARE = function() {
    return this.getToken(VisualBasic6Parser.DECLARE, 0);
};

AmbiguousKeywordContext.prototype.DEFBOOL = function() {
    return this.getToken(VisualBasic6Parser.DEFBOOL, 0);
};

AmbiguousKeywordContext.prototype.DEFBYTE = function() {
    return this.getToken(VisualBasic6Parser.DEFBYTE, 0);
};

AmbiguousKeywordContext.prototype.DEFCUR = function() {
    return this.getToken(VisualBasic6Parser.DEFCUR, 0);
};

AmbiguousKeywordContext.prototype.DEFDBL = function() {
    return this.getToken(VisualBasic6Parser.DEFDBL, 0);
};

AmbiguousKeywordContext.prototype.DEFDATE = function() {
    return this.getToken(VisualBasic6Parser.DEFDATE, 0);
};

AmbiguousKeywordContext.prototype.DEFDEC = function() {
    return this.getToken(VisualBasic6Parser.DEFDEC, 0);
};

AmbiguousKeywordContext.prototype.DEFINT = function() {
    return this.getToken(VisualBasic6Parser.DEFINT, 0);
};

AmbiguousKeywordContext.prototype.DEFLNG = function() {
    return this.getToken(VisualBasic6Parser.DEFLNG, 0);
};

AmbiguousKeywordContext.prototype.DEFOBJ = function() {
    return this.getToken(VisualBasic6Parser.DEFOBJ, 0);
};

AmbiguousKeywordContext.prototype.DEFSNG = function() {
    return this.getToken(VisualBasic6Parser.DEFSNG, 0);
};

AmbiguousKeywordContext.prototype.DEFSTR = function() {
    return this.getToken(VisualBasic6Parser.DEFSTR, 0);
};

AmbiguousKeywordContext.prototype.DEFVAR = function() {
    return this.getToken(VisualBasic6Parser.DEFVAR, 0);
};

AmbiguousKeywordContext.prototype.DELETESETTING = function() {
    return this.getToken(VisualBasic6Parser.DELETESETTING, 0);
};

AmbiguousKeywordContext.prototype.DIM = function() {
    return this.getToken(VisualBasic6Parser.DIM, 0);
};

AmbiguousKeywordContext.prototype.DO = function() {
    return this.getToken(VisualBasic6Parser.DO, 0);
};

AmbiguousKeywordContext.prototype.DOUBLE = function() {
    return this.getToken(VisualBasic6Parser.DOUBLE, 0);
};

AmbiguousKeywordContext.prototype.EACH = function() {
    return this.getToken(VisualBasic6Parser.EACH, 0);
};

AmbiguousKeywordContext.prototype.ELSE = function() {
    return this.getToken(VisualBasic6Parser.ELSE, 0);
};

AmbiguousKeywordContext.prototype.ELSEIF = function() {
    return this.getToken(VisualBasic6Parser.ELSEIF, 0);
};

AmbiguousKeywordContext.prototype.END = function() {
    return this.getToken(VisualBasic6Parser.END, 0);
};

AmbiguousKeywordContext.prototype.ENUM = function() {
    return this.getToken(VisualBasic6Parser.ENUM, 0);
};

AmbiguousKeywordContext.prototype.EQV = function() {
    return this.getToken(VisualBasic6Parser.EQV, 0);
};

AmbiguousKeywordContext.prototype.ERASE = function() {
    return this.getToken(VisualBasic6Parser.ERASE, 0);
};

AmbiguousKeywordContext.prototype.ERROR = function() {
    return this.getToken(VisualBasic6Parser.ERROR, 0);
};

AmbiguousKeywordContext.prototype.EVENT = function() {
    return this.getToken(VisualBasic6Parser.EVENT, 0);
};

AmbiguousKeywordContext.prototype.FALSE = function() {
    return this.getToken(VisualBasic6Parser.FALSE, 0);
};

AmbiguousKeywordContext.prototype.FILECOPY = function() {
    return this.getToken(VisualBasic6Parser.FILECOPY, 0);
};

AmbiguousKeywordContext.prototype.FRIEND = function() {
    return this.getToken(VisualBasic6Parser.FRIEND, 0);
};

AmbiguousKeywordContext.prototype.FOR = function() {
    return this.getToken(VisualBasic6Parser.FOR, 0);
};

AmbiguousKeywordContext.prototype.FUNCTION = function() {
    return this.getToken(VisualBasic6Parser.FUNCTION, 0);
};

AmbiguousKeywordContext.prototype.GET = function() {
    return this.getToken(VisualBasic6Parser.GET, 0);
};

AmbiguousKeywordContext.prototype.GLOBAL = function() {
    return this.getToken(VisualBasic6Parser.GLOBAL, 0);
};

AmbiguousKeywordContext.prototype.GOSUB = function() {
    return this.getToken(VisualBasic6Parser.GOSUB, 0);
};

AmbiguousKeywordContext.prototype.GOTO = function() {
    return this.getToken(VisualBasic6Parser.GOTO, 0);
};

AmbiguousKeywordContext.prototype.IF = function() {
    return this.getToken(VisualBasic6Parser.IF, 0);
};

AmbiguousKeywordContext.prototype.IMP = function() {
    return this.getToken(VisualBasic6Parser.IMP, 0);
};

AmbiguousKeywordContext.prototype.IMPLEMENTS = function() {
    return this.getToken(VisualBasic6Parser.IMPLEMENTS, 0);
};

AmbiguousKeywordContext.prototype.IN = function() {
    return this.getToken(VisualBasic6Parser.IN, 0);
};

AmbiguousKeywordContext.prototype.INPUT = function() {
    return this.getToken(VisualBasic6Parser.INPUT, 0);
};

AmbiguousKeywordContext.prototype.IS = function() {
    return this.getToken(VisualBasic6Parser.IS, 0);
};

AmbiguousKeywordContext.prototype.INTEGER = function() {
    return this.getToken(VisualBasic6Parser.INTEGER, 0);
};

AmbiguousKeywordContext.prototype.KILL = function() {
    return this.getToken(VisualBasic6Parser.KILL, 0);
};

AmbiguousKeywordContext.prototype.LOAD = function() {
    return this.getToken(VisualBasic6Parser.LOAD, 0);
};

AmbiguousKeywordContext.prototype.LOCK = function() {
    return this.getToken(VisualBasic6Parser.LOCK, 0);
};

AmbiguousKeywordContext.prototype.LONG = function() {
    return this.getToken(VisualBasic6Parser.LONG, 0);
};

AmbiguousKeywordContext.prototype.LOOP = function() {
    return this.getToken(VisualBasic6Parser.LOOP, 0);
};

AmbiguousKeywordContext.prototype.LEN = function() {
    return this.getToken(VisualBasic6Parser.LEN, 0);
};

AmbiguousKeywordContext.prototype.LET = function() {
    return this.getToken(VisualBasic6Parser.LET, 0);
};

AmbiguousKeywordContext.prototype.LIB = function() {
    return this.getToken(VisualBasic6Parser.LIB, 0);
};

AmbiguousKeywordContext.prototype.LIKE = function() {
    return this.getToken(VisualBasic6Parser.LIKE, 0);
};

AmbiguousKeywordContext.prototype.LSET = function() {
    return this.getToken(VisualBasic6Parser.LSET, 0);
};

AmbiguousKeywordContext.prototype.ME = function() {
    return this.getToken(VisualBasic6Parser.ME, 0);
};

AmbiguousKeywordContext.prototype.MID = function() {
    return this.getToken(VisualBasic6Parser.MID, 0);
};

AmbiguousKeywordContext.prototype.MKDIR = function() {
    return this.getToken(VisualBasic6Parser.MKDIR, 0);
};

AmbiguousKeywordContext.prototype.MOD = function() {
    return this.getToken(VisualBasic6Parser.MOD, 0);
};

AmbiguousKeywordContext.prototype.NAME = function() {
    return this.getToken(VisualBasic6Parser.NAME, 0);
};

AmbiguousKeywordContext.prototype.NEXT = function() {
    return this.getToken(VisualBasic6Parser.NEXT, 0);
};

AmbiguousKeywordContext.prototype.NEW = function() {
    return this.getToken(VisualBasic6Parser.NEW, 0);
};

AmbiguousKeywordContext.prototype.NOT = function() {
    return this.getToken(VisualBasic6Parser.NOT, 0);
};

AmbiguousKeywordContext.prototype.NOTHING = function() {
    return this.getToken(VisualBasic6Parser.NOTHING, 0);
};

AmbiguousKeywordContext.prototype.NULL = function() {
    return this.getToken(VisualBasic6Parser.NULL, 0);
};

AmbiguousKeywordContext.prototype.ON = function() {
    return this.getToken(VisualBasic6Parser.ON, 0);
};

AmbiguousKeywordContext.prototype.OPEN = function() {
    return this.getToken(VisualBasic6Parser.OPEN, 0);
};

AmbiguousKeywordContext.prototype.OPTIONAL = function() {
    return this.getToken(VisualBasic6Parser.OPTIONAL, 0);
};

AmbiguousKeywordContext.prototype.OR = function() {
    return this.getToken(VisualBasic6Parser.OR, 0);
};

AmbiguousKeywordContext.prototype.OUTPUT = function() {
    return this.getToken(VisualBasic6Parser.OUTPUT, 0);
};

AmbiguousKeywordContext.prototype.PARAMARRAY = function() {
    return this.getToken(VisualBasic6Parser.PARAMARRAY, 0);
};

AmbiguousKeywordContext.prototype.PRESERVE = function() {
    return this.getToken(VisualBasic6Parser.PRESERVE, 0);
};

AmbiguousKeywordContext.prototype.PRINT = function() {
    return this.getToken(VisualBasic6Parser.PRINT, 0);
};

AmbiguousKeywordContext.prototype.PRIVATE = function() {
    return this.getToken(VisualBasic6Parser.PRIVATE, 0);
};

AmbiguousKeywordContext.prototype.PUBLIC = function() {
    return this.getToken(VisualBasic6Parser.PUBLIC, 0);
};

AmbiguousKeywordContext.prototype.PUT = function() {
    return this.getToken(VisualBasic6Parser.PUT, 0);
};

AmbiguousKeywordContext.prototype.RANDOM = function() {
    return this.getToken(VisualBasic6Parser.RANDOM, 0);
};

AmbiguousKeywordContext.prototype.RANDOMIZE = function() {
    return this.getToken(VisualBasic6Parser.RANDOMIZE, 0);
};

AmbiguousKeywordContext.prototype.RAISEEVENT = function() {
    return this.getToken(VisualBasic6Parser.RAISEEVENT, 0);
};

AmbiguousKeywordContext.prototype.READ = function() {
    return this.getToken(VisualBasic6Parser.READ, 0);
};

AmbiguousKeywordContext.prototype.REDIM = function() {
    return this.getToken(VisualBasic6Parser.REDIM, 0);
};

AmbiguousKeywordContext.prototype.REM = function() {
    return this.getToken(VisualBasic6Parser.REM, 0);
};

AmbiguousKeywordContext.prototype.RESET = function() {
    return this.getToken(VisualBasic6Parser.RESET, 0);
};

AmbiguousKeywordContext.prototype.RESUME = function() {
    return this.getToken(VisualBasic6Parser.RESUME, 0);
};

AmbiguousKeywordContext.prototype.RETURN = function() {
    return this.getToken(VisualBasic6Parser.RETURN, 0);
};

AmbiguousKeywordContext.prototype.RMDIR = function() {
    return this.getToken(VisualBasic6Parser.RMDIR, 0);
};

AmbiguousKeywordContext.prototype.RSET = function() {
    return this.getToken(VisualBasic6Parser.RSET, 0);
};

AmbiguousKeywordContext.prototype.SAVEPICTURE = function() {
    return this.getToken(VisualBasic6Parser.SAVEPICTURE, 0);
};

AmbiguousKeywordContext.prototype.SAVESETTING = function() {
    return this.getToken(VisualBasic6Parser.SAVESETTING, 0);
};

AmbiguousKeywordContext.prototype.SEEK = function() {
    return this.getToken(VisualBasic6Parser.SEEK, 0);
};

AmbiguousKeywordContext.prototype.SELECT = function() {
    return this.getToken(VisualBasic6Parser.SELECT, 0);
};

AmbiguousKeywordContext.prototype.SENDKEYS = function() {
    return this.getToken(VisualBasic6Parser.SENDKEYS, 0);
};

AmbiguousKeywordContext.prototype.SET = function() {
    return this.getToken(VisualBasic6Parser.SET, 0);
};

AmbiguousKeywordContext.prototype.SETATTR = function() {
    return this.getToken(VisualBasic6Parser.SETATTR, 0);
};

AmbiguousKeywordContext.prototype.SHARED = function() {
    return this.getToken(VisualBasic6Parser.SHARED, 0);
};

AmbiguousKeywordContext.prototype.SINGLE = function() {
    return this.getToken(VisualBasic6Parser.SINGLE, 0);
};

AmbiguousKeywordContext.prototype.SPC = function() {
    return this.getToken(VisualBasic6Parser.SPC, 0);
};

AmbiguousKeywordContext.prototype.STATIC = function() {
    return this.getToken(VisualBasic6Parser.STATIC, 0);
};

AmbiguousKeywordContext.prototype.STEP = function() {
    return this.getToken(VisualBasic6Parser.STEP, 0);
};

AmbiguousKeywordContext.prototype.STOP = function() {
    return this.getToken(VisualBasic6Parser.STOP, 0);
};

AmbiguousKeywordContext.prototype.STRING = function() {
    return this.getToken(VisualBasic6Parser.STRING, 0);
};

AmbiguousKeywordContext.prototype.SUB = function() {
    return this.getToken(VisualBasic6Parser.SUB, 0);
};

AmbiguousKeywordContext.prototype.TAB = function() {
    return this.getToken(VisualBasic6Parser.TAB, 0);
};

AmbiguousKeywordContext.prototype.TEXT = function() {
    return this.getToken(VisualBasic6Parser.TEXT, 0);
};

AmbiguousKeywordContext.prototype.THEN = function() {
    return this.getToken(VisualBasic6Parser.THEN, 0);
};

AmbiguousKeywordContext.prototype.TIME = function() {
    return this.getToken(VisualBasic6Parser.TIME, 0);
};

AmbiguousKeywordContext.prototype.TO = function() {
    return this.getToken(VisualBasic6Parser.TO, 0);
};

AmbiguousKeywordContext.prototype.TRUE = function() {
    return this.getToken(VisualBasic6Parser.TRUE, 0);
};

AmbiguousKeywordContext.prototype.TYPE = function() {
    return this.getToken(VisualBasic6Parser.TYPE, 0);
};

AmbiguousKeywordContext.prototype.TYPEOF = function() {
    return this.getToken(VisualBasic6Parser.TYPEOF, 0);
};

AmbiguousKeywordContext.prototype.UNLOAD = function() {
    return this.getToken(VisualBasic6Parser.UNLOAD, 0);
};

AmbiguousKeywordContext.prototype.UNLOCK = function() {
    return this.getToken(VisualBasic6Parser.UNLOCK, 0);
};

AmbiguousKeywordContext.prototype.UNTIL = function() {
    return this.getToken(VisualBasic6Parser.UNTIL, 0);
};

AmbiguousKeywordContext.prototype.VARIANT = function() {
    return this.getToken(VisualBasic6Parser.VARIANT, 0);
};

AmbiguousKeywordContext.prototype.VERSION = function() {
    return this.getToken(VisualBasic6Parser.VERSION, 0);
};

AmbiguousKeywordContext.prototype.WEND = function() {
    return this.getToken(VisualBasic6Parser.WEND, 0);
};

AmbiguousKeywordContext.prototype.WHILE = function() {
    return this.getToken(VisualBasic6Parser.WHILE, 0);
};

AmbiguousKeywordContext.prototype.WIDTH = function() {
    return this.getToken(VisualBasic6Parser.WIDTH, 0);
};

AmbiguousKeywordContext.prototype.WITH = function() {
    return this.getToken(VisualBasic6Parser.WITH, 0);
};

AmbiguousKeywordContext.prototype.WITHEVENTS = function() {
    return this.getToken(VisualBasic6Parser.WITHEVENTS, 0);
};

AmbiguousKeywordContext.prototype.WRITE = function() {
    return this.getToken(VisualBasic6Parser.WRITE, 0);
};

AmbiguousKeywordContext.prototype.XOR = function() {
    return this.getToken(VisualBasic6Parser.XOR, 0);
};




VisualBasic6Parser.AmbiguousKeywordContext = AmbiguousKeywordContext;

VisualBasic6Parser.prototype.ambiguousKeyword = function() {

    var localctx = new AmbiguousKeywordContext(this, this._ctx, this.state);
    this.enterRule(localctx, 276, VisualBasic6Parser.RULE_ambiguousKeyword);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2602;
        _la = this._input.LA(1);
        if(!((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << VisualBasic6Parser.ACCESS) | (1 << VisualBasic6Parser.ADDRESSOF) | (1 << VisualBasic6Parser.ALIAS) | (1 << VisualBasic6Parser.AND) | (1 << VisualBasic6Parser.ATTRIBUTE) | (1 << VisualBasic6Parser.APPACTIVATE) | (1 << VisualBasic6Parser.APPEND) | (1 << VisualBasic6Parser.AS) | (1 << VisualBasic6Parser.BEGIN) | (1 << VisualBasic6Parser.BEEP) | (1 << VisualBasic6Parser.BINARY) | (1 << VisualBasic6Parser.BOOLEAN) | (1 << VisualBasic6Parser.BYVAL) | (1 << VisualBasic6Parser.BYREF) | (1 << VisualBasic6Parser.BYTE) | (1 << VisualBasic6Parser.CALL) | (1 << VisualBasic6Parser.CASE) | (1 << VisualBasic6Parser.CHDIR) | (1 << VisualBasic6Parser.CHDRIVE) | (1 << VisualBasic6Parser.CLASS) | (1 << VisualBasic6Parser.CLOSE) | (1 << VisualBasic6Parser.COLLECTION) | (1 << VisualBasic6Parser.CONST) | (1 << VisualBasic6Parser.DATE) | (1 << VisualBasic6Parser.DECLARE) | (1 << VisualBasic6Parser.DEFBOOL) | (1 << VisualBasic6Parser.DEFBYTE) | (1 << VisualBasic6Parser.DEFDATE) | (1 << VisualBasic6Parser.DEFDBL) | (1 << VisualBasic6Parser.DEFDEC) | (1 << VisualBasic6Parser.DEFCUR))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (VisualBasic6Parser.DEFINT - 32)) | (1 << (VisualBasic6Parser.DEFLNG - 32)) | (1 << (VisualBasic6Parser.DEFOBJ - 32)) | (1 << (VisualBasic6Parser.DEFSNG - 32)) | (1 << (VisualBasic6Parser.DEFSTR - 32)) | (1 << (VisualBasic6Parser.DEFVAR - 32)) | (1 << (VisualBasic6Parser.DELETESETTING - 32)) | (1 << (VisualBasic6Parser.DIM - 32)) | (1 << (VisualBasic6Parser.DO - 32)) | (1 << (VisualBasic6Parser.DOUBLE - 32)) | (1 << (VisualBasic6Parser.EACH - 32)) | (1 << (VisualBasic6Parser.ELSE - 32)) | (1 << (VisualBasic6Parser.ELSEIF - 32)) | (1 << (VisualBasic6Parser.END - 32)) | (1 << (VisualBasic6Parser.ENUM - 32)) | (1 << (VisualBasic6Parser.EQV - 32)) | (1 << (VisualBasic6Parser.ERASE - 32)) | (1 << (VisualBasic6Parser.ERROR - 32)) | (1 << (VisualBasic6Parser.EVENT - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (VisualBasic6Parser.FALSE - 64)) | (1 << (VisualBasic6Parser.FILECOPY - 64)) | (1 << (VisualBasic6Parser.FRIEND - 64)) | (1 << (VisualBasic6Parser.FOR - 64)) | (1 << (VisualBasic6Parser.FUNCTION - 64)) | (1 << (VisualBasic6Parser.GET - 64)) | (1 << (VisualBasic6Parser.GLOBAL - 64)) | (1 << (VisualBasic6Parser.GOSUB - 64)) | (1 << (VisualBasic6Parser.GOTO - 64)) | (1 << (VisualBasic6Parser.IF - 64)) | (1 << (VisualBasic6Parser.IMP - 64)) | (1 << (VisualBasic6Parser.IMPLEMENTS - 64)) | (1 << (VisualBasic6Parser.IN - 64)) | (1 << (VisualBasic6Parser.INPUT - 64)) | (1 << (VisualBasic6Parser.IS - 64)) | (1 << (VisualBasic6Parser.INTEGER - 64)) | (1 << (VisualBasic6Parser.KILL - 64)) | (1 << (VisualBasic6Parser.LOAD - 64)) | (1 << (VisualBasic6Parser.LOCK - 64)) | (1 << (VisualBasic6Parser.LONG - 64)) | (1 << (VisualBasic6Parser.LOOP - 64)) | (1 << (VisualBasic6Parser.LEN - 64)) | (1 << (VisualBasic6Parser.LET - 64)) | (1 << (VisualBasic6Parser.LIB - 64)) | (1 << (VisualBasic6Parser.LIKE - 64)) | (1 << (VisualBasic6Parser.LSET - 64)))) !== 0) || ((((_la - 98)) & ~0x1f) == 0 && ((1 << (_la - 98)) & ((1 << (VisualBasic6Parser.ME - 98)) | (1 << (VisualBasic6Parser.MID - 98)) | (1 << (VisualBasic6Parser.MKDIR - 98)) | (1 << (VisualBasic6Parser.MOD - 98)) | (1 << (VisualBasic6Parser.NAME - 98)) | (1 << (VisualBasic6Parser.NEXT - 98)) | (1 << (VisualBasic6Parser.NEW - 98)) | (1 << (VisualBasic6Parser.NOT - 98)) | (1 << (VisualBasic6Parser.NOTHING - 98)) | (1 << (VisualBasic6Parser.NULL - 98)) | (1 << (VisualBasic6Parser.ON - 98)) | (1 << (VisualBasic6Parser.OPEN - 98)) | (1 << (VisualBasic6Parser.OPTIONAL - 98)) | (1 << (VisualBasic6Parser.OR - 98)) | (1 << (VisualBasic6Parser.OUTPUT - 98)) | (1 << (VisualBasic6Parser.PARAMARRAY - 98)) | (1 << (VisualBasic6Parser.PRESERVE - 98)) | (1 << (VisualBasic6Parser.PRINT - 98)) | (1 << (VisualBasic6Parser.PRIVATE - 98)) | (1 << (VisualBasic6Parser.PUBLIC - 98)) | (1 << (VisualBasic6Parser.PUT - 98)) | (1 << (VisualBasic6Parser.RANDOM - 98)) | (1 << (VisualBasic6Parser.RANDOMIZE - 98)) | (1 << (VisualBasic6Parser.RAISEEVENT - 98)))) !== 0) || ((((_la - 130)) & ~0x1f) == 0 && ((1 << (_la - 130)) & ((1 << (VisualBasic6Parser.READ - 130)) | (1 << (VisualBasic6Parser.REDIM - 130)) | (1 << (VisualBasic6Parser.REM - 130)) | (1 << (VisualBasic6Parser.RESET - 130)) | (1 << (VisualBasic6Parser.RESUME - 130)) | (1 << (VisualBasic6Parser.RETURN - 130)) | (1 << (VisualBasic6Parser.RMDIR - 130)) | (1 << (VisualBasic6Parser.RSET - 130)) | (1 << (VisualBasic6Parser.SAVEPICTURE - 130)) | (1 << (VisualBasic6Parser.SAVESETTING - 130)) | (1 << (VisualBasic6Parser.SEEK - 130)) | (1 << (VisualBasic6Parser.SELECT - 130)) | (1 << (VisualBasic6Parser.SENDKEYS - 130)) | (1 << (VisualBasic6Parser.SET - 130)) | (1 << (VisualBasic6Parser.SETATTR - 130)) | (1 << (VisualBasic6Parser.SHARED - 130)) | (1 << (VisualBasic6Parser.SINGLE - 130)) | (1 << (VisualBasic6Parser.SPC - 130)) | (1 << (VisualBasic6Parser.STATIC - 130)) | (1 << (VisualBasic6Parser.STEP - 130)) | (1 << (VisualBasic6Parser.STOP - 130)) | (1 << (VisualBasic6Parser.STRING - 130)) | (1 << (VisualBasic6Parser.SUB - 130)) | (1 << (VisualBasic6Parser.TAB - 130)) | (1 << (VisualBasic6Parser.TEXT - 130)) | (1 << (VisualBasic6Parser.THEN - 130)) | (1 << (VisualBasic6Parser.TIME - 130)) | (1 << (VisualBasic6Parser.TO - 130)) | (1 << (VisualBasic6Parser.TRUE - 130)) | (1 << (VisualBasic6Parser.TYPE - 130)) | (1 << (VisualBasic6Parser.TYPEOF - 130)))) !== 0) || ((((_la - 162)) & ~0x1f) == 0 && ((1 << (_la - 162)) & ((1 << (VisualBasic6Parser.UNLOAD - 162)) | (1 << (VisualBasic6Parser.UNLOCK - 162)) | (1 << (VisualBasic6Parser.UNTIL - 162)) | (1 << (VisualBasic6Parser.VARIANT - 162)) | (1 << (VisualBasic6Parser.VERSION - 162)) | (1 << (VisualBasic6Parser.WEND - 162)) | (1 << (VisualBasic6Parser.WHILE - 162)) | (1 << (VisualBasic6Parser.WIDTH - 162)) | (1 << (VisualBasic6Parser.WITH - 162)) | (1 << (VisualBasic6Parser.WITHEVENTS - 162)) | (1 << (VisualBasic6Parser.WRITE - 162)) | (1 << (VisualBasic6Parser.XOR - 162)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


VisualBasic6Parser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch(ruleIndex) {
	case 97:
			return this.valueStmt_sempred(localctx, predIndex);
    default:
        throw "No predicate with index:" + ruleIndex;
   }
};

VisualBasic6Parser.prototype.valueStmt_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.precpred(this._ctx, 23);
		case 1:
			return this.precpred(this._ctx, 22);
		case 2:
			return this.precpred(this._ctx, 21);
		case 3:
			return this.precpred(this._ctx, 20);
		case 4:
			return this.precpred(this._ctx, 19);
		case 5:
			return this.precpred(this._ctx, 18);
		case 6:
			return this.precpred(this._ctx, 17);
		case 7:
			return this.precpred(this._ctx, 16);
		case 8:
			return this.precpred(this._ctx, 15);
		case 9:
			return this.precpred(this._ctx, 12);
		case 10:
			return this.precpred(this._ctx, 11);
		case 11:
			return this.precpred(this._ctx, 10);
		case 12:
			return this.precpred(this._ctx, 9);
		case 13:
			return this.precpred(this._ctx, 8);
		case 14:
			return this.precpred(this._ctx, 7);
		case 15:
			return this.precpred(this._ctx, 6);
		case 16:
			return this.precpred(this._ctx, 5);
		case 17:
			return this.precpred(this._ctx, 4);
		case 18:
			return this.precpred(this._ctx, 3);
		case 19:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};


exports.VisualBasic6Parser = VisualBasic6Parser;
