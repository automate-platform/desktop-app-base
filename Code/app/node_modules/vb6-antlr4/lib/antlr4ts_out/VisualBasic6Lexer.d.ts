import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class VisualBasic6Lexer extends Lexer {
    static readonly ACCESS = 1;
    static readonly ADDRESSOF = 2;
    static readonly ALIAS = 3;
    static readonly AND = 4;
    static readonly ATTRIBUTE = 5;
    static readonly APPACTIVATE = 6;
    static readonly APPEND = 7;
    static readonly AS = 8;
    static readonly BEEP = 9;
    static readonly BEGIN = 10;
    static readonly BEGINPROPERTY = 11;
    static readonly BINARY = 12;
    static readonly BOOLEAN = 13;
    static readonly BYVAL = 14;
    static readonly BYREF = 15;
    static readonly BYTE = 16;
    static readonly CALL = 17;
    static readonly CASE = 18;
    static readonly CHDIR = 19;
    static readonly CHDRIVE = 20;
    static readonly CLASS = 21;
    static readonly CLOSE = 22;
    static readonly COLLECTION = 23;
    static readonly CONST = 24;
    static readonly DATE = 25;
    static readonly DECLARE = 26;
    static readonly DEFBOOL = 27;
    static readonly DEFBYTE = 28;
    static readonly DEFDATE = 29;
    static readonly DEFDBL = 30;
    static readonly DEFDEC = 31;
    static readonly DEFCUR = 32;
    static readonly DEFINT = 33;
    static readonly DEFLNG = 34;
    static readonly DEFOBJ = 35;
    static readonly DEFSNG = 36;
    static readonly DEFSTR = 37;
    static readonly DEFVAR = 38;
    static readonly DELETESETTING = 39;
    static readonly DIM = 40;
    static readonly DO = 41;
    static readonly DOUBLE = 42;
    static readonly EACH = 43;
    static readonly ELSE = 44;
    static readonly ELSEIF = 45;
    static readonly END_ENUM = 46;
    static readonly END_FUNCTION = 47;
    static readonly END_IF = 48;
    static readonly END_PROPERTY = 49;
    static readonly END_SELECT = 50;
    static readonly END_SUB = 51;
    static readonly END_TYPE = 52;
    static readonly END_WITH = 53;
    static readonly END = 54;
    static readonly ENDPROPERTY = 55;
    static readonly ENUM = 56;
    static readonly EQV = 57;
    static readonly ERASE = 58;
    static readonly ERROR = 59;
    static readonly EVENT = 60;
    static readonly EXIT_DO = 61;
    static readonly EXIT_FOR = 62;
    static readonly EXIT_FUNCTION = 63;
    static readonly EXIT_PROPERTY = 64;
    static readonly EXIT_SUB = 65;
    static readonly FALSE = 66;
    static readonly FILECOPY = 67;
    static readonly FRIEND = 68;
    static readonly FOR = 69;
    static readonly FUNCTION = 70;
    static readonly GET = 71;
    static readonly GLOBAL = 72;
    static readonly GOSUB = 73;
    static readonly GOTO = 74;
    static readonly IF = 75;
    static readonly IMP = 76;
    static readonly IMPLEMENTS = 77;
    static readonly IN = 78;
    static readonly INPUT = 79;
    static readonly IS = 80;
    static readonly INTEGER = 81;
    static readonly KILL = 82;
    static readonly LOAD = 83;
    static readonly LOCK = 84;
    static readonly LONG = 85;
    static readonly LOOP = 86;
    static readonly LEN = 87;
    static readonly LET = 88;
    static readonly LIB = 89;
    static readonly LIKE = 90;
    static readonly LINE_INPUT = 91;
    static readonly LOCK_READ = 92;
    static readonly LOCK_WRITE = 93;
    static readonly LOCK_READ_WRITE = 94;
    static readonly LSET = 95;
    static readonly MACRO_IF = 96;
    static readonly MACRO_ELSEIF = 97;
    static readonly MACRO_ELSE = 98;
    static readonly MACRO_END_IF = 99;
    static readonly ME = 100;
    static readonly MID = 101;
    static readonly MKDIR = 102;
    static readonly MOD = 103;
    static readonly NAME = 104;
    static readonly NEXT = 105;
    static readonly NEW = 106;
    static readonly NOT = 107;
    static readonly NOTHING = 108;
    static readonly NULL = 109;
    static readonly OBJECT = 110;
    static readonly ON = 111;
    static readonly ON_ERROR = 112;
    static readonly ON_LOCAL_ERROR = 113;
    static readonly OPEN = 114;
    static readonly OPTIONAL = 115;
    static readonly OPTION_BASE = 116;
    static readonly OPTION_EXPLICIT = 117;
    static readonly OPTION_COMPARE = 118;
    static readonly OPTION_PRIVATE_MODULE = 119;
    static readonly OR = 120;
    static readonly OUTPUT = 121;
    static readonly PARAMARRAY = 122;
    static readonly PRESERVE = 123;
    static readonly PRINT = 124;
    static readonly PRIVATE = 125;
    static readonly PROPERTY_GET = 126;
    static readonly PROPERTY_LET = 127;
    static readonly PROPERTY_SET = 128;
    static readonly PUBLIC = 129;
    static readonly PUT = 130;
    static readonly RANDOM = 131;
    static readonly RANDOMIZE = 132;
    static readonly RAISEEVENT = 133;
    static readonly READ = 134;
    static readonly READ_WRITE = 135;
    static readonly REDIM = 136;
    static readonly REM = 137;
    static readonly RESET = 138;
    static readonly RESUME = 139;
    static readonly RETURN = 140;
    static readonly RMDIR = 141;
    static readonly RSET = 142;
    static readonly SAVEPICTURE = 143;
    static readonly SAVESETTING = 144;
    static readonly SEEK = 145;
    static readonly SELECT = 146;
    static readonly SENDKEYS = 147;
    static readonly SET = 148;
    static readonly SETATTR = 149;
    static readonly SHARED = 150;
    static readonly SINGLE = 151;
    static readonly SPC = 152;
    static readonly STATIC = 153;
    static readonly STEP = 154;
    static readonly STOP = 155;
    static readonly STRING = 156;
    static readonly SUB = 157;
    static readonly TAB = 158;
    static readonly TEXT = 159;
    static readonly THEN = 160;
    static readonly TIME = 161;
    static readonly TO = 162;
    static readonly TRUE = 163;
    static readonly TYPE = 164;
    static readonly TYPEOF = 165;
    static readonly UNLOAD = 166;
    static readonly UNLOCK = 167;
    static readonly UNTIL = 168;
    static readonly VARIANT = 169;
    static readonly VERSION = 170;
    static readonly WEND = 171;
    static readonly WHILE = 172;
    static readonly WIDTH = 173;
    static readonly WITH = 174;
    static readonly WITHEVENTS = 175;
    static readonly WRITE = 176;
    static readonly XOR = 177;
    static readonly AMPERSAND = 178;
    static readonly ASSIGN = 179;
    static readonly AT = 180;
    static readonly COLON = 181;
    static readonly COMMA = 182;
    static readonly DIV = 183;
    static readonly DOLLAR = 184;
    static readonly DOT = 185;
    static readonly EQ = 186;
    static readonly EXCLAMATIONMARK = 187;
    static readonly GEQ = 188;
    static readonly GT = 189;
    static readonly HASH = 190;
    static readonly LEQ = 191;
    static readonly LBRACE = 192;
    static readonly LPAREN = 193;
    static readonly LT = 194;
    static readonly MINUS = 195;
    static readonly MINUS_EQ = 196;
    static readonly MULT = 197;
    static readonly NEQ = 198;
    static readonly PERCENT = 199;
    static readonly PLUS = 200;
    static readonly PLUS_EQ = 201;
    static readonly POW = 202;
    static readonly RBRACE = 203;
    static readonly RPAREN = 204;
    static readonly SEMICOLON = 205;
    static readonly L_SQUARE_BRACKET = 206;
    static readonly R_SQUARE_BRACKET = 207;
    static readonly STRINGLITERAL = 208;
    static readonly DATELITERAL = 209;
    static readonly COLORLITERAL = 210;
    static readonly INTEGERLITERAL = 211;
    static readonly DOUBLELITERAL = 212;
    static readonly FILENUMBER = 213;
    static readonly OCTALLITERAL = 214;
    static readonly FRX_OFFSET = 215;
    static readonly GUID = 216;
    static readonly IDENTIFIER = 217;
    static readonly LINE_CONTINUATION = 218;
    static readonly NEWLINE = 219;
    static readonly COMMENT = 220;
    static readonly WS = 221;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    private static readonly _serializedATNSegments;
    private static readonly _serializedATNSegment0;
    private static readonly _serializedATNSegment1;
    private static readonly _serializedATNSegment2;
    private static readonly _serializedATNSegment3;
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
